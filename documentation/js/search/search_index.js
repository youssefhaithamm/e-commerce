var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AllOrderComponent.html",[0,0.417,1,1.044]],["body/components/AllOrderComponent.html",[0,0.564,1,1.553,2,1.256,3,0.117,4,0.117,5,0.904,6,0.904,7,0.904,8,0.101,9,5.644,10,5.644,11,2.538,12,1.786,13,2.225,14,2.65,15,0.861,16,2.246,17,2.038,18,4.311,19,1.319,20,4.311,21,1.319,22,4.311,23,0.384,24,0.386,25,1.483,26,1.635,27,5.089,28,5.594,29,4.311,30,4.311,31,1.034,32,4.371,33,2.913,34,2.446,35,1.538,36,2.955,37,1.221,38,0.019,39,2.008,40,2.955,41,2.955,42,1.557,43,1.557,44,3.703,45,2.955,46,0.261,47,1.885,48,2.955,49,2.587,50,1.53,51,2.955,52,2.955,53,1.099,54,0.861,55,0.551,56,1.895,57,2.538,58,1.292,59,2.955,60,0.904,61,0.904,62,0.117,63,0.581,64,2.955,65,2.955,66,2.955,67,2.955,68,2.955,69,2.955,70,2.955,71,2.955,72,1.292,73,2.955,74,1.895,75,2.955,76,5.594,77,3.234,78,4.311,79,2.741,80,3.703,81,4.311,82,4.311,83,4.311,84,3.003,85,4.311,86,1.455,87,4.311,88,1.14,89,4.311,90,2.764,91,3.003,92,3.003,93,5.594,94,4.311,95,2.764,96,0.904,97,1.319,98,1.319,99,0.904,100,1.712,101,0.904,102,0.171,103,0.904,104,0.82,105,0.904,106,0.82,107,0.904,108,1.319,109,0.82,110,0.904,111,0.82,112,0.904,113,0.82,114,0.904,115,0.82,116,0.904,117,0.82,118,0.904,119,0.82,120,0.904,121,0.82,122,0.904,123,0.82,124,0.904,125,0.82,126,0.904,127,0.82,128,0.904,129,0.82,130,0.904,131,0.82,132,0.904,133,0.82,134,0.904,135,0.82,136,0.904,137,0.82,138,0.904,139,0.904,140,0.904,141,0.904,142,0.011,143,0.011]],["title/components/AppComponent.html",[0,0.417,104,1.044]],["body/components/AppComponent.html",[0,0.642,1,1.042,2,1.487,3,0.149,4,0.149,5,1.149,6,1.149,7,1.149,8,0.128,12,2.114,13,2.535,15,1.094,16,2.307,17,2.093,19,1.561,21,1.561,23,0.215,31,1.224,34,2.72,35,1.224,37,0.9,38,0.019,39,1.722,46,0.193,53,1.278,55,0.7,61,1.561,62,0.149,63,0.737,96,1.149,97,1.561,98,1.561,99,1.149,100,1.903,101,1.149,102,0.23,103,1.149,104,1.727,105,1.149,106,1.042,107,1.149,108,1.561,109,1.042,110,1.149,111,1.042,112,1.149,113,1.042,114,1.149,115,1.042,116,1.149,117,1.042,118,1.149,119,1.042,120,1.149,121,1.042,122,1.149,123,1.042,124,1.149,125,1.042,126,1.149,127,1.042,128,1.149,129,1.042,130,1.149,131,1.042,132,1.149,133,1.042,134,1.149,135,1.042,136,1.149,137,1.042,138,1.149,139,1.149,140,1.149,141,1.149,142,0.013,143,0.013,144,3.224,145,2.501,146,3.908,147,5.103,148,5.103,149,5.103,150,1.84,151,3.754,152,4.301,153,3.754,154,1.206,155,1.206,156,3.754,157,3.754,158,3.754,159,3.754,160,1.401,161,3.224,162,2.085,163,2.406,164,3.754,165,2.233,166,3.754,167,3.754,168,3.754,169,3.754,170,5.103]],["title/components/AuthLayoutComponent.html",[0,0.417,106,1.044]],["body/components/AuthLayoutComponent.html",[0,0.668,1,1.127,2,1.568,3,0.161,4,0.161,5,1.243,6,1.243,7,1.243,8,0.138,15,1.183,16,2.325,17,2.109,19,1.646,21,1.646,38,0.019,53,1.261,55,0.758,61,1.646,62,0.161,63,0.798,96,1.243,97,1.646,98,1.646,99,1.243,100,1.965,101,1.243,102,0.214,103,1.243,104,1.127,105,1.243,106,1.783,107,2.143,108,1.646,109,1.127,110,1.243,111,1.127,112,1.243,113,1.127,114,1.243,115,1.127,116,1.243,117,1.127,118,1.243,119,1.127,120,1.243,121,1.783,122,1.243,123,1.127,124,1.243,125,1.127,126,1.243,127,1.127,128,1.243,129,1.783,130,1.243,131,1.127,132,1.243,133,1.127,134,1.243,135,1.127,136,1.243,137,1.127,138,1.243,139,1.243,140,1.243,141,1.243,142,0.013,143,0.013,146,4.62,160,1.516,171,3.488,172,3.488,173,3.11,174,4.62,175,4.62,176,4.62,177,3.488,178,3.488]],["title/injectables/AuthService.html",[179,1.208,180,2.088]],["body/injectables/AuthService.html",[3,0.145,4,0.145,8,0.124,23,0.209,24,0.447,25,1.79,26,1.834,31,1.199,35,1.708,37,1.634,38,0.019,39,1.687,42,1.529,43,1.529,46,0.35,53,1.306,54,1.061,55,0.68,60,1.114,62,0.145,63,0.716,102,0.264,142,0.012,143,0.012,145,1.785,150,2.45,154,2.136,155,2.136,160,1.36,179,1.606,180,2.776,181,1.785,182,3.128,183,3.975,184,4.999,185,4.901,186,5.707,187,4.999,188,4.999,189,4.999,190,4.999,191,4.999,192,2.023,193,3.693,194,3.642,195,3.642,196,3.642,197,3.642,198,5.453,199,3.642,200,4.93,201,3.693,202,3.642,203,3.642,204,3.642,205,3.642,206,3.642,207,3.642,208,3.642,209,3.642,210,2.335,211,3.642,212,1.897,213,3.642,214,3.642,215,3.128,216,3.128,217,1.897,218,2.023,219,2.335,220,1.897,221,3.642,222,3.642,223,3.642,224,2.666,225,3.642,226,3.642,227,3.642,228,3.642,229,3.128,230,3.642,231,3.642,232,3.128,233,3.642,234,4.293,235,3.128,236,3.642,237,3.642,238,3.642,239,3.642,240,3.642,241,3.642,242,3.642,243,3.642]],["title/components/BlankLayoutComponent.html",[0,0.417,109,1.044]],["body/components/BlankLayoutComponent.html",[0,0.668,1,1.125,2,1.566,3,0.161,4,0.161,5,1.24,6,1.24,7,1.24,8,0.138,15,1.181,16,2.325,17,2.109,19,1.644,21,1.644,38,0.019,53,1.261,54,1.181,55,0.756,61,1.644,62,0.161,63,0.796,96,1.24,97,1.644,98,1.644,99,1.24,100,1.963,101,1.24,102,0.213,103,1.24,104,1.125,105,1.24,106,1.125,107,1.24,108,1.644,109,1.781,110,2.142,111,1.125,112,1.24,113,1.125,114,1.24,115,1.125,116,1.24,117,1.125,118,1.24,119,1.125,120,1.24,121,1.781,122,1.24,123,1.125,124,1.24,125,1.125,126,1.24,127,1.125,128,1.24,129,1.781,130,1.24,131,1.125,132,1.24,133,1.125,134,1.24,135,1.125,136,1.24,137,1.125,138,1.24,139,1.24,140,1.24,141,1.24,142,0.013,143,0.013,146,4.615,160,1.513,173,3.104,174,4.614,175,4.614,176,4.614,177,3.481,178,3.481,244,3.481,245,3.481]],["title/interfaces/Brand.html",[246,0.262,247,0.947]],["body/interfaces/Brand.html",[3,0.161,4,0.161,8,0.138,23,0.232,24,0.48,38,0.019,46,0.329,47,1.769,58,2.346,62,0.282,86,1.366,88,1.07,102,0.278,142,0.013,143,0.013,246,0.496,247,1.615,248,1.019,249,1.983,250,1.92,251,1.764,252,1.813,253,0.977,254,2.784,255,2.107,256,1.789,257,2.107,258,2.107,259,2.107,260,2.107,261,1.904,262,2.107,263,2.784,264,2.107,265,2.107,266,1.07,267,1.07,268,0.853,269,1.871,270,2.346,271,1.983,272,1.769,273,1.516,274,1.244,275,1.51,276,1.123,277,1.179,278,1.393,279,1.179]],["title/components/BrandsComponent.html",[0,0.417,111,1.044]],["body/components/BrandsComponent.html",[0,0.562,1,0.817,2,1.252,3,0.117,4,0.117,5,0.9,6,0.9,7,0.9,8,0.1,12,1.78,13,1.879,14,2.238,15,0.858,16,2.245,17,2.037,19,1.315,21,1.315,23,0.169,24,0.385,25,1.479,26,1.631,31,1.031,33,2.908,34,2.441,35,1.654,37,1.487,38,0.019,39,2.216,42,1.817,43,1.817,46,0.318,49,2.582,50,1.525,53,1.167,54,0.858,55,0.549,60,0.9,61,0.9,62,0.117,63,0.578,72,1.287,77,2.238,96,0.9,97,1.315,98,1.315,99,0.9,100,1.708,101,0.9,102,0.222,103,0.9,104,0.817,105,0.9,106,0.817,107,0.9,108,1.315,109,0.817,110,0.9,111,1.55,112,0.9,113,0.817,114,0.9,115,0.817,116,0.9,117,0.817,118,0.9,119,0.817,120,0.9,121,0.817,122,0.9,123,0.817,124,0.9,125,0.817,126,0.9,127,0.817,128,0.9,129,0.817,130,0.9,131,0.817,132,0.9,133,0.817,134,0.9,135,0.817,136,0.9,137,0.817,138,0.9,139,0.9,140,0.9,141,0.9,142,0.011,143,0.011,154,1.381,155,1.381,247,1.406,261,1.044,280,2.528,281,5.75,282,4.298,283,4.298,284,3.888,285,4.298,286,4.298,287,4.298,288,4.298,289,5.077,290,4.298,291,5.077,292,2.943,293,4.319,294,2.943,295,2.943,296,2.943,297,2.943,298,2.943,299,5.077,300,2.943,301,2.943,302,3.02,303,2.82,304,2.943,305,4.298,306,2.943,307,2.943,308,2.238,309,2.943,310,2.943,311,2.943,312,2.943,313,2.943,314,2.943,315,2.943,316,2.943,317,2.943,318,2.943,319,2.943,320,2.943,321,2.943,322,2.943,323,2.943,324,2.943,325,4.298,326,2.943,327,2.943,328,2.943,329,2.943,330,2.943,331,4.298,332,4.298,333,4.298,334,4.298]],["title/injectables/BrandsService.html",[179,1.208,284,2.619]],["body/injectables/BrandsService.html",[3,0.2,4,0.2,8,0.172,23,0.289,31,1.482,35,1.482,37,1.21,38,0.019,46,0.259,53,1.367,55,0.941,60,1.543,62,0.2,63,0.991,102,0.2,142,0.015,143,0.015,145,2.472,150,2.472,154,1.621,155,1.621,165,3.001,179,1.984,181,2.472,192,2.801,193,4.034,201,3.43,217,2.627,218,2.801,219,3.233,220,2.627,224,2.09,284,4.302,335,4.332,336,6.676,337,5.044,338,5.044,339,5.044,340,5.044]],["title/components/CartComponent.html",[0,0.417,113,1.044]],["body/components/CartComponent.html",[0,0.513,1,0.699,2,1.116,3,0.1,4,0.1,5,0.771,6,0.771,7,0.771,8,0.158,12,1.586,13,2.024,14,2.411,15,0.734,16,2.199,17,1.995,19,1.171,21,1.171,23,0.145,24,0.343,25,1.349,26,1.488,31,0.918,33,2.693,34,2.261,35,1.541,37,1.405,38,0.019,39,2.117,42,1.416,43,1.416,46,0.266,49,2.391,50,0.894,53,1.232,54,0.734,55,0.47,60,0.771,61,1.171,62,0.1,63,0.495,72,2.261,77,1.994,86,1.292,88,1.367,96,0.771,97,1.171,98,1.171,99,0.771,100,1.582,101,0.771,102,0.205,103,0.771,104,0.699,105,0.771,106,0.699,107,0.771,108,1.171,109,0.699,110,0.771,111,0.699,112,0.771,113,1.435,114,0.771,115,0.699,116,0.771,117,0.699,118,0.771,119,0.699,120,0.771,121,0.699,122,0.771,123,0.699,124,0.771,125,0.699,126,0.771,127,0.699,128,0.771,129,0.699,130,0.771,131,0.699,132,0.771,133,0.699,134,0.771,135,0.699,136,0.771,137,0.699,138,0.771,139,0.771,140,0.771,141,0.771,142,0.009,143,0.009,154,1.23,155,1.23,160,0.94,253,0.651,256,0.964,268,0.608,273,0.964,276,1.625,341,2.164,342,4.02,343,3.828,344,2.454,345,3.828,346,3.828,347,3.828,348,3.828,349,2.391,350,2.454,351,4.629,352,4.629,353,3.288,354,3.828,355,2.52,356,2.52,357,2.52,358,2.52,359,2.164,360,2.52,361,2.52,362,2.52,363,2.571,364,2.52,365,2.126,366,2.52,367,2.52,368,1.93,369,1.399,370,1.235,371,2.164,372,3.288,373,2.52,374,2.52,375,2.52,376,1.93,377,2.52,378,2.52,379,2.968,380,2.164,381,3.828,382,2.164,383,5.171,384,3.828,385,4.441,386,3.828,387,3.828,388,5.171,389,3.828,390,3.828,391,2.277,392,3.828,393,3.828,394,3.828,395,3.828,396,3.828,397,3.828,398,3.828,399,3.828,400,3.828,401,2.52,402,3.828,403,2.164,404,1.499,405,5.171,406,2.126,407,2.52,408,2.52,409,2.52,410,2.52,411,2.52,412,2.52,413,2.164,414,1.755,415,3.828,416,3.828,417,3.828,418,3.828,419,3.828,420,3.828,421,3.828,422,3.828,423,3.828,424,2.666,425,3.288,426,3.828,427,3.288,428,3.828,429,1.994,430,3.828]],["title/interfaces/CartItem.html",[58,1.644,246,0.262]],["body/interfaces/CartItem.html",[3,0.161,4,0.161,8,0.138,23,0.232,24,0.48,38,0.019,46,0.329,47,1.769,58,2.633,62,0.282,86,2.164,88,1.695,102,0.255,142,0.013,143,0.013,246,0.496,247,1.516,248,1.019,249,1.983,250,1.92,251,1.419,252,1.592,253,0.972,254,2.784,255,2.107,256,1.856,257,2.107,258,2.107,259,2.107,260,2.107,261,1.904,262,2.107,263,2.784,264,2.107,265,2.107,266,1.07,267,1.07,268,0.853,269,1.871,270,2.346,271,1.983,272,1.769,273,1.789,274,1.244,275,1.51,276,1.123,277,1.179,278,1.393,279,1.179]],["title/injectables/CartService.html",[179,1.208,349,1.739]],["body/injectables/CartService.html",[3,0.125,4,0.125,8,0.107,23,0.181,24,0.404,25,1.85,26,1.696,31,1.083,35,1.633,37,1.464,38,0.019,42,1.615,43,1.615,46,0.326,53,1.247,54,0.919,55,0.588,60,0.964,62,0.125,63,0.619,86,1.064,102,0.229,142,0.011,143,0.011,145,1.545,150,1.545,154,1.852,155,1.852,165,1.875,179,1.451,181,1.545,192,1.751,193,3.526,201,3.884,212,1.642,217,1.642,218,1.751,219,2.021,220,1.642,224,2.528,253,0.881,256,1.33,268,1.039,302,2.687,303,1.751,349,2.089,363,1.458,368,2.414,370,1.545,431,2.707,432,4.516,433,4.415,434,4.516,435,5.764,436,5.764,437,4.516,438,4.516,439,4.516,440,4.516,441,3.152,442,3.152,443,3.152,444,4.516,445,3.152,446,4.516,447,5.764,448,3.152,449,4.516,450,3.152,451,2.508,452,3.152,453,1.642,454,3.152,455,1.751,456,3.152,457,3.146,458,3.152,459,1.642,460,4.658,461,4.863,462,2.414,463,3.152,464,2.195,465,4.673,466,3.152,467,3.152,468,3.152,469,3.152]],["title/components/CategoriesComponent.html",[0,0.417,115,1.044]],["body/components/CategoriesComponent.html",[0,0.592,1,0.895,2,1.338,3,0.128,4,0.128,5,0.987,6,0.987,7,0.987,8,0.11,12,1.902,13,2.338,14,2.784,15,0.94,16,2.27,17,2.06,19,1.405,21,1.405,23,0.185,24,0.411,25,1.864,26,2.056,31,1.101,33,3.033,34,2.547,35,1.579,37,1.282,38,0.019,39,2.078,42,1.782,43,1.782,46,0.236,49,2.693,50,1.144,53,1.257,54,0.94,55,0.602,60,0.987,61,0.987,62,0.128,63,0.634,72,1.41,77,2.391,96,0.987,97,1.405,98,1.405,99,0.987,100,1.782,101,0.987,102,0.182,103,0.987,104,0.895,105,0.987,106,0.895,107,0.987,108,1.405,109,0.895,110,0.987,111,0.895,112,0.987,113,0.895,114,0.987,115,1.617,116,0.987,117,0.895,118,0.987,119,0.895,120,0.987,121,0.895,122,0.987,123,0.895,124,0.987,125,0.895,126,0.987,127,0.895,128,0.987,129,0.895,130,0.987,131,0.895,132,0.987,133,0.895,134,0.987,135,0.895,136,0.987,137,0.895,138,0.987,139,0.987,140,0.987,141,0.987,142,0.011,143,0.011,162,1.791,163,2.068,274,0.949,278,0.998,302,3.18,303,2.969,470,2.77,471,5.042,472,4.591,473,4.591,474,3.734,475,4.057,476,4.591,477,3.225,478,3.225,479,3.225,480,3.225,481,3.943,482,3.225,483,3.198,484,3.225,485,3.225,486,2.77,487,2.068,488,2.77,489,3.225,490,3.225,491,3.225,492,2.77,493,3.225,494,2.47,495,2.77,496,2.77,497,2.77,498,2.47,499,2.77,500,3.943,501,3.943,502,3.943]],["title/injectables/CategoriesService.html",[179,1.208,474,2.41]],["body/injectables/CategoriesService.html",[3,0.194,4,0.194,8,0.166,23,0.28,31,1.451,35,1.578,37,1.451,38,0.019,46,0.311,53,1.292,55,0.91,60,1.493,62,0.194,63,0.958,102,0.24,142,0.015,143,0.015,145,2.391,150,2.391,154,1.944,155,1.944,165,2.902,179,1.944,181,2.391,192,2.709,193,3.819,201,3.653,217,2.541,220,2.541,224,2.507,253,0.762,268,0.775,474,3.879,503,4.19,504,6.577,505,6.051,506,4.878,507,4.878,508,4.878,509,4.878,510,3.737,511,4.878,512,4.878,513,4.878,514,4.878]],["title/interfaces/Category.html",[246,0.262,278,0.817]],["body/interfaces/Category.html",[3,0.178,4,0.178,8,0.153,23,0.258,24,0.514,38,0.019,46,0.343,62,0.274,86,1.516,88,1.187,102,0.274,142,0.014,143,0.014,246,0.481,247,1.131,248,1.131,250,1.92,251,1.765,252,1.824,253,0.973,256,1.777,266,1.187,267,1.187,268,0.714,273,1.595,274,1.309,276,1.246,277,1.308,278,1.533,279,1.308,363,2.076,429,2.338,515,2.671,516,2.878,517,3.189,518,2.338,519,2.878,520,1.963]],["title/interfaces/Category-1.html",[79,1.544,246,0.22,278,0.685]],["body/interfaces/Category-1.html",[3,0.161,4,0.161,8,0.138,23,0.232,24,0.48,38,0.019,46,0.329,47,1.769,58,2.346,62,0.282,86,1.366,88,1.07,102,0.278,142,0.013,143,0.013,246,0.496,247,1.516,248,1.019,249,1.983,250,1.92,251,1.764,252,1.813,253,0.977,254,2.784,255,2.107,256,1.789,257,2.107,258,2.107,259,2.107,260,2.107,261,1.904,262,2.107,263,2.784,264,2.107,265,2.107,266,1.07,267,1.07,268,0.853,269,1.871,270,2.346,271,1.983,272,1.769,273,1.516,274,1.244,275,1.51,276,1.123,277,1.179,278,1.45,279,1.179]],["title/interfaces/Category-2.html",[246,0.22,278,0.685,521,2.195]],["body/interfaces/Category-2.html",[3,0.186,4,0.186,8,0.159,23,0.268,24,0.527,38,0.019,46,0.348,62,0.186,88,1.235,102,0.277,142,0.015,143,0.015,246,0.45,247,1.177,248,1.177,250,1.885,251,1.79,252,1.885,253,0.975,256,1.758,266,1.235,267,1.235,268,0.742,274,1.333,275,1.743,276,1.297,277,1.361,278,1.549,279,1.361,520,2.043,522,3.253,523,2.433,524,2.779,525,2.779,526,2.779]],["title/interfaces/Category-3.html",[246,0.22,278,0.685,527,2.02]],["body/interfaces/Category-3.html",[3,0.184,4,0.184,8,0.158,23,0.266,24,0.524,38,0.019,46,0.347,62,0.255,88,1.224,102,0.277,142,0.015,143,0.015,246,0.448,247,1.166,248,1.166,250,1.88,251,1.785,252,1.88,253,0.975,256,1.791,266,1.224,267,1.224,268,0.736,274,1.327,275,1.728,276,1.285,277,1.349,278,1.545,279,1.349,518,2.411,520,2.024,524,2.754,525,2.754,526,2.754,528,3.224,529,2.754]],["title/components/CheckoutComponent.html",[0,0.417,117,1.044]],["body/components/CheckoutComponent.html",[0,0.508,1,0.689,2,1.102,3,0.099,4,0.099,5,0.759,6,0.759,7,0.759,8,0.085,12,1.567,13,2.005,15,0.723,16,2.194,17,1.991,19,1.157,21,1.157,23,0.142,24,0.339,25,1.863,26,2.054,31,0.907,34,2.243,35,1.633,37,1.325,38,0.019,39,1.965,42,1.852,43,1.852,44,3.249,46,0.284,49,2.372,50,1.627,53,1.189,54,0.723,55,0.463,56,3.288,57,2.131,60,0.759,61,1.157,62,0.099,63,0.487,72,1.654,96,0.759,97,1.157,98,1.157,99,0.759,100,1.569,101,0.759,102,0.15,103,0.759,104,0.689,105,0.759,106,0.689,107,0.759,108,1.157,109,0.689,110,0.759,111,0.689,112,0.759,113,0.689,114,0.759,115,0.689,116,0.759,117,1.424,118,0.759,119,0.689,120,0.759,121,0.689,122,0.759,123,0.689,124,0.759,125,0.689,126,0.759,127,0.689,128,0.759,129,0.689,130,0.759,131,0.689,132,0.759,133,0.689,134,0.759,135,0.689,136,0.759,137,0.689,138,0.759,139,0.759,140,0.759,141,0.759,142,0.009,143,0.009,160,0.926,253,0.476,261,0.88,269,2.554,270,2.545,271,2.514,308,1.292,349,2.372,363,1.147,365,2.101,368,1.9,369,1.378,413,2.131,427,3.249,530,2.131,531,3.194,532,3.783,533,3.783,534,3.938,535,3.783,536,3.783,537,2.635,538,3.929,539,3.783,540,4.585,541,4.585,542,4.585,543,3.512,544,2.481,545,2.481,546,2.481,547,2.481,548,2.481,549,2.131,550,2.481,551,2.481,552,2.481,553,3.194,554,2.481,555,2.481,556,2.481,557,2.481,558,2.481,559,1.728,560,2.131,561,1.476,562,2.131,563,2.481,564,2.481,565,2.481,566,1.9,567,2.481,568,2.481,569,2.481,570,2.481,571,2.481,572,3.938,573,2.131,574,2.481,575,2.131,576,2.481,577,2.481,578,4.585,579,2.131,580,2.481,581,2.481,582,2.481,583,1.9,584,2.481,585,2.481,586,2.481,587,3.783,588,2.481,589,2.897,590,2.481,591,2.481,592,2.481,593,2.481,594,2.481,595,3.783,596,3.783,597,3.783,598,2.481,599,3.783,600,3.783,601,4.053,602,3.783,603,4.053,604,2.481,605,3.249,606,3.249,607,3.249,608,3.249,609,3.249,610,2.635,611,2.481,612,3.783,613,3.783,614,3.783,615,4.405,616,3.573,617,3.783,618,2.897,619,2.481,620,2.481,621,2.481]],["title/components/DetailsComponent.html",[0,0.417,119,1.044]],["body/components/DetailsComponent.html",[0,0.489,1,0.648,2,1.052,3,0.093,4,0.093,5,0.714,6,0.714,7,0.714,8,0.08,12,1.495,13,1.93,14,2.299,15,0.68,16,2.174,17,1.973,19,1.104,21,1.104,23,0.308,24,0.323,25,1.932,26,2.131,31,0.866,33,2.587,34,2.172,35,1.567,37,1.059,38,0.019,39,1.917,42,1.872,43,1.872,46,0.276,49,2.739,50,1.281,53,1.202,54,0.68,55,0.435,60,0.714,61,1.104,62,0.093,63,0.458,72,1.02,74,1.496,77,2.587,79,2.784,90,2.314,91,2.514,92,2.514,95,3.184,96,0.714,97,1.104,98,1.104,99,0.714,100,1.52,101,0.714,102,0.175,103,0.714,104,0.648,105,0.714,106,0.648,107,0.714,108,1.104,109,0.648,110,0.714,111,0.648,112,0.714,113,0.648,114,0.714,115,0.648,116,0.714,117,0.648,118,0.714,119,1.379,120,0.714,121,0.648,122,0.714,123,0.648,124,0.714,125,0.648,126,0.714,127,0.648,128,0.714,129,0.648,130,0.714,131,0.648,132,0.714,133,0.648,134,0.714,135,0.648,136,0.714,137,0.648,138,0.714,139,0.714,140,0.714,141,0.714,142,0.009,143,0.009,154,0.75,155,0.75,160,0.871,162,2.005,212,2.587,253,0.556,268,0.371,269,2.297,273,0.909,308,2.587,342,1.496,349,2.041,365,1.296,369,1.296,391,3.945,403,2.004,404,1.388,406,1.296,521,2.514,523,1.88,527,2.314,534,3.791,549,2.004,562,2.004,579,2.004,622,2.004,623,3.791,624,3.609,625,3.609,626,3.791,627,3.609,628,2.626,629,3.609,630,2.764,631,3.184,632,2.514,633,2.514,634,2.333,635,2.333,636,2.333,637,2.333,638,2.333,639,3.791,640,3.1,641,3.1,642,3.1,643,3.1,644,3.1,645,3.1,646,3.1,647,3.1,648,3.1,649,3.1,650,3.1,651,3.1,652,3.1,653,5.255,654,3.1,655,3.609,656,3.609,657,3.609,658,2.333,659,2.333,660,1.787,661,2.333,662,2.333,663,2.333,664,2.314,665,2.333,666,1.787,667,1.787,668,1.787,669,1.787,670,1.787,671,1.496,672,2.333,673,2.333,674,2.004,675,2.333,676,2.333,677,2.333,678,2.333,679,2.333,680,2.333,681,2.333,682,2.333,683,2.333,684,2.333,685,1.787,686,1.625,687,1.496,688,1.625,689,1.625,690,1.625,691,2.333,692,1.787,693,3.609,694,3.609,695,3.609,696,3.609,697,3.609,698,3.609,699,3.609,700,4.967,701,3.609,702,2.514,703,2.514]],["title/injectables/FlowbiteService.html",[152,2.41,179,1.208]],["body/injectables/FlowbiteService.html",[3,0.196,4,0.196,8,0.168,23,0.283,25,1.439,31,1.462,35,1.462,37,1.184,38,0.019,39,2.232,46,0.313,53,1.197,54,1.439,55,0.921,62,0.196,63,0.97,102,0.242,142,0.015,143,0.015,145,2.419,150,2.419,152,3.907,154,1.958,155,1.958,179,1.958,181,2.419,220,2.571,370,2.419,453,2.571,455,2.742,704,4.24,705,6.095,706,4.936,707,4.936,708,4.668,709,6.095,710,5.235,711,4.936,712,4.936,713,4.936,714,4.936,715,3.781,716,4.936,717,4.936]],["title/components/FooterComponent.html",[0,0.417,121,1.044]],["body/components/FooterComponent.html",[0,0.668,1,1.125,2,1.566,3,0.161,4,0.161,5,1.24,6,1.24,7,1.24,8,0.138,15,1.181,16,2.325,17,2.132,19,1.644,21,1.644,38,0.019,53,0.796,55,0.756,61,1.24,62,0.161,63,0.796,96,1.24,97,1.644,98,1.644,99,1.24,100,1.963,101,1.24,102,0.213,103,1.24,104,1.125,105,1.24,106,1.125,107,1.24,108,1.644,109,1.125,110,1.24,111,1.125,112,1.24,113,1.125,114,1.24,115,1.125,116,1.24,117,1.125,118,1.24,119,1.125,120,1.24,121,1.781,122,1.24,123,1.125,124,1.24,125,1.125,126,1.24,127,1.125,128,1.24,129,1.125,130,1.24,131,1.125,132,1.24,133,1.125,134,1.24,135,1.125,136,1.24,137,1.125,138,1.24,139,1.24,140,1.24,141,1.24,142,0.013,143,0.013,270,2.349,615,4.614,718,3.481,719,5.372,720,5.372,721,5.372,722,5.511,723,5.372,724,6.416,725,4.614,726,5.372,727,5.372,728,5.372,729,5.372]],["title/components/ForgotpasswordComponent.html",[0,0.417,123,1.044]],["body/components/ForgotpasswordComponent.html",[0,0.494,1,0.659,2,1.066,3,0.094,4,0.094,5,0.726,6,0.726,7,0.726,8,0.081,15,0.692,16,2.18,17,1.978,19,1.119,21,1.119,23,0.136,24,0.327,25,1.667,26,1.838,31,0.877,35,1.546,37,1.07,38,0.019,39,1.506,42,1.823,43,1.823,46,0.278,50,1.921,53,0.985,54,0.692,55,0.443,61,1.119,62,0.094,63,0.466,72,1.951,79,1.792,96,0.726,97,1.119,98,1.119,99,0.726,100,1.534,101,0.726,102,0.145,103,0.726,104,0.659,105,0.726,106,0.659,107,0.726,108,1.119,109,0.659,110,0.726,111,0.659,112,0.726,113,0.659,114,0.726,115,0.659,116,0.726,117,0.659,118,0.726,119,0.659,120,0.726,121,0.659,122,0.726,123,1.391,124,0.726,125,0.659,126,0.726,127,0.659,128,0.726,129,0.659,130,0.726,131,0.659,132,0.726,133,0.659,134,0.726,135,0.659,136,0.726,137,0.659,138,0.726,139,0.726,140,0.726,141,0.726,142,0.009,143,0.009,160,0.886,180,2.784,183,3.491,200,1.818,210,2.344,232,2.038,256,0.598,261,0.842,272,3.08,308,1.904,531,3.107,537,2.547,553,4.489,559,1.653,560,2.038,561,1.412,589,3.417,601,4.285,603,4.285,610,3.491,616,3.983,730,2.038,731,3.657,732,3.657,733,3.657,734,3.657,735,3.657,736,5.012,737,3.657,738,4.461,739,4.461,740,4.461,741,2.373,742,2.373,743,2.373,744,2.547,745,2.373,746,2.373,747,3.839,748,3.839,749,2.801,750,2.801,751,2.801,752,2.373,753,2.373,754,2.373,755,3.657,756,3.657,757,3.657,758,2.373,759,2.373,760,1.653,761,1.818,762,2.373,763,2.373,764,2.373,765,2.373,766,2.373,767,2.373,768,2.801,769,2.373,770,2.373,771,2.373,772,2.373,773,2.373,774,2.373,775,2.373,776,2.373,777,2.373,778,2.373,779,2.373,780,2.373,781,2.373,782,2.373,783,2.373,784,2.038,785,2.038,786,2.373,787,3.141,788,4.38,789,3.657,790,2.373,791,2.801,792,2.801,793,2.801,794,2.801,795,3.839,796,5.719,797,3.657,798,2.373,799,3.657,800,3.657,801,3.657,802,3.657,803,3.657,804,3.657,805,3.657,806,2.373,807,3.657,808,3.657,809,3.657,810,3.657,811,2.801,812,2.801,813,2.801,814,2.801,815,2.801,816,2.801,817,2.801,818,2.801,819,2.801,820,2.373,821,2.373,822,2.373]],["title/components/HomeComponent.html",[0,0.417,125,1.044]],["body/components/HomeComponent.html",[0,0.374,1,0.436,2,0.765,3,0.062,4,0.062,5,0.481,6,0.481,7,0.481,8,0.054,12,1.088,13,1.478,14,1.761,15,0.458,16,2.025,17,1.837,19,0.803,21,0.803,23,0.194,24,0.235,25,1.944,26,2.087,31,0.63,33,2.056,34,1.727,35,1.66,37,1.358,38,0.019,39,2.193,42,1.943,43,1.943,46,0.317,49,2.972,50,2.063,53,1.192,54,0.458,55,0.293,60,0.481,61,0.803,62,0.062,63,0.309,74,2.531,77,2.472,79,2.326,84,1.828,90,1.683,91,1.828,92,1.828,95,2.531,96,0.481,97,0.803,98,0.803,99,0.481,100,1.208,101,0.481,102,0.189,103,0.481,104,0.436,105,0.481,106,0.436,107,0.481,108,0.803,109,0.436,110,0.481,111,0.436,112,0.481,113,0.436,114,0.481,115,0.436,116,0.481,117,0.436,118,0.481,119,0.436,120,0.481,121,0.436,122,0.481,123,0.436,124,0.481,125,1.096,126,0.481,127,0.436,128,0.481,129,0.436,130,0.481,131,0.436,132,0.481,133,0.436,134,0.481,135,0.436,136,0.481,137,0.436,138,0.481,139,0.481,140,0.481,141,0.481,142,0.007,143,0.007,154,1.269,155,1.269,160,0.587,162,1.877,163,1.007,224,0.651,253,0.749,261,0.932,268,0.698,273,0.661,274,0.699,302,2.613,303,2.439,308,2.948,342,1.683,344,2.167,349,1.826,350,2.167,365,1.458,369,0.873,370,0.77,379,1.007,391,3.999,404,0.935,406,1.458,414,1.095,424,1.828,429,2.287,451,1.458,453,0.818,455,0.873,459,0.818,464,1.828,471,3.858,474,2.531,475,2.75,476,3.391,481,2.255,483,1.828,486,1.35,487,1.007,488,1.35,492,1.35,494,2.011,495,1.35,496,1.35,497,1.35,498,2.011,499,1.35,500,2.255,501,2.255,502,2.255,521,1.828,523,0.818,527,1.683,623,2.903,626,2.903,628,2.349,630,2.589,631,2.531,632,1.828,633,1.828,639,3.772,640,3.391,641,3.391,642,3.391,643,3.391,644,3.391,645,3.391,646,3.391,647,2.255,648,3.391,649,3.391,650,3.391,651,3.391,652,2.255,653,4.862,654,3.391,660,2.011,664,1.683,666,1.204,667,1.204,668,1.204,669,1.204,670,1.204,671,1.007,685,1.204,686,1.095,687,2.531,688,1.828,689,1.828,690,1.828,692,1.204,702,1.828,703,1.828,823,1.35,824,2.255,825,2.625,826,2.625,827,3.38,828,3.38,829,2.903,830,2.589,831,2.349,832,2.255,833,3.391,834,2.255,835,3.391,836,3.391,837,2.255,838,1.572,839,2.255,840,1.572,841,1.572,842,1.572,843,2.255,844,1.572,845,1.572,846,1.572,847,1.572,848,1.572,849,2.255,850,1.572,851,1.572,852,1.572,853,1.572,854,2.625,855,1.572,856,2.625,857,2.625,858,2.625,859,2.625,860,1.572,861,2.903,862,1.35,863,2.625,864,1.572,865,1.572,866,1.572,867,1.572,868,1.572,869,1.572,870,1.572,871,1.572,872,1.572,873,1.572,874,3.772,875,1.572,876,2.011,877,1.572,878,1.35,879,1.204,880,1.35,881,1.572,882,1.35,883,1.35,884,1.35,885,1.35,886,1.35,887,2.255,888,1.35,889,1.35,890,1.35,891,1.204,892,1.35,893,1.35,894,2.255,895,1.35,896,1.35,897,1.35,898,1.572,899,3.949,900,2.625,901,2.011,902,2.255,903,2.011,904,3.391,905,2.255]],["title/interfaces/Ibrands.html",[246,0.262,293,2.619]],["body/interfaces/Ibrands.html",[3,0.2,4,0.2,8,0.171,23,0.289,24,0.552,38,0.019,46,0.373,62,0.2,102,0.276,142,0.015,143,0.015,246,0.351,248,1.267,250,1.838,251,1.838,252,1.838,253,0.971,266,1.838,267,1.838,293,4.295,906,4.322]],["title/interfaces/Icart.html",[246,0.262,363,1.739]],["body/interfaces/Icart.html",[3,0.171,4,0.171,8,0.146,23,0.246,24,0.5,38,0.019,46,0.365,62,0.27,86,1.45,88,1.136,102,0.222,142,0.014,143,0.014,246,0.475,247,1.082,248,1.082,250,1.903,251,1.136,252,1.476,253,0.97,256,1.848,266,1.736,267,1.736,268,0.683,273,1.562,274,1.281,276,1.192,277,1.252,278,1.478,279,1.252,363,2.581,429,3.418,515,2.555,516,4.207,517,3.645,518,3.418,519,4.207,520,1.878]],["title/interfaces/Icategories.html",[246,0.262,487,2.41]],["body/interfaces/Icategories.html",[3,0.2,4,0.2,8,0.171,23,0.289,24,0.552,38,0.019,46,0.373,62,0.2,102,0.276,142,0.015,143,0.015,246,0.351,248,1.267,250,1.838,251,1.838,252,1.838,253,0.971,266,1.838,267,1.838,487,3.953,907,4.322]],["title/interfaces/Iorders.html",[47,1.644,246,0.262]],["body/interfaces/Iorders.html",[3,0.141,4,0.141,8,0.121,23,0.204,24,0.441,38,0.019,46,0.376,47,2.152,58,2.66,62,0.274,86,1.202,88,0.942,102,0.242,142,0.012,143,0.012,246,0.481,247,1.421,248,0.897,249,1.745,250,1.874,251,1.302,252,1.491,253,0.972,254,3.19,255,3.168,256,1.862,257,3.168,258,3.168,259,3.168,260,3.168,261,2.343,262,3.168,263,3.19,264,3.168,265,3.168,266,1.609,267,1.609,268,1.015,269,1.647,270,2.152,271,1.745,272,1.557,273,1.421,274,1.166,275,1.329,276,0.989,277,1.038,278,1.322,279,1.038]],["title/interfaces/Iproduct.html",[246,0.262,523,1.958]],["body/interfaces/Iproduct.html",[3,0.154,4,0.154,8,0.132,23,0.223,24,0.467,38,0.019,46,0.385,62,0.154,88,1.667,102,0.207,142,0.013,143,0.013,246,0.411,247,1.588,248,0.977,250,1.792,251,1.026,252,1.792,253,0.974,256,1.874,266,1.667,267,1.667,268,1.002,274,1.455,275,2.353,276,1.75,277,1.837,278,1.591,279,1.837,520,2.757,522,2.702,523,2.717,524,3.751,525,3.751,526,3.751]],["title/interfaces/Iwish.html",[246,0.262,529,2.237]],["body/interfaces/Iwish.html",[3,0.151,4,0.151,8,0.13,23,0.218,24,0.461,38,0.019,46,0.386,62,0.232,88,1.654,102,0.204,142,0.013,143,0.013,246,0.407,247,1.575,248,0.958,250,1.781,251,1.005,252,1.781,253,0.972,256,1.891,266,1.654,267,1.654,268,0.994,274,1.448,275,2.334,276,1.736,277,1.822,278,1.586,279,1.822,518,3.256,520,2.734,524,3.72,525,3.72,526,3.72,528,2.648,529,3.062]],["title/components/LoginComponent.html",[0,0.417,127,1.044]],["body/components/LoginComponent.html",[0,0.546,1,0.776,2,1.206,3,0.111,4,0.111,5,0.856,6,0.856,7,0.856,8,0.095,15,0.815,16,2.231,17,2.024,19,1.267,21,1.267,23,0.16,24,0.371,25,1.774,26,1.957,31,0.993,35,1.511,37,0.671,38,0.019,39,0.944,42,1.863,43,1.863,46,0.28,50,1.469,53,0.968,54,0.815,55,0.522,61,1.267,62,0.111,63,0.549,72,1.223,96,0.856,97,1.267,98,1.267,99,0.856,100,1.667,101,0.856,102,0.164,103,0.856,104,0.776,105,0.856,106,0.776,107,0.856,108,1.267,109,0.776,110,0.856,111,0.776,112,0.856,113,0.776,114,0.856,115,0.776,116,0.856,117,0.776,118,0.856,119,0.776,120,0.856,121,0.776,122,0.856,123,0.776,124,0.856,125,0.776,126,0.856,127,1.512,128,0.856,129,0.776,130,0.856,131,0.776,132,0.856,133,0.776,134,0.856,135,0.776,136,0.856,137,0.776,138,0.856,139,0.856,140,0.856,141,0.856,142,0.01,143,0.01,160,1.044,180,3.026,183,3.794,210,2.654,253,0.521,261,0.992,272,2.663,308,2.156,344,2.654,406,1.553,531,2.883,537,2.883,538,4.173,543,3.775,553,3.794,559,1.948,561,1.664,566,2.142,583,2.142,589,2.142,601,4.241,603,3.794,610,2.883,616,2.883,618,3.171,744,2.883,747,3.171,748,3.171,749,3.171,750,3.171,751,3.171,760,1.948,761,2.142,768,2.142,784,2.402,785,2.402,787,3.556,788,4.664,791,3.171,792,3.171,793,3.171,794,3.171,795,3.171,811,3.171,812,3.171,813,3.171,814,3.171,815,3.171,816,3.171,817,3.171,818,3.171,819,3.171,908,2.402,909,4.679,910,4.14,911,4.14,912,4.14,913,4.679,914,2.797,915,2.797,916,2.797,917,2.797,918,2.797,919,2.797,920,2.797,921,2.402,922,2.402,923,2.797,924,2.402,925,2.797,926,2.797,927,2.797,928,2.402,929,3.556,930,2.402,931,2.797,932,2.402,933,2.402,934,2.402,935,2.402,936,3.556,937,2.797,938,2.797,939,3.556,940,3.556,941,4.14,942,3.556,943,2.797,944,2.797]],["title/components/NavbarComponent.html",[0,0.417,129,1.044]],["body/components/NavbarComponent.html",[0,0.526,1,0.729,2,1.152,3,0.104,4,0.104,5,0.804,6,0.804,7,0.804,8,0.09,12,1.637,13,2.077,14,2.058,15,0.766,16,2.212,17,2.007,19,1.209,21,1.209,23,0.151,24,0.354,25,1.894,26,1.912,31,0.948,33,2.751,34,2.31,35,1.668,37,1.359,38,0.019,39,2.193,42,1.889,43,1.889,46,0.306,49,2.443,50,0.932,53,1.248,54,0.766,55,0.49,60,0.804,61,1.209,62,0.104,63,0.516,72,1.149,96,0.804,97,1.209,98,1.209,99,0.804,100,1.616,101,0.804,102,0.157,103,0.804,104,0.729,105,0.804,106,0.729,107,0.804,108,1.209,109,0.729,110,0.804,111,0.729,112,0.804,113,0.729,114,0.804,115,0.729,116,0.804,117,0.729,118,0.804,119,0.729,120,0.804,121,0.729,122,0.804,123,0.729,124,0.804,125,0.729,126,0.804,127,0.729,128,0.804,129,1.466,130,0.804,131,0.729,132,0.804,133,0.729,134,0.804,135,0.729,136,0.804,137,0.729,138,0.804,139,0.804,140,0.804,141,0.804,142,0.01,143,0.01,152,1.684,160,0.981,161,2.257,180,2.638,185,4.864,235,2.257,268,0.755,273,0.995,281,3.394,303,2.195,344,2.533,349,2.443,350,2.533,365,2.195,369,1.459,370,1.288,376,2.013,379,1.684,380,2.257,391,2.351,404,1.563,414,1.83,451,2.195,453,1.368,455,1.459,459,1.368,471,3.026,725,3.394,744,1.83,760,1.83,824,3.394,830,3.026,861,4.864,862,3.394,878,2.257,891,2.013,909,3.394,945,2.257,946,3.951,947,3.951,948,3.951,949,3.951,950,3.951,951,5.282,952,5.282,953,4.749,954,4.749,955,5.282,956,5.282,957,3.951,958,4.749,959,3.951,960,2.628,961,2.628,962,2.628,963,2.628,964,2.628,965,2.628,966,4.749,967,3.951,968,2.628,969,2.628,970,2.628,971,3.951,972,2.628,973,3.951,974,2.628,975,2.628,976,2.628,977,2.628,978,2.628,979,2.628,980,2.628,981,2.628,982,2.628,983,2.628,984,2.628,985,2.628,986,2.628,987,2.628,988,2.628,989,4.749,990,2.628,991,2.628,992,3.951,993,3.951,994,3.951,995,3.951,996,3.394]],["title/components/NotfoundComponent.html",[0,0.417,131,1.044]],["body/components/NotfoundComponent.html",[0,0.685,1,1.188,2,1.622,3,0.17,4,0.17,5,1.309,6,1.309,7,1.309,8,0.146,15,1.247,16,2.336,17,2.12,19,1.703,21,1.703,38,0.019,53,0.84,55,0.798,61,1.309,62,0.17,63,0.84,96,1.309,97,1.703,98,1.703,99,1.309,100,2.005,101,1.309,102,0.221,103,1.309,104,1.188,105,1.309,106,1.188,107,1.309,108,1.703,109,1.188,110,1.309,111,1.188,112,1.309,113,1.188,114,1.309,115,1.188,116,1.309,117,1.188,118,1.309,119,1.188,120,1.309,121,1.188,122,1.309,123,1.188,124,1.309,125,1.188,126,1.309,127,1.188,128,1.309,129,1.188,130,1.309,131,1.819,132,1.309,133,1.188,134,1.309,135,1.188,136,1.309,137,1.188,138,1.309,139,1.309,140,1.309,141,1.309,142,0.014,143,0.014,997,3.674,998,5.566,999,5.566,1000,5.566,1001,5.566,1002,5.566]],["title/injectables/OrdersService.html",[56,2.41,179,1.208]],["body/injectables/OrdersService.html",[3,0.144,4,0.144,8,0.124,23,0.208,24,0.446,25,1.936,26,1.83,31,1.196,32,4.893,35,1.632,37,1.471,38,0.019,42,1.526,43,1.526,46,0.33,53,1.263,54,1.058,55,0.677,56,3.197,60,1.111,62,0.144,63,0.713,102,0.244,142,0.012,143,0.012,145,1.779,150,1.779,154,1.971,155,1.971,165,2.159,179,1.602,181,1.779,192,2.016,193,3.406,198,4.697,200,4.697,201,3.57,212,1.89,217,1.89,218,2.016,219,2.327,220,1.89,224,2.541,253,0.873,268,0.905,370,1.779,433,4.363,451,2.769,453,1.89,455,2.016,457,2.528,459,1.89,460,4.477,461,4.363,462,2.78,465,3.819,510,2.78,708,4.363,715,2.78,1003,3.117,1004,4.987,1005,4.987,1006,4.987,1007,4.987,1008,3.63,1009,3.63,1010,3.63,1011,3.63,1012,3.63,1013,3.63,1014,3.63,1015,3.63,1016,3.63,1017,3.63,1018,3.63,1019,4.987,1020,3.63,1021,3.63,1022,3.63,1023,3.63,1024,3.63,1025,3.63]],["title/interfaces/Product.html",[246,0.262,273,0.947]],["body/interfaces/Product.html",[3,0.166,4,0.166,8,0.142,23,0.239,24,0.49,38,0.019,46,0.372,62,0.268,86,1.409,88,1.104,102,0.218,142,0.014,143,0.014,246,0.47,247,1.635,248,1.052,250,1.891,251,1.104,252,1.449,253,0.968,256,1.839,266,1.104,267,1.104,268,1.032,273,1.635,274,1.478,276,1.802,277,1.892,278,1.609,279,1.892,363,1.931,429,2.174,515,2.484,516,2.676,517,3.042,518,2.174,519,2.676,520,2.839]],["title/interfaces/Product-1.html",[79,1.544,246,0.22,273,0.794]],["body/interfaces/Product-1.html",[3,0.15,4,0.15,8,0.129,23,0.217,24,0.46,38,0.019,46,0.364,47,1.656,58,2.245,62,0.278,86,1.279,88,1.002,102,0.248,142,0.013,143,0.013,246,0.488,247,1.763,248,0.954,249,1.856,250,1.897,251,1.358,252,1.54,253,0.974,254,2.693,255,1.973,256,1.837,257,1.973,258,1.973,259,1.973,260,1.973,261,1.822,262,1.973,263,2.693,264,1.973,265,1.973,266,1.002,267,1.002,268,1.037,269,1.752,270,2.245,271,1.856,272,1.656,273,1.573,274,1.447,275,2.33,276,1.733,277,1.819,278,1.542,279,1.819]],["title/interfaces/Product2.html",[246,0.262,517,2.088]],["body/interfaces/Product2.html",[3,0.178,4,0.178,8,0.153,23,0.258,24,0.514,38,0.019,46,0.343,62,0.274,86,2.253,88,1.765,102,0.228,142,0.014,143,0.014,246,0.481,247,1.131,248,1.131,250,1.92,251,1.187,252,1.519,253,0.964,256,1.862,266,1.187,267,1.187,268,0.714,273,1.829,274,1.309,276,1.246,277,1.308,278,1.499,279,1.308,363,2.076,429,2.338,515,2.671,516,2.878,517,3.516,518,2.338,519,2.878,520,1.963]],["title/components/ProductsComponent.html",[0,0.417,133,1.044]],["body/components/ProductsComponent.html",[0,0.446,1,0.561,2,0.94,3,0.08,4,0.08,5,0.618,6,0.618,7,0.618,8,0.069,12,1.336,13,1.759,14,2.095,15,0.589,16,2.124,17,1.927,19,0.986,21,0.986,23,0.231,24,0.289,25,1.995,26,2.14,31,0.773,33,2.39,34,2.007,35,1.676,37,1.44,38,0.019,39,2.271,42,1.957,43,1.957,46,0.316,49,2.906,50,1.99,53,1.257,54,0.589,55,0.377,60,0.618,61,0.986,62,0.08,63,0.397,74,2.578,77,2.39,79,1.58,84,2.246,90,2.067,91,2.246,92,2.246,95,2.067,96,0.618,97,0.986,98,0.986,99,0.618,100,1.404,101,0.618,102,0.212,103,0.618,104,0.561,105,0.618,106,0.561,107,0.618,108,0.986,109,0.561,110,0.618,111,0.561,112,0.618,113,0.561,114,0.618,115,0.561,116,0.618,117,0.561,118,0.618,119,0.561,120,0.618,121,0.561,122,0.618,123,0.561,124,0.618,125,0.561,126,0.618,127,0.561,128,0.618,129,0.561,130,0.618,131,0.561,132,0.618,133,1.274,134,0.618,135,0.561,136,0.618,137,0.561,138,0.618,139,0.618,140,0.618,141,0.618,142,0.008,143,0.008,154,1.475,155,1.475,160,0.754,162,1.791,163,1.296,224,0.837,253,0.818,261,1.144,268,0.797,273,0.812,302,2.393,303,2.234,342,2.067,344,2.067,349,2.123,350,2.067,365,1.791,369,1.123,370,0.991,376,1.548,379,1.296,385,3.942,404,1.202,406,1.791,414,1.408,424,2.246,429,3.126,451,1.791,453,1.053,455,1.123,459,1.053,464,2.246,475,3.197,483,2.246,494,1.548,498,1.548,523,1.053,561,1.202,628,2.731,630,2.469,631,2.942,632,2.246,633,2.246,660,2.469,664,2.067,666,1.548,667,1.548,671,1.296,674,1.736,685,1.548,686,1.408,687,2.578,688,2.246,689,2.246,690,2.246,692,1.548,702,2.246,703,2.246,829,3.454,830,3.081,831,2.731,832,2.769,833,3.942,834,2.769,835,3.942,836,3.942,837,2.769,839,2.769,843,2.769,849,2.769,874,3.942,876,2.469,879,1.548,880,1.736,882,1.736,883,1.736,884,1.736,885,1.736,886,1.736,887,2.769,888,1.736,889,1.736,890,1.736,891,1.548,892,1.736,893,1.736,894,2.769,895,1.736,896,1.736,897,1.736,901,2.469,902,2.769,903,2.469,904,3.942,905,2.769,1026,1.736,1027,2.246,1028,3.224,1029,3.224,1030,3.224,1031,2.021,1032,2.021,1033,2.021,1034,2.021,1035,2.021,1036,2.021,1037,2.021,1038,2.021,1039,2.021,1040,2.021,1041,2.021,1042,2.021,1043,2.021,1044,2.021,1045,2.021,1046,2.021,1047,2.021,1048,2.021,1049,2.021,1050,2.021,1051,2.021,1052,2.021,1053,2.021,1054,2.021,1055,2.769]],["title/injectables/ProductsService.html",[179,1.208,628,2.237]],["body/injectables/ProductsService.html",[3,0.192,4,0.192,8,0.164,23,0.277,25,1.405,31,1.441,35,1.57,37,1.441,38,0.019,46,0.308,53,1.285,55,0.9,60,1.475,62,0.192,63,0.947,102,0.239,142,0.015,143,0.015,145,2.363,150,2.944,154,1.93,155,1.93,179,1.93,181,2.363,192,2.678,193,3.803,201,3.634,212,3.128,217,2.511,220,2.511,224,2.489,253,0.756,268,0.766,510,3.693,628,3.574,1056,4.142,1057,6.543,1058,6.007,1059,4.822,1060,4.822,1061,4.822,1062,4.822,1063,4.822,1064,4.822,1065,4.822,1066,4.822]],["title/components/RegisterComponent.html",[0,0.417,135,1.044]],["body/components/RegisterComponent.html",[0,0.485,1,0.64,2,1.042,3,0.092,4,0.092,5,0.705,6,0.705,7,0.705,8,0.079,15,0.672,16,2.17,17,1.969,19,1.094,21,1.094,23,0.132,24,0.32,25,1.647,26,1.816,31,0.858,35,1.462,37,0.858,38,0.019,39,0.778,42,1.729,43,1.729,46,0.274,50,1.269,53,0.97,54,0.672,55,0.43,61,1.094,62,0.092,63,0.453,72,1.008,96,0.705,97,1.094,98,1.094,99,0.705,100,1.51,101,0.705,102,0.259,103,0.705,104,0.64,105,0.705,106,0.64,107,0.705,108,1.094,109,0.64,110,0.705,111,0.64,112,0.705,113,0.64,114,0.705,115,0.64,116,0.705,117,0.64,118,0.705,119,0.64,120,0.705,121,0.64,122,0.705,123,0.64,124,0.705,125,0.64,126,0.705,127,0.64,128,0.705,129,0.64,130,0.705,131,0.64,132,0.705,133,0.64,134,0.705,135,1.37,136,0.705,137,0.64,138,0.705,139,0.705,140,0.705,141,0.705,142,0.009,143,0.009,154,0.741,155,0.741,160,0.86,180,2.741,183,3.437,210,2.292,212,1.2,217,1.2,224,0.955,234,1.98,253,0.45,261,1.269,270,2.471,272,2.471,308,1.862,391,1.371,406,1.28,459,1.862,527,2.292,531,3.05,537,2.49,538,3.78,543,3.355,553,3.437,559,1.605,561,1.371,566,1.765,572,3.071,573,3.071,575,3.071,583,1.765,601,4.719,603,4.453,605,3.071,606,3.071,607,3.071,608,3.071,609,3.071,610,3.437,616,2.49,618,2.738,744,2.49,747,2.738,748,2.738,749,2.738,750,2.738,751,2.738,760,1.605,761,1.765,768,1.765,788,4.516,791,2.738,792,2.738,793,2.738,794,2.738,795,2.738,811,2.738,812,2.738,813,2.738,814,2.738,815,2.738,816,2.738,817,2.738,818,2.738,819,2.738,913,4.239,921,1.98,922,1.98,924,1.98,928,1.98,929,3.071,930,1.98,932,1.98,933,1.98,934,1.98,935,1.98,936,3.071,939,3.071,940,3.071,942,3.071,996,4.854,1067,1.98,1068,3.575,1069,3.575,1070,3.575,1071,2.305,1072,3.575,1073,2.305,1074,2.305,1075,3.575,1076,2.305,1077,2.305,1078,2.305,1079,2.305,1080,2.305,1081,3.575,1082,3.575,1083,3.575,1084,3.575,1085,3.575,1086,2.305,1087,2.305,1088,2.305,1089,2.305,1090,2.305,1091,2.305,1092,2.305,1093,2.305,1094,2.305,1095,2.305,1096,5.341,1097,2.305,1098,2.305,1099,2.305,1100,3.575,1101,3.575,1102,3.575,1103,3.575,1104,3.575,1105,3.575,1106,3.575,1107,3.575,1108,2.305,1109,2.305,1110,2.305,1111,3.575,1112,3.575,1113,3.575,1114,2.305,1115,2.305,1116,3.575,1117,2.305,1118,2.305,1119,2.305,1120,2.305,1121,3.575,1122,2.305,1123,2.305]],["title/pipes/SearchPipe.html",[1027,2.619,1124,2.619]],["body/pipes/SearchPipe.html",[3,0.207,4,0.207,8,0.178,12,2.163,15,1.521,31,1.252,35,1.252,37,1.252,38,0.019,46,0.268,53,1.026,55,0.974,62,0.207,63,1.026,80,4.484,102,0.269,142,0.016,143,0.016,154,1.678,155,1.678,224,2.163,253,0.853,1027,4.393,1055,5.417,1124,4.393,1125,5.221,1126,4.484,1127,5.221,1128,6.307,1129,6.777,1130,5.221,1131,5.221,1132,6.307,1133,5.221,1134,5.221]],["title/interfaces/ShippingAddress.html",[246,0.262,254,1.739]],["body/interfaces/ShippingAddress.html",[3,0.163,4,0.163,8,0.14,23,0.235,24,0.485,38,0.019,46,0.311,47,1.793,58,2.368,62,0.283,86,1.384,88,1.085,102,0.256,142,0.013,143,0.013,246,0.497,247,1.527,248,1.033,249,2.01,250,1.856,251,1.432,252,1.603,253,0.977,254,2.981,255,2.136,256,1.795,257,2.136,258,2.136,259,2.136,260,2.136,261,1.921,262,2.136,263,2.803,264,2.136,265,2.136,266,1.085,267,1.085,268,0.861,269,2.981,270,2.931,271,3.159,272,1.793,273,1.527,274,1.253,275,1.531,276,1.138,277,1.195,278,1.401,279,1.195]],["title/interfaces/Subcategory.html",[246,0.262,274,0.777]],["body/interfaces/Subcategory.html",[3,0.178,4,0.178,8,0.153,23,0.258,24,0.514,38,0.019,46,0.343,62,0.274,86,1.516,88,1.187,102,0.274,142,0.014,143,0.014,246,0.481,247,1.131,248,1.131,250,1.92,251,1.187,252,1.824,253,0.973,256,1.777,266,1.187,267,1.187,268,0.714,273,1.595,274,1.379,276,1.246,277,1.308,278,1.578,279,1.308,363,2.076,429,2.338,515,2.671,516,2.878,517,3.189,518,2.338,519,2.878,520,1.963]],["title/interfaces/Subcategory-1.html",[79,1.544,246,0.22,274,0.651]],["body/interfaces/Subcategory-1.html",[3,0.161,4,0.161,8,0.138,23,0.232,24,0.48,38,0.019,46,0.329,47,1.769,58,2.346,62,0.282,86,1.366,88,1.07,102,0.278,142,0.013,143,0.013,246,0.496,247,1.516,248,1.019,249,1.983,250,1.92,251,1.419,252,1.813,253,0.977,254,2.784,255,2.107,256,1.789,257,2.107,258,2.107,259,2.107,260,2.107,261,1.904,262,2.107,263,2.784,264,2.107,265,2.107,266,1.07,267,1.07,268,0.853,269,1.871,270,2.346,271,1.983,272,1.769,273,1.516,274,1.325,275,1.51,276,1.123,277,1.179,278,1.52,279,1.179]],["title/interfaces/Subcategory-2.html",[246,0.22,274,0.651,521,2.195]],["body/interfaces/Subcategory-2.html",[3,0.186,4,0.186,8,0.159,23,0.268,24,0.527,38,0.019,46,0.348,62,0.186,88,1.235,102,0.277,142,0.015,143,0.015,246,0.45,247,1.177,248,1.177,250,1.885,251,1.235,252,1.885,253,0.975,256,1.758,266,1.235,267,1.235,268,0.742,274,1.399,275,1.743,276,1.297,277,1.361,278,1.591,279,1.361,520,2.043,522,3.253,523,2.433,524,2.779,525,2.779,526,2.779]],["title/interfaces/Subcategory-3.html",[246,0.22,274,0.651,527,2.02]],["body/interfaces/Subcategory-3.html",[3,0.184,4,0.184,8,0.158,23,0.266,24,0.524,38,0.019,46,0.347,62,0.255,88,1.224,102,0.277,142,0.015,143,0.015,246,0.448,247,1.166,248,1.166,250,1.88,251,1.224,252,1.88,253,0.975,256,1.791,266,1.224,267,1.224,268,0.736,274,1.395,275,1.728,276,1.285,277,1.349,278,1.588,279,1.349,518,2.411,520,2.024,524,2.754,525,2.754,526,2.754,528,3.224,529,2.754]],["title/interfaces/User.html",[246,0.262,263,1.739]],["body/interfaces/User.html",[3,0.161,4,0.161,8,0.138,23,0.232,24,0.48,38,0.019,46,0.329,47,1.769,58,2.346,62,0.282,86,1.366,88,1.07,102,0.278,142,0.013,143,0.013,246,0.496,247,1.516,248,1.019,249,1.983,250,1.92,251,1.419,252,1.592,253,0.977,254,2.784,255,2.107,256,1.789,257,2.107,258,2.107,259,2.107,260,2.107,261,1.904,262,2.107,263,2.965,264,2.107,265,2.107,266,1.07,267,1.07,268,0.853,269,1.871,270,2.917,271,1.983,272,2.804,273,1.516,274,1.244,275,1.51,276,1.123,277,1.179,278,1.393,279,1.179]],["title/components/WishListComponent.html",[0,0.417,137,1.044]],["body/components/WishListComponent.html",[0,0.531,1,0.741,2,1.165,3,0.106,4,0.106,5,0.816,6,0.816,7,0.816,8,0.091,12,1.656,13,2.096,15,0.778,16,2.217,17,2.011,19,1.223,21,1.223,23,0.153,24,0.358,25,1.901,26,2.097,31,0.959,34,2.328,35,1.594,37,1.277,38,0.019,39,2.02,42,1.831,43,1.831,46,0.293,49,2.869,50,1.889,53,1.176,54,0.778,55,0.498,60,0.816,61,0.816,62,0.106,63,0.524,72,1.748,74,1.71,77,2.082,84,2.784,90,2.562,96,0.816,97,1.223,98,1.223,99,0.816,100,1.629,101,0.816,102,0.211,103,0.816,104,0.741,105,0.816,106,0.741,107,0.816,108,1.223,109,0.741,110,0.816,111,0.741,112,0.816,113,0.741,114,0.816,115,0.741,116,0.816,117,0.741,118,0.816,119,0.741,120,0.816,121,0.741,122,0.816,123,0.741,124,0.816,125,0.741,126,0.816,127,0.741,128,0.816,129,0.741,130,0.816,131,0.741,132,0.816,133,0.741,134,0.816,135,0.741,136,0.816,137,1.478,138,1.996,139,1.744,140,0.816,141,0.816,142,0.01,143,0.01,154,1.284,155,1.284,162,1.482,253,0.718,268,0.762,273,1.007,302,1.587,303,1.482,342,1.71,349,2.461,350,2.562,353,3.433,359,2.291,365,2.22,369,1.482,379,1.71,382,2.291,404,1.587,406,1.482,424,2.784,425,3.433,529,2.851,631,3.412,632,2.784,633,2.784,664,2.562,671,1.71,686,1.858,687,1.71,688,1.858,689,1.858,690,1.858,702,2.784,703,2.784,831,3.166,876,3.061,879,2.043,901,3.671,903,3.061,1135,5.794,1136,5.794,1137,2.291,1138,3.997,1139,3.997,1140,3.997,1141,5.701,1142,4.793,1143,2.668,1144,2.668,1145,2.668,1146,2.668,1147,2.668,1148,2.668,1149,2.668,1150,2.668,1151,2.668,1152,2.668,1153,2.668,1154,2.668,1155,2.668,1156,2.668,1157,2.668,1158,2.668,1159,2.668,1160,2.668,1161,2.668,1162,2.668,1163,2.668,1164,2.668]],["title/injectables/WishlistService.html",[179,1.208,831,2.237]],["body/injectables/WishlistService.html",[3,0.149,4,0.149,8,0.128,23,0.215,24,0.457,25,1.955,26,1.863,31,1.224,35,1.61,37,1.391,38,0.019,42,1.561,43,1.561,46,0.319,53,1.278,54,1.094,55,0.7,60,1.149,62,0.149,63,0.737,102,0.23,142,0.013,143,0.013,145,1.84,150,1.84,154,1.863,155,1.863,165,2.233,179,1.64,181,1.84,192,2.085,193,3.726,201,3.613,212,1.955,217,1.955,218,2.085,219,2.406,220,1.955,224,2.401,253,0.845,268,0.921,370,1.84,433,4.44,451,2.834,453,1.955,455,2.085,457,2.615,459,1.955,460,4.037,461,2.875,462,2.875,464,2.615,465,4.44,708,4.44,715,2.875,831,3.036,1165,3.224,1166,5.103,1167,5.797,1168,5.103,1169,5.103,1170,3.754,1171,3.754,1172,3.754,1173,3.754,1174,3.754,1175,3.754,1176,3.754,1177,3.754,1178,5.797,1179,3.754,1180,3.754,1181,3.754,1182,3.754]],["title/coverage.html",[1183,4.387]],["body/coverage.html",[0,0.8,1,0.774,8,0.095,9,2.396,10,2.396,11,2.396,17,0.774,38,0.019,46,0.143,47,1.22,50,0.99,56,1.788,58,1.22,95,4.959,104,0.774,106,0.774,109,0.774,111,0.774,113,0.774,115,0.774,117,0.774,119,0.774,121,0.774,123,0.774,125,0.774,127,0.774,129,0.774,131,0.774,133,0.774,135,0.774,137,0.774,142,0.01,143,0.01,144,2.396,152,1.788,171,2.396,172,2.396,173,3.164,179,2.077,180,1.549,182,2.396,218,1.549,244,2.396,245,2.396,246,0.511,247,0.703,249,3.168,254,1.29,263,1.29,273,1.041,274,1.125,278,1.182,280,2.396,284,1.943,293,1.943,335,2.396,341,2.396,349,1.29,363,1.29,431,2.396,470,2.396,474,1.788,487,1.788,503,2.396,515,3.456,517,1.549,522,3.427,523,1.453,528,3.427,529,1.659,530,2.396,622,2.396,628,1.659,704,2.396,718,2.396,730,2.396,823,2.396,831,1.659,906,2.396,907,2.396,908,2.396,945,2.396,997,2.396,1003,2.396,1026,2.396,1027,1.943,1056,2.396,1067,2.396,1124,1.943,1126,2.396,1135,2.396,1136,2.396,1137,2.396,1165,2.396,1183,2.396,1184,2.789,1185,2.789,1186,2.789,1187,4.921,1188,3.548,1189,7.136,1190,2.396,1191,7.288,1192,2.396,1193,2.396,1194,2.396,1195,2.396,1196,2.396,1197,2.396,1198,2.396,1199,2.396,1200,2.396,1201,2.396,1202,2.396,1203,2.396,1204,2.396,1205,2.396,1206,2.396,1207,2.396,1208,4.921,1209,5.441,1210,4.921,1211,5.809,1212,4.921,1213,4.132,1214,4.132,1215,2.789,1216,2.789,1217,2.789,1218,2.789,1219,6.897,1220,2.789,1221,2.789,1222,2.396,1223,2.396,1224,4.989,1225,2.396,1226,2.396,1227,2.396,1228,2.789,1229,2.789,1230,2.396,1231,2.789,1232,2.789]],["title/dependencies.html",[1233,2.706,1234,3.878]],["body/dependencies.html",[38,0.019,55,0.902,60,1.479,142,0.015,143,0.015,160,1.804,162,3.638,163,3.098,215,4.151,216,4.151,370,2.369,371,4.151,372,5.167,561,2.875,668,3.702,669,3.702,670,3.702,671,3.098,710,4.151,1234,4.151,1235,4.833,1236,7.556,1237,4.833,1238,6.55,1239,5.167,1240,4.833,1241,4.151,1242,4.833,1243,4.833,1244,4.833,1245,4.833,1246,4.833,1247,4.833,1248,6.016,1249,4.833,1250,4.151,1251,4.833,1252,4.833,1253,4.833,1254,4.833,1255,4.833,1256,4.833,1257,4.833,1258,4.833,1259,4.833,1260,4.833]],["title/index.html",[23,0.181,1261,3.151,1262,3.151]],["body/index.html",[38,0.017,142,0.017,143,0.017,1263,5.985,1264,5.985]],["title/modules.html",[1265,4.387]],["body/modules.html",[38,0.017,142,0.017,143,0.017,1265,5.155]],["title/overview.html",[1266,4.387]],["body/overview.html",[2,1.71,38,0.017,79,2.875,142,0.017,143,0.017,181,2.875,248,1.478,1124,4.087,1266,5.039,1267,5.867,1268,5.867,1269,5.867]],["title/properties.html",[24,0.404,1233,2.706]],["body/properties.html",[24,0.533,38,0.018,142,0.017,143,0.017,1270,5.951,1271,5.951]],["title/miscellaneous/variables.html",[1272,2.706,1273,3.878]],["body/miscellaneous/variables.html",[17,1.251,23,0.18,38,0.019,42,2.223,43,2.223,46,0.349,50,1.115,142,0.011,143,0.011,198,2.407,210,2.889,212,1.637,218,2.503,224,2.86,229,3.871,268,0.716,308,2.744,391,3.424,451,2.926,453,1.637,457,3.139,459,3.402,460,2.189,475,2.189,483,2.189,631,2.015,664,2.015,687,3.378,722,2.699,1188,2.699,1190,4.526,1192,4.526,1193,2.699,1194,3.871,1195,2.699,1196,3.871,1197,2.699,1198,2.699,1199,3.871,1200,2.699,1201,3.871,1202,2.699,1203,3.871,1204,2.699,1205,4.526,1206,2.699,1207,3.871,1222,2.699,1223,3.871,1224,2.699,1225,3.871,1226,3.871,1227,3.871,1230,3.871,1239,2.699,1241,2.699,1250,2.699,1272,2.699,1273,2.699,1274,6.094,1275,3.143,1276,3.143,1277,3.143,1278,4.507,1279,3.143,1280,3.143,1281,3.143,1282,3.143,1283,3.143,1284,3.143,1285,3.143,1286,3.143,1287,3.143,1288,3.143,1289,3.143,1290,3.143,1291,3.143,1292,3.143,1293,3.143,1294,3.143,1295,3.143,1296,3.143,1297,4.507,1298,4.507,1299,3.143,1300,3.143,1301,3.143,1302,3.143,1303,3.143,1304,3.143,1305,3.143,1306,3.143,1307,3.143,1308,3.143,1309,3.143,1310,3.143,1311,3.143,1312,3.143,1313,4.507,1314,4.507,1315,4.507,1316,4.507,1317,4.507,1318,3.143,1319,3.143,1320,3.143,1321,3.143,1322,3.143,1323,3.143,1324,5.269,1325,5.756,1326,3.143,1327,3.143,1328,3.143,1329,3.143,1330,3.143,1331,3.143,1332,3.143,1333,3.143,1334,3.143,1335,3.143,1336,3.143,1337,3.143,1338,3.143,1339,3.143,1340,3.143,1341,3.143,1342,3.143]]],"invertedIndex":[["",{"_index":38,"title":{},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/AuthService.html":{},"components/BlankLayoutComponent.html":{},"interfaces/Brand.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/Ibrands.html":{},"interfaces/Icart.html":{},"interfaces/Icategories.html":{},"interfaces/Iorders.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwish.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"injectables/OrdersService.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{},"interfaces/User.html":{},"components/WishListComponent.html":{},"injectables/WishlistService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":95,"title":{},"body":{"components/AllOrderComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1271,"title":{},"body":{"properties.html":{}}}],["0.15.0",{"_index":1260,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1191,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1209,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1208,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1214,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1215,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1213,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1220,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1221,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":1217,"title":{},"body":{"coverage.html":{}}}],["0/28",{"_index":1216,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1187,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1210,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1219,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1212,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1211,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1218,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":79,"title":{"interfaces/Category-1.html":{},"interfaces/Product-1.html":{},"interfaces/Subcategory-1.html":{}},"body":{"components/AllOrderComponent.html":{},"components/DetailsComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{},"overview.html":{}}}],["1,2,3,4,5].slice(0",{"_index":92,"title":{},"body":{"components/AllOrderComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["1/1",{"_index":1229,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1228,"title":{},"body":{"coverage.html":{}}}],["1000",{"_index":647,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{}}}],["1024",{"_index":657,"title":{},"body":{"components/DetailsComponent.html":{}}}],["11.17.2",{"_index":1256,"title":{},"body":{"dependencies.html":{}}}],["13.0.0",{"_index":1249,"title":{},"body":{"dependencies.html":{}}}],["18",{"_index":1267,"title":{},"body":{"overview.html":{}}}],["19.0.0",{"_index":1236,"title":{},"body":{"dependencies.html":{}}}],["19.0.6",{"_index":1243,"title":{},"body":{"dependencies.html":{}}}],["19.0.7",{"_index":1248,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":521,"title":{"interfaces/Category-2.html":{},"interfaces/Subcategory-2.html":{}},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{}}}],["2).join",{"_index":84,"title":{},"body":{"components/AllOrderComponent.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{},"components/WishListComponent.html":{}}}],["2.3.0",{"_index":1258,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1107,"title":{},"body":{"components/RegisterComponent.html":{}}}],["2000",{"_index":854,"title":{},"body":{"components/HomeComponent.html":{}}}],["21",{"_index":1269,"title":{},"body":{"overview.html":{}}}],["3",{"_index":527,"title":{"interfaces/Category-3.html":{},"interfaces/Subcategory-3.html":{}},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["3.1.2",{"_index":1252,"title":{},"body":{"dependencies.html":{}}}],["3085d6",{"_index":393,"title":{},"body":{"components/CartComponent.html":{}}}],["4.0.0",{"_index":1253,"title":{},"body":{"dependencies.html":{}}}],["4.18.2",{"_index":1251,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":856,"title":{},"body":{"components/HomeComponent.html":{}}}],["480",{"_index":655,"title":{},"body":{"components/DetailsComponent.html":{}}}],["500",{"_index":932,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["6",{"_index":859,"title":{},"body":{"components/HomeComponent.html":{}}}],["6.7.2",{"_index":1246,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":817,"title":{},"body":{"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["7.8.0",{"_index":1255,"title":{},"body":{"dependencies.html":{}}}],["700",{"_index":650,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{}}}],["740",{"_index":857,"title":{},"body":{"components/HomeComponent.html":{}}}],["768",{"_index":656,"title":{},"body":{"components/DetailsComponent.html":{}}}],["8",{"_index":1268,"title":{},"body":{"overview.html":{}}}],["940",{"_index":858,"title":{},"body":{"components/HomeComponent.html":{}}}],["9]{6",{"_index":757,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["9]{8",{"_index":575,"title":{},"body":{"components/CheckoutComponent.html":{},"components/RegisterComponent.html":{}}}],["__v",{"_index":518,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Category-3.html":{},"interfaces/Icart.html":{},"interfaces/Iwish.html":{},"interfaces/Product.html":{},"interfaces/Product2.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-3.html":{}}}],["_id",{"_index":250,"title":{},"body":{"interfaces/Brand.html":{},"interfaces/CartItem.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"interfaces/Ibrands.html":{},"interfaces/Icart.html":{},"interfaces/Icategories.html":{},"interfaces/Iorders.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwish.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{},"interfaces/User.html":{}}}],["_router",{"_index":1316,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_router.navigate(['/home",{"_index":1338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_router.navigate(['/login",{"_index":1318,"title":{},"body":{"miscellaneous/variables.html":{}}}],["abstractcontrol",{"_index":1072,"title":{},"body":{"components/RegisterComponent.html":{}}}],["activatedroute",{"_index":534,"title":{},"body":{"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{}}}],["activatedroute=inject(activatedroute",{"_index":562,"title":{},"body":{"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{}}}],["actual_component",{"_index":141,"title":{},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{}}}],["add",{"_index":702,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{},"components/WishListComponent.html":{}}}],["addproducttocart",{"_index":434,"title":{},"body":{"injectables/CartService.html":{}}}],["addproducttocart(id",{"_index":440,"title":{},"body":{"injectables/CartService.html":{}}}],["addproducttowishlist",{"_index":1166,"title":{},"body":{"injectables/WishlistService.html":{}}}],["addproducttowishlist(id",{"_index":1170,"title":{},"body":{"injectables/WishlistService.html":{}}}],["addproducttowishlist(id:string",{"_index":1176,"title":{},"body":{"injectables/WishlistService.html":{}}}],["addtocart",{"_index":632,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{},"components/WishListComponent.html":{}}}],["addtocart(id",{"_index":633,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{},"components/WishListComponent.html":{}}}],["addtowish",{"_index":832,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["addtowish(id",{"_index":839,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["afterviewinit",{"_index":946,"title":{},"body":{"components/NavbarComponent.html":{}}}],["afterviewinit,ondestroy",{"_index":980,"title":{},"body":{"components/NavbarComponent.html":{}}}],["allorder",{"_index":27,"title":{},"body":{"components/AllOrderComponent.html":{}}}],["allordercomponent",{"_index":1,"title":{"components/AllOrderComponent.html":{}},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{},"coverage.html":{}}}],["angular",{"_index":1291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["angular/animations",{"_index":1235,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":370,"title":{},"body":{"components/CartComponent.html":{},"injectables/CartService.html":{},"injectables/FlowbiteService.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"injectables/OrdersService.html":{},"components/ProductsComponent.html":{},"injectables/WishlistService.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BrandsService.html":{},"injectables/CartService.html":{},"injectables/CategoriesService.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"injectables/WishlistService.html":{}}}],["angular/compiler",{"_index":1237,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":55,"title":{},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/AuthService.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesService.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"injectables/OrdersService.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"components/WishListComponent.html":{},"injectables/WishlistService.html":{},"dependencies.html":{}}}],["angular/core/testing",{"_index":490,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["angular/forms",{"_index":561,"title":{},"body":{"components/CheckoutComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1238,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/AuthService.html":{},"components/BlankLayoutComponent.html":{},"components/CartComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["angular/ssr",{"_index":1242,"title":{},"body":{"dependencies.html":{}}}],["angularapp",{"_index":1225,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["angularnodeappengine",{"_index":1285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api",{"_index":682,"title":{},"body":{"components/DetailsComponent.html":{}}}],["app",{"_index":17,"title":{},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["app.component.html",{"_index":148,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":149,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":104,"title":{"components/AppComponent.html":{}},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1194,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["applicationconfig",{"_index":1297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arrayofobject",{"_index":1131,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["arrayofobject.filter",{"_index":1133,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["aura",{"_index":1310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auth",{"_index":107,"title":{},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{}}}],["authguard",{"_index":1199,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authlayoutcomponent",{"_index":106,"title":{"components/AuthLayoutComponent.html":{}},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{},"coverage.html":{}}}],["authservice",{"_index":180,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthService.html":{},"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["authservice=inject(authservice",{"_index":984,"title":{},"body":{"components/NavbarComponent.html":{}}}],["autoplay",{"_index":645,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{}}}],["autoplayhoverpause",{"_index":648,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{}}}],["autoplaytimeout",{"_index":646,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{}}}],["baseurl:'https://ecommerce.routemisr.com",{"_index":1323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["behaviorsubject",{"_index":454,"title":{},"body":{"injectables/CartService.html":{}}}],["blank",{"_index":110,"title":{},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{}}}],["blanklayoutcomponent",{"_index":109,"title":{"components/BlankLayoutComponent.html":{}},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{},"coverage.html":{}}}],["boolean",{"_index":261,"title":{},"body":{"interfaces/Brand.html":{},"components/BrandsComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Category-1.html":{},"components/CheckoutComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/Iorders.html":{},"components/LoginComponent.html":{},"interfaces/Product-1.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory-1.html":{},"interfaces/User.html":{}}}],["bootstrap",{"_index":1223,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["bootstrapapplication(appcomponent",{"_index":1319,"title":{},"body":{"miscellaneous/variables.html":{}}}],["brand",{"_index":247,"title":{"interfaces/Brand.html":{}},"body":{"interfaces/Brand.html":{},"components/BrandsComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"interfaces/Icart.html":{},"interfaces/Iorders.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwish.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["brand._id",{"_index":331,"title":{},"body":{"components/BrandsComponent.html":{}}}],["brand.name",{"_index":332,"title":{},"body":{"components/BrandsComponent.html":{}}}],["brand:{{item.product.brand.name",{"_index":85,"title":{},"body":{"components/AllOrderComponent.html":{}}}],["brands",{"_index":281,"title":{},"body":{"components/BrandsComponent.html":{},"components/NavbarComponent.html":{}}}],["brands'},{'name",{"_index":112,"title":{},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{}}}],["brands.component.html",{"_index":282,"title":{},"body":{"components/BrandsComponent.html":{}}}],["brands.component.scss",{"_index":283,"title":{},"body":{"components/BrandsComponent.html":{}}}],["brandscomponent",{"_index":111,"title":{"components/BrandsComponent.html":{}},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{},"coverage.html":{}}}],["brandsservice",{"_index":284,"title":{"injectables/BrandsService.html":{}},"body":{"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"coverage.html":{}}}],["browser",{"_index":1239,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["browserdistfolder",{"_index":1226,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["build",{"_index":1295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["call",{"_index":681,"title":{},"body":{"components/DetailsComponent.html":{}}}],["callback",{"_index":712,"title":{},"body":{"injectables/FlowbiteService.html":{}}}],["callback(flowbite",{"_index":717,"title":{},"body":{"injectables/FlowbiteService.html":{}}}],["canactivatefn",{"_index":1313,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cancelbuttoncolor",{"_index":394,"title":{},"body":{"components/CartComponent.html":{}}}],["capital",{"_index":814,"title":{},"body":{"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["card",{"_index":703,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{},"components/WishListComponent.html":{}}}],["carousel",{"_index":669,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"dependencies.html":{}}}],["carouselmodule",{"_index":623,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{}}}],["cart",{"_index":342,"title":{},"body":{"components/CartComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{},"components/WishListComponent.html":{}}}],["cart'},{'name",{"_index":114,"title":{},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{}}}],["cart.component.html",{"_index":346,"title":{},"body":{"components/CartComponent.html":{}}}],["cart.component.scss",{"_index":347,"title":{},"body":{"components/CartComponent.html":{}}}],["cartcomponent",{"_index":113,"title":{"components/CartComponent.html":{}},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{},"coverage.html":{}}}],["cartcount",{"_index":951,"title":{},"body":{"components/NavbarComponent.html":{}}}],["cartcount:signal",{"_index":981,"title":{},"body":{"components/NavbarComponent.html":{}}}],["cartdetails",{"_index":348,"title":{},"body":{"components/CartComponent.html":{}}}],["cartdetails.products",{"_index":421,"title":{},"body":{"components/CartComponent.html":{}}}],["cartdetails.totalcartprice",{"_index":418,"title":{},"body":{"components/CartComponent.html":{}}}],["cartdetails:icart",{"_index":375,"title":{},"body":{"components/CartComponent.html":{}}}],["cartid",{"_index":535,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["cartid:string",{"_index":563,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["cartitem",{"_index":58,"title":{"interfaces/CartItem.html":{}},"body":{"components/AllOrderComponent.html":{},"interfaces/Brand.html":{},"interfaces/CartItem.html":{},"interfaces/Category-1.html":{},"interfaces/Iorders.html":{},"interfaces/Product-1.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory-1.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["cartitems",{"_index":264,"title":{},"body":{"interfaces/Brand.html":{},"interfaces/CartItem.html":{},"interfaces/Category-1.html":{},"interfaces/Iorders.html":{},"interfaces/Product-1.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory-1.html":{},"interfaces/User.html":{}}}],["cartitems:cartitem",{"_index":65,"title":{},"body":{"components/AllOrderComponent.html":{}}}],["cartnumber",{"_index":432,"title":{},"body":{"injectables/CartService.html":{}}}],["cartnumber:writablesignal",{"_index":456,"title":{},"body":{"injectables/CartService.html":{}}}],["cartowner",{"_index":516,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Icart.html":{},"interfaces/Product.html":{},"interfaces/Product2.html":{},"interfaces/Subcategory.html":{}}}],["cartservice",{"_index":349,"title":{"injectables/CartService.html":{}},"body":{"components/CartComponent.html":{},"injectables/CartService.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/ProductsComponent.html":{},"components/WishListComponent.html":{},"coverage.html":{}}}],["cartservice=inject(cartservice",{"_index":673,"title":{},"body":{"components/DetailsComponent.html":{}}}],["cash",{"_index":617,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["cashpayment",{"_index":540,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["cashpayment():void",{"_index":591,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["cat",{"_index":500,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{}}}],["cat._id",{"_index":501,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{}}}],["cat.name",{"_index":502,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{}}}],["categories",{"_index":471,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{}}}],["categories'},{'name",{"_index":116,"title":{},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{}}}],["categories.component.html",{"_index":472,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["categories.component.scss",{"_index":473,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["categoriescomponent",{"_index":115,"title":{"components/CategoriesComponent.html":{}},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{},"coverage.html":{}}}],["categoriesservice",{"_index":474,"title":{"injectables/CategoriesService.html":{}},"body":{"components/CategoriesComponent.html":{},"injectables/CategoriesService.html":{},"components/HomeComponent.html":{},"coverage.html":{}}}],["category",{"_index":278,"title":{"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{}},"body":{"interfaces/Brand.html":{},"interfaces/CartItem.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"interfaces/Icart.html":{},"interfaces/Iorders.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwish.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["characters",{"_index":818,"title":{},"body":{"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["check",{"_index":595,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["checkout",{"_index":427,"title":{},"body":{"components/CartComponent.html":{},"components/CheckoutComponent.html":{}}}],["checkout'},{'name",{"_index":118,"title":{},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{}}}],["checkout.component.html",{"_index":532,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["checkout.component.scss",{"_index":533,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["checkoutcomponent",{"_index":117,"title":{"components/CheckoutComponent.html":{}},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{},"coverage.html":{}}}],["checkoutform",{"_index":536,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["checkoutform!:formgroup",{"_index":565,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["checkoutform.get('details",{"_index":598,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["checkoutform.get(\\'details",{"_index":619,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["checkoutpayment",{"_index":1004,"title":{},"body":{"injectables/OrdersService.html":{}}}],["checkoutpayment(id",{"_index":1008,"title":{},"body":{"injectables/OrdersService.html":{}}}],["checkoutpayment(id:string,data:object):observable",{"_index":1016,"title":{},"body":{"injectables/OrdersService.html":{}}}],["city",{"_index":271,"title":{},"body":{"interfaces/Brand.html":{},"interfaces/CartItem.html":{},"interfaces/Category-1.html":{},"components/CheckoutComponent.html":{},"interfaces/Iorders.html":{},"interfaces/Product-1.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory-1.html":{},"interfaces/User.html":{}}}],["city:new",{"_index":576,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["citycontrol=checkoutform.get('city",{"_index":611,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["citycontrol=checkoutform.get(\\'city",{"_index":621,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["citycontrol?.errors&&citycontrol?.touched",{"_index":612,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["claercart",{"_index":351,"title":{},"body":{"components/CartComponent.html":{}}}],["claercart():void",{"_index":410,"title":{},"body":{"components/CartComponent.html":{}}}],["class",{"_index":63,"title":{},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/AuthService.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesService.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"injectables/OrdersService.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"components/WishListComponent.html":{},"injectables/WishlistService.html":{}}}],["clear",{"_index":420,"title":{},"body":{"components/CartComponent.html":{}}}],["clearcart",{"_index":435,"title":{},"body":{"injectables/CartService.html":{}}}],["cli",{"_index":1292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["code",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["commerce",{"_index":1264,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{}},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":101,"title":{},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{},"overview.html":{}}}],["computed",{"_index":966,"title":{},"body":{"components/NavbarComponent.html":{}}}],["config",{"_index":1190,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["confirmation",{"_index":1112,"title":{},"body":{"components/RegisterComponent.html":{}}}],["confirmbuttoncolor",{"_index":392,"title":{},"body":{"components/CartComponent.html":{}}}],["confirmbuttontext",{"_index":396,"title":{},"body":{"components/CartComponent.html":{}}}],["confirmpassword",{"_index":1070,"title":{},"body":{"components/RegisterComponent.html":{}}}],["confirmpassword(group",{"_index":1071,"title":{},"body":{"components/RegisterComponent.html":{}}}],["confirmpassword(group:abstractcontrol",{"_index":1094,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotpasswordComponent.html":{}}}],["console.log(\"errcash\",err",{"_index":594,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["console.log('successssssss',res",{"_index":781,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["console.log(err",{"_index":590,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["console.log(err.error.message",{"_index":1327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(res",{"_index":586,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["console.log(this.checkoutform.value",{"_index":584,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["const",{"_index":459,"title":{},"body":{"injectables/CartService.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"injectables/OrdersService.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"injectables/WishlistService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/BrandsService.html":{},"injectables/CartService.html":{},"injectables/CategoriesService.html":{},"injectables/FlowbiteService.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"injectables/WishlistService.html":{}}}],["constructor(@inject(platform_id",{"_index":714,"title":{},"body":{"injectables/FlowbiteService.html":{}}}],["constructor(flowbiteservice",{"_index":151,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(httpclient",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BrandsService.html":{},"injectables/CartService.html":{},"injectables/CategoriesService.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"injectables/WishlistService.html":{}}}],["constructor(platformid",{"_index":706,"title":{},"body":{"injectables/FlowbiteService.html":{}}}],["constructor(private",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"injectables/BrandsService.html":{},"injectables/CartService.html":{},"injectables/CategoriesService.html":{},"injectables/OrdersService.html":{},"injectables/WishlistService.html":{}}}],["core/pipes/search.pipe",{"_index":1052,"title":{},"body":{"components/ProductsComponent.html":{}}}],["core/services/auth/auth.service",{"_index":760,"title":{},"body":{"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["core/services/brands/brands.service",{"_index":312,"title":{},"body":{"components/BrandsComponent.html":{}}}],["core/services/cart/cart.service",{"_index":369,"title":{},"body":{"components/CartComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/ProductsComponent.html":{},"components/WishListComponent.html":{}}}],["core/services/categories/categories.service",{"_index":486,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{}}}],["core/services/flowbite/flowbite.service",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["core/services/orders/orders.service",{"_index":57,"title":{},"body":{"components/AllOrderComponent.html":{},"components/CheckoutComponent.html":{}}}],["core/services/products/products.service",{"_index":666,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["core/services/wishlist/wishlist.service",{"_index":879,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{},"components/WishListComponent.html":{}}}],["count",{"_index":86,"title":{},"body":{"components/AllOrderComponent.html":{},"interfaces/Brand.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Icart.html":{},"interfaces/Iorders.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/User.html":{}}}],["count:number):void",{"_index":408,"title":{},"body":{"components/CartComponent.html":{}}}],["coverage",{"_index":1183,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createdat",{"_index":266,"title":{},"body":{"interfaces/Brand.html":{},"interfaces/CartItem.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"interfaces/Ibrands.html":{},"interfaces/Icart.html":{},"interfaces/Icategories.html":{},"interfaces/Iorders.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwish.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{},"interfaces/User.html":{}}}],["createnoderequesthandler(app",{"_index":1287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currency:'gbp",{"_index":419,"title":{},"body":{"components/CartComponent.html":{}}}],["currency:\\'gbp",{"_index":430,"title":{},"body":{"components/CartComponent.html":{}}}],["currencypipe",{"_index":343,"title":{},"body":{"components/CartComponent.html":{}}}],["currencypipe,routerlink,sweetalert2module",{"_index":374,"title":{},"body":{"components/CartComponent.html":{}}}],["currentdata",{"_index":285,"title":{},"body":{"components/BrandsComponent.html":{}}}],["currentdata.name",{"_index":334,"title":{},"body":{"components/BrandsComponent.html":{}}}],["currentdata:ibrands",{"_index":317,"title":{},"body":{"components/BrandsComponent.html":{}}}],["currentitem",{"_index":288,"title":{},"body":{"components/BrandsComponent.html":{}}}],["currentitem(brand",{"_index":292,"title":{},"body":{"components/BrandsComponent.html":{}}}],["currentitem(brand:ibrands):void",{"_index":328,"title":{},"body":{"components/BrandsComponent.html":{}}}],["custom",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["custommainslider",{"_index":827,"title":{},"body":{"components/HomeComponent.html":{}}}],["customoptions",{"_index":626,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{}}}],["d33",{"_index":395,"title":{},"body":{"components/CartComponent.html":{}}}],["danger",{"_index":601,"title":{},"body":{"components/CheckoutComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["data",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotpasswordComponent.html":{},"injectables/OrdersService.html":{}}}],["decode",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["decorators",{"_index":862,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarComponent.html":{}}}],["default",{"_index":42,"title":{},"body":{"components/AllOrderComponent.html":{},"injectables/AuthService.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/OrdersService.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{},"injectables/WishlistService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":35,"title":{},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesService.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/OrdersService.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"components/WishListComponent.html":{},"injectables/WishlistService.html":{}}}],["delete",{"_index":398,"title":{},"body":{"components/CartComponent.html":{}}}],["deleted",{"_index":405,"title":{},"body":{"components/CartComponent.html":{}}}],["deliveries",{"_index":729,"title":{},"body":{"components/FooterComponent.html":{}}}],["dependencies",{"_index":1234,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":526,"title":{},"body":{"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwish.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{}}}],["details",{"_index":269,"title":{},"body":{"interfaces/Brand.html":{},"interfaces/CartItem.html":{},"interfaces/Category-1.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"interfaces/Iorders.html":{},"interfaces/Product-1.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory-1.html":{},"interfaces/User.html":{}}}],["details'},{'name",{"_index":120,"title":{},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{}}}],["details.component.html",{"_index":624,"title":{},"body":{"components/DetailsComponent.html":{}}}],["details.component.scss",{"_index":625,"title":{},"body":{"components/DetailsComponent.html":{}}}],["detailscomponent",{"_index":119,"title":{"components/DetailsComponent.html":{}},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{},"coverage.html":{}}}],["detailscontrol",{"_index":597,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["detailscontrol?.touched",{"_index":600,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["detailsproduct",{"_index":627,"title":{},"body":{"components/DetailsComponent.html":{}}}],["detailsproduct.category.name",{"_index":698,"title":{},"body":{"components/DetailsComponent.html":{}}}],["detailsproduct.description",{"_index":697,"title":{},"body":{"components/DetailsComponent.html":{}}}],["detailsproduct.images",{"_index":695,"title":{},"body":{"components/DetailsComponent.html":{}}}],["detailsproduct.price",{"_index":699,"title":{},"body":{"components/DetailsComponent.html":{}}}],["detailsproduct.ratingsaverage",{"_index":700,"title":{},"body":{"components/DetailsComponent.html":{}}}],["detailsproduct.title",{"_index":696,"title":{},"body":{"components/DetailsComponent.html":{}}}],["detailsproduct:iproduct",{"_index":676,"title":{},"body":{"components/DetailsComponent.html":{}}}],["dev",{"_index":1293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["diagnostics_channel",{"_index":314,"title":{},"body":{"components/BrandsComponent.html":{}}}],["directive",{"_index":99,"title":{},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{}}}],["directives",{"_index":140,"title":{},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{}}}],["dirname(fileurltopath(import.meta.url",{"_index":1296,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation",{"_index":1184,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{}}}],["dots",{"_index":644,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{}}}],["download",{"_index":726,"title":{},"body":{"components/FooterComponent.html":{}}}],["during",{"_index":1294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dynamic",{"_index":1240,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1263,"title":{},"body":{"index.html":{}}}],["egp",{"_index":90,"title":{},"body":{"components/AllOrderComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{},"components/WishListComponent.html":{}}}],["element",{"_index":98,"title":{},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{}}}],["elementref",{"_index":861,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarComponent.html":{}}}],["email",{"_index":272,"title":{},"body":{"interfaces/Brand.html":{},"interfaces/CartItem.html":{},"interfaces/Category-1.html":{},"components/ForgotpasswordComponent.html":{},"interfaces/Iorders.html":{},"components/LoginComponent.html":{},"interfaces/Product-1.html":{},"components/RegisterComponent.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory-1.html":{},"interfaces/User.html":{}}}],["email:new",{"_index":747,"title":{},"body":{"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["emailcontrol=loginform.get('email",{"_index":937,"title":{},"body":{"components/LoginComponent.html":{}}}],["emailcontrol=loginform.get(\\'email",{"_index":943,"title":{},"body":{"components/LoginComponent.html":{}}}],["emailcontrol=register.get('email",{"_index":1108,"title":{},"body":{"components/RegisterComponent.html":{}}}],["emailcontrol=register.get(\\'email",{"_index":1118,"title":{},"body":{"components/RegisterComponent.html":{}}}],["emailcontrol=verifyemail.get('email",{"_index":790,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["emailcontrol=verifyemail.get(\\'email",{"_index":820,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["emailcontrol?.touched",{"_index":792,"title":{},"body":{"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["empty",{"_index":428,"title":{},"body":{"components/CartComponent.html":{}}}],["entar",{"_index":795,"title":{},"body":{"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["enter",{"_index":609,"title":{},"body":{"components/CheckoutComponent.html":{},"components/RegisterComponent.html":{}}}],["environment",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BrandsService.html":{},"injectables/CartService.html":{},"injectables/OrdersService.html":{},"injectables/WishlistService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environments/environment",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BrandsService.html":{},"injectables/CartService.html":{},"injectables/OrdersService.html":{},"injectables/WishlistService.html":{}}}],["err",{"_index":1330,"title":{},"body":{"miscellaneous/variables.html":{}}}],["err.error.message",{"_index":935,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["error:(err",{"_index":589,"title":{},"body":{"components/CheckoutComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{}}}],["error:(err:httperrorresponse",{"_index":1092,"title":{},"body":{"components/RegisterComponent.html":{}}}],["errorrrrrrrrrrrrrrrrrrrrrrr',err.message",{"_index":786,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["errorsinterceptor",{"_index":1203,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["event",{"_index":299,"title":{},"body":{"components/BrandsComponent.html":{}}}],["event.stoppropagation",{"_index":327,"title":{},"body":{"components/BrandsComponent.html":{}}}],["eventcoalescing",{"_index":1300,"title":{},"body":{"miscellaneous/variables.html":{}}}],["export",{"_index":62,"title":{},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/AuthService.html":{},"components/BlankLayoutComponent.html":{},"interfaces/Brand.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/Ibrands.html":{},"interfaces/Icart.html":{},"interfaces/Icategories.html":{},"interfaces/Iorders.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwish.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"injectables/OrdersService.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{},"interfaces/User.html":{},"components/WishListComponent.html":{},"injectables/WishlistService.html":{}}}],["express",{"_index":1250,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["false",{"_index":308,"title":{},"body":{"components/BrandsComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/AuthService.html":{},"components/BlankLayoutComponent.html":{},"interfaces/Brand.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/Ibrands.html":{},"interfaces/Icart.html":{},"interfaces/Icategories.html":{},"interfaces/Iorders.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwish.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"injectables/OrdersService.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{},"interfaces/User.html":{},"components/WishListComponent.html":{},"injectables/WishlistService.html":{},"coverage.html":{}}}],["flowbite",{"_index":710,"title":{},"body":{"injectables/FlowbiteService.html":{},"dependencies.html":{}}}],["flowbiteservice",{"_index":152,"title":{"injectables/FlowbiteService.html":{}},"body":{"components/AppComponent.html":{},"injectables/FlowbiteService.html":{},"components/NavbarComponent.html":{},"coverage.html":{}}}],["footer",{"_index":719,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":122,"title":{},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{}}}],["footer.component.html",{"_index":720,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":721,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer.component",{"_index":178,"title":{},"body":{"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{}}}],["footercomponent",{"_index":121,"title":{"components/FooterComponent.html":{}},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{},"coverage.html":{}}}],["forgot",{"_index":787,"title":{},"body":{"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{}}}],["forgotpassword",{"_index":731,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["forgotpassword'},{'name",{"_index":124,"title":{},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{}}}],["forgotpassword.component.html",{"_index":732,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["forgotpassword.component.scss",{"_index":733,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["forgotpasswordcomponent",{"_index":123,"title":{"components/ForgotpasswordComponent.html":{}},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{},"coverage.html":{}}}],["formcontrol",{"_index":559,"title":{},"body":{"components/CheckoutComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formcontrol(null,[validators.required",{"_index":572,"title":{},"body":{"components/CheckoutComponent.html":{},"components/RegisterComponent.html":{}}}],["formcontrol(null,[validators.required,validators.email",{"_index":748,"title":{},"body":{"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formcontrol(null,[validators.required,validators.minlength(3),validators.maxlength(20",{"_index":1082,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formcontrol(null,[validators.required,validators.pattern(/^01[0125][0",{"_index":1084,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formcontrol(null,[validators.required,validators.pattern(/^[0",{"_index":756,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["formcontrol(null,[validators.required,validators.pattern(/^[a",{"_index":750,"title":{},"body":{"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formgroup",{"_index":553,"title":{},"body":{"components/CheckoutComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formsmodule",{"_index":1028,"title":{},"body":{"components/ProductsComponent.html":{}}}],["fortawesome/fontawesome",{"_index":1244,"title":{},"body":{"dependencies.html":{}}}],["found",{"_index":1002,"title":{},"body":{"components/NotfoundComponent.html":{}}}],["free",{"_index":1245,"title":{},"body":{"dependencies.html":{}}}],["fresh",{"_index":690,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{},"components/WishListComponent.html":{}}}],["freshcart",{"_index":722,"title":{},"body":{"components/FooterComponent.html":{},"miscellaneous/variables.html":{}}}],["function",{"_index":713,"title":{},"body":{"injectables/FlowbiteService.html":{}}}],["getallbrands",{"_index":336,"title":{},"body":{"injectables/BrandsService.html":{}}}],["getallbrands():observable",{"_index":339,"title":{},"body":{"injectables/BrandsService.html":{}}}],["getallgategories",{"_index":504,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["getallgategories():observable",{"_index":511,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["getallorder",{"_index":32,"title":{},"body":{"components/AllOrderComponent.html":{},"injectables/OrdersService.html":{}}}],["getallorder():observable",{"_index":1022,"title":{},"body":{"injectables/OrdersService.html":{}}}],["getallorder():void",{"_index":69,"title":{},"body":{"components/AllOrderComponent.html":{}}}],["getallproduct",{"_index":1057,"title":{},"body":{"injectables/ProductsService.html":{}}}],["getallproduct():observable",{"_index":1063,"title":{},"body":{"injectables/ProductsService.html":{}}}],["getbrandsdata",{"_index":289,"title":{},"body":{"components/BrandsComponent.html":{}}}],["getbrandsdata():void",{"_index":320,"title":{},"body":{"components/BrandsComponent.html":{}}}],["getcartdata",{"_index":352,"title":{},"body":{"components/CartComponent.html":{}}}],["getcartdata():void",{"_index":378,"title":{},"body":{"components/CartComponent.html":{}}}],["getcartid",{"_index":541,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["getcartid():void",{"_index":577,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["getcategoriesdata",{"_index":476,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{}}}],["getcategoriesdata():void",{"_index":493,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["getlogedusercart",{"_index":436,"title":{},"body":{"injectables/CartService.html":{}}}],["getlogged",{"_index":1142,"title":{},"body":{"components/WishListComponent.html":{}}}],["getlogged():void",{"_index":1157,"title":{},"body":{"components/WishListComponent.html":{}}}],["getloggedwishlist",{"_index":1167,"title":{},"body":{"injectables/WishlistService.html":{}}}],["getloggedwishlist():observable",{"_index":1181,"title":{},"body":{"injectables/WishlistService.html":{}}}],["getproductsdata",{"_index":833,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["getspecificgategories",{"_index":505,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["getspecificgategories(id",{"_index":508,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["getspecificgategories(id:string):observable",{"_index":513,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["getspecificproduct",{"_index":1058,"title":{},"body":{"injectables/ProductsService.html":{}}}],["getspecificproduct(id",{"_index":1061,"title":{},"body":{"injectables/ProductsService.html":{}}}],["getspecificproduct(id:string|null):observable",{"_index":1065,"title":{},"body":{"injectables/ProductsService.html":{}}}],["getting",{"_index":1261,"title":{"index.html":{}},"body":{}}],["getuserorder",{"_index":1005,"title":{},"body":{"injectables/OrdersService.html":{}}}],["getuserorder(id",{"_index":1011,"title":{},"body":{"injectables/OrdersService.html":{}}}],["getuserorder(id:string):observable",{"_index":1024,"title":{},"body":{"injectables/OrdersService.html":{}}}],["greatecashorder",{"_index":1006,"title":{},"body":{"injectables/OrdersService.html":{}}}],["greatecashorder(id",{"_index":1013,"title":{},"body":{"injectables/OrdersService.html":{}}}],["greatecashorder(id:string,data:object):observable",{"_index":1020,"title":{},"body":{"injectables/OrdersService.html":{}}}],["group",{"_index":1074,"title":{},"body":{"components/RegisterComponent.html":{}}}],["group.get('password')?.value",{"_index":1095,"title":{},"body":{"components/RegisterComponent.html":{}}}],["group.get('repassword')?.value",{"_index":1097,"title":{},"body":{"components/RegisterComponent.html":{}}}],["handler",{"_index":1289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["headers",{"_index":465,"title":{},"body":{"injectables/CartService.html":{},"injectables/OrdersService.html":{},"injectables/WishlistService.html":{}}}],["headersinterceptor",{"_index":1205,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["hearticon",{"_index":828,"title":{},"body":{"components/HomeComponent.html":{}}}],["here",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["home",{"_index":824,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarComponent.html":{}}}],["home'},{'name",{"_index":126,"title":{},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{}}}],["home.component.html",{"_index":825,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":826,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":125,"title":{"components/HomeComponent.html":{}},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{},"coverage.html":{}}}],["html",{"_index":97,"title":{},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{}}}],["httpclient",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BrandsService.html":{},"injectables/CartService.html":{},"injectables/CategoriesService.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"injectables/WishlistService.html":{}}}],["httpclient:httpclient",{"_index":510,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{}}}],["httperrorresponse",{"_index":1088,"title":{},"body":{"components/RegisterComponent.html":{}}}],["httpinterceptorfn",{"_index":1324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ibrands",{"_index":293,"title":{"interfaces/Ibrands.html":{}},"body":{"components/BrandsComponent.html":{},"interfaces/Ibrands.html":{},"coverage.html":{}}}],["icart",{"_index":363,"title":{"interfaces/Icart.html":{}},"body":{"components/CartComponent.html":{},"injectables/CartService.html":{},"interfaces/Category.html":{},"components/CheckoutComponent.html":{},"interfaces/Icart.html":{},"interfaces/Product.html":{},"interfaces/Product2.html":{},"interfaces/Subcategory.html":{},"coverage.html":{}}}],["icategories",{"_index":487,"title":{"interfaces/Icategories.html":{}},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{},"interfaces/Icategories.html":{},"coverage.html":{}}}],["icon",{"_index":388,"title":{},"body":{"components/CartComponent.html":{}}}],["id",{"_index":268,"title":{},"body":{"interfaces/Brand.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"injectables/CategoriesService.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"interfaces/Icart.html":{},"interfaces/Iorders.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwish.html":{},"components/NavbarComponent.html":{},"injectables/OrdersService.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{},"interfaces/User.html":{},"components/WishListComponent.html":{},"injectables/WishlistService.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":1185,"title":{},"body":{"coverage.html":{}}}],["idprduct",{"_index":679,"title":{},"body":{"components/DetailsComponent.html":{}}}],["if(!islogin",{"_index":995,"title":{},"body":{"components/NavbarComponent.html":{}}}],["if(cartdetails.totalcartprice",{"_index":415,"title":{},"body":{"components/CartComponent.html":{}}}],["if(citycontrol?.geterror(\"required",{"_index":613,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["if(detailscontrol?.errors",{"_index":599,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["if(detailscontrol?.geterror(\"required",{"_index":602,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["if(detailsproduct",{"_index":693,"title":{},"body":{"components/DetailsComponent.html":{}}}],["if(detailsproduct.ratingsaverage",{"_index":701,"title":{},"body":{"components/DetailsComponent.html":{}}}],["if(emailcontrol?.errors",{"_index":791,"title":{},"body":{"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["if(emailcontrol?.geterror(\"email",{"_index":794,"title":{},"body":{"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["if(emailcontrol?.geterror(\"required",{"_index":793,"title":{},"body":{"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["if(isloading",{"_index":616,"title":{},"body":{"components/CheckoutComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["if(islogin",{"_index":993,"title":{},"body":{"components/NavbarComponent.html":{}}}],["if(isplatformbrowser(id",{"_index":1317,"title":{},"body":{"miscellaneous/variables.html":{}}}],["if(isplatformbrowser(platform_id",{"_index":1331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["if(isplatformbrowser(this.id",{"_index":891,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/ProductsComponent.html":{}}}],["if(issuccess",{"_index":618,"title":{},"body":{"components/CheckoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["if(istoggellightbox",{"_index":333,"title":{},"body":{"components/BrandsComponent.html":{}}}],["if(item.product.ratingsaverage",{"_index":94,"title":{},"body":{"components/AllOrderComponent.html":{}}}],["if(localstorage.getitem('usertoken",{"_index":985,"title":{},"body":{"components/NavbarComponent.html":{}}}],["if(localstorage.getitem('usertoken')!==null",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["if(mserror",{"_index":942,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["if(namecontrol?.errors",{"_index":1100,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(namecontrol?.geterror(\"maxlength",{"_index":1105,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(namecontrol?.geterror(\"minlength",{"_index":1103,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(namecontrol?.geterror(\"required",{"_index":1102,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(passwordcontrol?.errors",{"_index":939,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["if(passwordcontrol?.geterror(\"pattern",{"_index":812,"title":{},"body":{"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["if(passwordcontrol?.geterror(\"required",{"_index":811,"title":{},"body":{"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["if(phonecontrol?.errors",{"_index":605,"title":{},"body":{"components/CheckoutComponent.html":{},"components/RegisterComponent.html":{}}}],["if(phonecontrol?.geterror(\"pattern",{"_index":608,"title":{},"body":{"components/CheckoutComponent.html":{},"components/RegisterComponent.html":{}}}],["if(phonecontrol?.geterror(\"required",{"_index":607,"title":{},"body":{"components/CheckoutComponent.html":{},"components/RegisterComponent.html":{}}}],["if(product.ratingsaverage",{"_index":905,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["if(register.get('repassword')?.geterror('required",{"_index":1114,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(register.get(\\'repassword\\')?.geterror(\\'required",{"_index":1122,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(register.geterror('mismatch",{"_index":1110,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(register.geterror(\\'mismatch",{"_index":1120,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(res.message",{"_index":928,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["if(res.message==\"success",{"_index":412,"title":{},"body":{"components/CartComponent.html":{}}}],["if(res.status=='success",{"_index":587,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["if(res.status==='success",{"_index":777,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["if(res.statusmsg==='success",{"_index":771,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["if(resetemailcontrol?.errors",{"_index":807,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["if(resetemailcontrol?.geterror(\"email",{"_index":810,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["if(resetemailcontrol?.geterror(\"required",{"_index":809,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["if(restcontrol?.errors",{"_index":799,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["if(restcontrol?.geterror(\"pattern",{"_index":803,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["if(restcontrol?.geterror(\"required",{"_index":801,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["if(step==1",{"_index":789,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["if(step==2",{"_index":797,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["if(this.loginform.valid",{"_index":926,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(this.register.valid",{"_index":1090,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(this.verifycode.valid",{"_index":774,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["if(this.verifyemail.valid",{"_index":767,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["image",{"_index":251,"title":{},"body":{"interfaces/Brand.html":{},"interfaces/CartItem.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"interfaces/Ibrands.html":{},"interfaces/Icart.html":{},"interfaces/Icategories.html":{},"interfaces/Iorders.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwish.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{},"interfaces/User.html":{}}}],["imagecover",{"_index":277,"title":{},"body":{"interfaces/Brand.html":{},"interfaces/CartItem.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"interfaces/Icart.html":{},"interfaces/Iorders.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwish.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{},"interfaces/User.html":{}}}],["images",{"_index":525,"title":{},"body":{"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwish.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{}}}],["img",{"_index":694,"title":{},"body":{"components/DetailsComponent.html":{}}}],["implements",{"_index":12,"title":{},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/ProductsComponent.html":{},"pipes/SearchPipe.html":{},"components/WishListComponent.html":{}}}],["import",{"_index":53,"title":{},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/AuthService.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesService.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"injectables/OrdersService.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"components/WishListComponent.html":{},"injectables/WishlistService.html":{}}}],["import('flowbite').then(flowbite",{"_index":716,"title":{},"body":{"injectables/FlowbiteService.html":{}}}],["importprovidersfrom(ngxspinnermodule",{"_index":1312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imports",{"_index":61,"title":{},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{}}}],["import{abstractcontrol",{"_index":921,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["incorrect",{"_index":1113,"title":{},"body":{"components/RegisterComponent.html":{}}}],["index",{"_index":23,"title":{"index.html":{}},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Brand.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/Ibrands.html":{},"interfaces/Icart.html":{},"interfaces/Icategories.html":{},"interfaces/Iorders.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwish.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/OrdersService.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{},"interfaces/User.html":{},"components/WishListComponent.html":{},"injectables/WishlistService.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/AuthService.html":{},"components/BlankLayoutComponent.html":{},"interfaces/Brand.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/Ibrands.html":{},"interfaces/Icart.html":{},"interfaces/Icategories.html":{},"interfaces/Iorders.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwish.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"injectables/OrdersService.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{},"interfaces/User.html":{},"components/WishListComponent.html":{},"injectables/WishlistService.html":{}}}],["initform",{"_index":542,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["initform():void",{"_index":570,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["inject",{"_index":54,"title":{},"body":{"components/AllOrderComponent.html":{},"injectables/AuthService.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/OrdersService.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{},"injectables/WishlistService.html":{}}}],["inject(activatedroute",{"_index":549,"title":{},"body":{"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{}}}],["inject(authservice",{"_index":744,"title":{},"body":{"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["inject(brandsservice",{"_index":305,"title":{},"body":{"components/BrandsComponent.html":{}}}],["inject(cartservice",{"_index":365,"title":{},"body":{"components/CartComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/ProductsComponent.html":{},"components/WishListComponent.html":{}}}],["inject(categoriesservice",{"_index":481,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{}}}],["inject(ngxspinnerservice",{"_index":483,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{},"miscellaneous/variables.html":{}}}],["inject(ordersservice",{"_index":44,"title":{},"body":{"components/AllOrderComponent.html":{},"components/CheckoutComponent.html":{}}}],["inject(platform_id",{"_index":451,"title":{},"body":{"injectables/CartService.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"injectables/OrdersService.html":{},"components/ProductsComponent.html":{},"injectables/WishlistService.html":{},"miscellaneous/variables.html":{}}}],["inject(productsservice",{"_index":660,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["inject(router",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["inject(toastrservice",{"_index":664,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{},"components/WishListComponent.html":{},"miscellaneous/variables.html":{}}}],["inject(wishlistservice",{"_index":876,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{},"components/WishListComponent.html":{}}}],["injectable",{"_index":179,"title":{"injectables/AuthService.html":{},"injectables/BrandsService.html":{},"injectables/CartService.html":{},"injectables/CategoriesService.html":{},"injectables/FlowbiteService.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"injectables/WishlistService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/BrandsService.html":{},"injectables/CartService.html":{},"injectables/CategoriesService.html":{},"injectables/FlowbiteService.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"injectables/WishlistService.html":{},"coverage.html":{}}}],["injectables",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BrandsService.html":{},"injectables/CartService.html":{},"injectables/CategoriesService.html":{},"injectables/FlowbiteService.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"injectables/WishlistService.html":{},"overview.html":{}}}],["input",{"_index":978,"title":{},"body":{"components/NavbarComponent.html":{}}}],["input(true",{"_index":983,"title":{},"body":{"components/NavbarComponent.html":{}}}],["inputs",{"_index":957,"title":{},"body":{"components/NavbarComponent.html":{}}}],["inputsignal",{"_index":958,"title":{},"body":{"components/NavbarComponent.html":{}}}],["interface",{"_index":246,"title":{"interfaces/Brand.html":{},"interfaces/CartItem.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"interfaces/Ibrands.html":{},"interfaces/Icart.html":{},"interfaces/Icategories.html":{},"interfaces/Iorders.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwish.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{},"interfaces/User.html":{}},"body":{"interfaces/Brand.html":{},"interfaces/CartItem.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"interfaces/Ibrands.html":{},"interfaces/Icart.html":{},"interfaces/Icategories.html":{},"interfaces/Iorders.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwish.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":248,"title":{},"body":{"interfaces/Brand.html":{},"interfaces/CartItem.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"interfaces/Ibrands.html":{},"interfaces/Icart.html":{},"interfaces/Icategories.html":{},"interfaces/Iorders.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwish.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{},"interfaces/User.html":{},"overview.html":{}}}],["iorders",{"_index":47,"title":{"interfaces/Iorders.html":{}},"body":{"components/AllOrderComponent.html":{},"interfaces/Brand.html":{},"interfaces/CartItem.html":{},"interfaces/Category-1.html":{},"interfaces/Iorders.html":{},"interfaces/Product-1.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory-1.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["iproduct",{"_index":523,"title":{"interfaces/Iproduct.html":{}},"body":{"interfaces/Category-2.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"interfaces/Iproduct.html":{},"components/ProductsComponent.html":{},"interfaces/Subcategory-2.html":{},"coverage.html":{}}}],["isdelivered",{"_index":262,"title":{},"body":{"interfaces/Brand.html":{},"interfaces/CartItem.html":{},"interfaces/Category-1.html":{},"interfaces/Iorders.html":{},"interfaces/Product-1.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory-1.html":{},"interfaces/User.html":{}}}],["isloading",{"_index":537,"title":{},"body":{"components/CheckoutComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["isloading:boolean",{"_index":761,"title":{},"body":{"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["isloading:boolean=false",{"_index":564,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["islogin",{"_index":952,"title":{},"body":{"components/NavbarComponent.html":{}}}],["islogin:inputsignal",{"_index":982,"title":{},"body":{"components/NavbarComponent.html":{}}}],["ispaid",{"_index":260,"title":{},"body":{"interfaces/Brand.html":{},"interfaces/CartItem.html":{},"interfaces/Category-1.html":{},"interfaces/Iorders.html":{},"interfaces/Product-1.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory-1.html":{},"interfaces/User.html":{}}}],["isplatformbrowser",{"_index":455,"title":{},"body":{"injectables/CartService.html":{},"injectables/FlowbiteService.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"injectables/OrdersService.html":{},"components/ProductsComponent.html":{},"injectables/WishlistService.html":{}}}],["isplatformbrowser(this.id",{"_index":458,"title":{},"body":{"injectables/CartService.html":{}}}],["isplatformbrowser(this.platformid",{"_index":715,"title":{},"body":{"injectables/FlowbiteService.html":{},"injectables/OrdersService.html":{},"injectables/WishlistService.html":{}}}],["isproductinwishlist",{"_index":834,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["isproductinwishlist(productid",{"_index":843,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["issuccess",{"_index":538,"title":{},"body":{"components/CheckoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["issuccess:string",{"_index":566,"title":{},"body":{"components/CheckoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["istoggellightbox",{"_index":286,"title":{},"body":{"components/BrandsComponent.html":{}}}],["istoggellightbox:boolean",{"_index":316,"title":{},"body":{"components/BrandsComponent.html":{}}}],["item",{"_index":80,"title":{},"body":{"components/AllOrderComponent.html":{},"pipes/SearchPipe.html":{}}}],["item.price",{"_index":89,"title":{},"body":{"components/AllOrderComponent.html":{}}}],["item.product.category.name",{"_index":82,"title":{},"body":{"components/AllOrderComponent.html":{}}}],["item.product.ratingsaverage",{"_index":93,"title":{},"body":{"components/AllOrderComponent.html":{}}}],["item.product.title.split",{"_index":83,"title":{},"body":{"components/AllOrderComponent.html":{}}}],["item.title.tolowercase().includes(term.tolowercase",{"_index":1134,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["items",{"_index":653,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{}}}],["iwish",{"_index":529,"title":{"interfaces/Iwish.html":{}},"body":{"interfaces/Category-3.html":{},"interfaces/Iwish.html":{},"interfaces/Subcategory-3.html":{},"components/WishListComponent.html":{},"coverage.html":{}}}],["json.stringify(array.from(this.wishlist",{"_index":893,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["jwt",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["jwtdecode",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtdecode(localstorage.getitem('usertoken",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{}}}],["layout",{"_index":174,"title":{},"body":{"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{}}}],["layout'},{'name",{"_index":108,"title":{},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{}}}],["layout.component.html",{"_index":175,"title":{},"body":{"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{}}}],["layout.component.scss",{"_index":176,"title":{},"body":{"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{}}}],["layout.component.ts",{"_index":173,"title":{},"body":{"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"coverage.html":{}}}],["layout/auth",{"_index":172,"title":{},"body":{"components/AuthLayoutComponent.html":{},"coverage.html":{}}}],["layout/blank",{"_index":245,"title":{},"body":{"components/BlankLayoutComponent.html":{},"coverage.html":{}}}],["legend",{"_index":96,"title":{},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{}}}],["letter",{"_index":815,"title":{},"body":{"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["link",{"_index":724,"title":{},"body":{"components/FooterComponent.html":{}}}],["list",{"_index":139,"title":{},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{}}}],["list.component.html",{"_index":1138,"title":{},"body":{"components/WishListComponent.html":{}}}],["list.component.scss",{"_index":1139,"title":{},"body":{"components/WishListComponent.html":{}}}],["list.component.ts",{"_index":1137,"title":{},"body":{"components/WishListComponent.html":{},"coverage.html":{}}}],["list.component.ts:17",{"_index":1152,"title":{},"body":{"components/WishListComponent.html":{}}}],["list.component.ts:18",{"_index":1147,"title":{},"body":{"components/WishListComponent.html":{}}}],["list.component.ts:19",{"_index":1150,"title":{},"body":{"components/WishListComponent.html":{}}}],["list.component.ts:21",{"_index":1149,"title":{},"body":{"components/WishListComponent.html":{}}}],["list.component.ts:22",{"_index":1148,"title":{},"body":{"components/WishListComponent.html":{}}}],["list.component.ts:23",{"_index":1151,"title":{},"body":{"components/WishListComponent.html":{}}}],["list.component.ts:25",{"_index":1145,"title":{},"body":{"components/WishListComponent.html":{}}}],["list.component.ts:30",{"_index":1144,"title":{},"body":{"components/WishListComponent.html":{}}}],["list.component.ts:39",{"_index":1143,"title":{},"body":{"components/WishListComponent.html":{}}}],["list.component.ts:56",{"_index":1146,"title":{},"body":{"components/WishListComponent.html":{}}}],["list/wish",{"_index":1136,"title":{},"body":{"components/WishListComponent.html":{},"coverage.html":{}}}],["loadflowbite",{"_index":705,"title":{},"body":{"injectables/FlowbiteService.html":{}}}],["loadflowbite(callback",{"_index":709,"title":{},"body":{"injectables/FlowbiteService.html":{}}}],["loading",{"_index":170,"title":{},"body":{"components/AppComponent.html":{}}}],["loadinginterceptor",{"_index":1207,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadwishlist",{"_index":835,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["localstorage.getitem('usertoken",{"_index":457,"title":{},"body":{"injectables/CartService.html":{},"injectables/OrdersService.html":{},"injectables/WishlistService.html":{},"miscellaneous/variables.html":{}}}],["localstorage.getitem('wishlist",{"_index":895,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["localstorage.removeitem('usertoken",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('usertoken',data",{"_index":783,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["localstorage.setitem('usertoken',res.token",{"_index":931,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.setitem('wishlist",{"_index":892,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["login",{"_index":909,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["login'},{'name",{"_index":128,"title":{},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{}}}],["login.component.html",{"_index":910,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":911,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":127,"title":{"components/LoginComponent.html":{}},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{},"coverage.html":{}}}],["loginform",{"_index":912,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform:formgroup",{"_index":925,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginguard",{"_index":1201,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["logout",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["logout():void",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["long",{"_index":819,"title":{},"body":{"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["loop",{"_index":640,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{}}}],["main",{"_index":992,"title":{},"body":{"components/NavbarComponent.html":{}}}],["match",{"_index":804,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["matching",{"_index":143,"title":{},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/AuthService.html":{},"components/BlankLayoutComponent.html":{},"interfaces/Brand.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/Ibrands.html":{},"interfaces/Icart.html":{},"interfaces/Icategories.html":{},"interfaces/Iorders.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwish.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"injectables/OrdersService.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{},"interfaces/User.html":{},"components/WishListComponent.html":{},"injectables/WishlistService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["maxlength",{"_index":1106,"title":{},"body":{"components/RegisterComponent.html":{}}}],["menu",{"_index":989,"title":{},"body":{"components/NavbarComponent.html":{}}}],["menu.classlist.toggle('hidden",{"_index":991,"title":{},"body":{"components/NavbarComponent.html":{}}}],["mergeapplicationconfig(appconfig",{"_index":1320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":15,"title":{},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"components/WishListComponent.html":{}}}],["methods",{"_index":31,"title":{},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesService.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/OrdersService.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"components/WishListComponent.html":{},"injectables/WishlistService.html":{}}}],["minlength",{"_index":1104,"title":{},"body":{"components/RegisterComponent.html":{}}}],["miscellaneous",{"_index":1272,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mismatch",{"_index":1075,"title":{},"body":{"components/RegisterComponent.html":{}}}],["modules",{"_index":1265,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":816,"title":{},"body":{"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["mousedrag",{"_index":641,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{}}}],["mserror",{"_index":913,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["mserror:string",{"_index":924,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["mytoken",{"_index":433,"title":{},"body":{"injectables/CartService.html":{},"injectables/OrdersService.html":{},"injectables/WishlistService.html":{}}}],["name",{"_index":102,"title":{},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/AuthService.html":{},"components/BlankLayoutComponent.html":{},"interfaces/Brand.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/Ibrands.html":{},"interfaces/Icart.html":{},"interfaces/Icategories.html":{},"interfaces/Iorders.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwish.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"injectables/OrdersService.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{},"interfaces/User.html":{},"components/WishListComponent.html":{},"injectables/WishlistService.html":{}}}],["name:new",{"_index":1081,"title":{},"body":{"components/RegisterComponent.html":{}}}],["namecontrol=register.get('name",{"_index":1099,"title":{},"body":{"components/RegisterComponent.html":{}}}],["namecontrol=register.get(\\'name",{"_index":1117,"title":{},"body":{"components/RegisterComponent.html":{}}}],["namecontrol?.touched",{"_index":1101,"title":{},"body":{"components/RegisterComponent.html":{}}}],["nav",{"_index":654,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{}}}],["navbar",{"_index":947,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":130,"title":{},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{}}}],["navbar.component.html",{"_index":949,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.scss",{"_index":950,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar/navbar.component",{"_index":177,"title":{},"body":{"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{}}}],["navbarcomponent",{"_index":129,"title":{"components/NavbarComponent.html":{}},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{},"coverage.html":{}}}],["navbarmenu",{"_index":953,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbartoggle",{"_index":954,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navspeed",{"_index":649,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{}}}],["navtext",{"_index":651,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{}}}],["new",{"_index":50,"title":{},"body":{"components/AllOrderComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":687,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{},"components/WishListComponent.html":{},"miscellaneous/variables.html":{}}}],["next(req",{"_index":1334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next(req).pipe(catcherror((err",{"_index":1326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next(req).pipe(finalize",{"_index":1336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next:(p",{"_index":678,"title":{},"body":{"components/DetailsComponent.html":{}}}],["next:(param",{"_index":580,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["next:(res",{"_index":72,"title":{},"body":{"components/AllOrderComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{}}}],["ngafterviewinit",{"_index":955,"title":{},"body":{"components/NavbarComponent.html":{}}}],["ngondestroy",{"_index":33,"title":{},"body":{"components/AllOrderComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/ProductsComponent.html":{}}}],["ngoninit",{"_index":34,"title":{},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/ProductsComponent.html":{},"components/WishListComponent.html":{}}}],["ngx",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{},"components/WishListComponent.html":{},"dependencies.html":{}}}],["ngxspinnercomponent",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["ngxspinnerconfig",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["ngxspinnerservice",{"_index":475,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{},"miscellaneous/variables.html":{}}}],["ngxspinnerservice.hide",{"_index":1337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngxspinnerservice.show",{"_index":1335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["node:path",{"_index":977,"title":{},"body":{"components/NavbarComponent.html":{}}}],["node_modules/ngx",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["notfound",{"_index":998,"title":{},"body":{"components/NotfoundComponent.html":{}}}],["notfound'},{'name",{"_index":132,"title":{},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{}}}],["notfound.component.html",{"_index":999,"title":{},"body":{"components/NotfoundComponent.html":{}}}],["notfound.component.scss",{"_index":1000,"title":{},"body":{"components/NotfoundComponent.html":{}}}],["notfoundcomponent",{"_index":131,"title":{"components/NotfoundComponent.html":{}},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{},"coverage.html":{}}}],["now",{"_index":936,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["null",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CartService.html":{},"components/DetailsComponent.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"injectables/WishlistService.html":{},"miscellaneous/variables.html":{}}}],["num",{"_index":91,"title":{},"body":{"components/AllOrderComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["number",{"_index":256,"title":{},"body":{"interfaces/Brand.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"components/ForgotpasswordComponent.html":{},"interfaces/Icart.html":{},"interfaces/Iorders.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwish.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{},"interfaces/User.html":{}}}],["nuwcount",{"_index":447,"title":{},"body":{"injectables/CartService.html":{}}}],["o",{"_index":670,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"dependencies.html":{}}}],["object",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{},"injectables/OrdersService.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BrandsService.html":{},"injectables/CartService.html":{},"injectables/CategoriesService.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"injectables/WishlistService.html":{}}}],["oder",{"_index":78,"title":{},"body":{"components/AllOrderComponent.html":{}}}],["ondestroy",{"_index":14,"title":{},"body":{"components/AllOrderComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/ProductsComponent.html":{}}}],["oninit",{"_index":13,"title":{},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/ProductsComponent.html":{},"components/WishListComponent.html":{}}}],["oninit,ondestroy",{"_index":315,"title":{},"body":{"components/BrandsComponent.html":{}}}],["online",{"_index":614,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["open",{"_index":725,"title":{},"body":{"components/FooterComponent.html":{},"components/NavbarComponent.html":{}}}],["open(res.session.url,'_self",{"_index":588,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["optional",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"injectables/CategoriesService.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/HomeComponent.html":{},"injectables/OrdersService.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"components/WishListComponent.html":{},"injectables/WishlistService.html":{}}}],["order",{"_index":76,"title":{},"body":{"components/AllOrderComponent.html":{}}}],["order.cartitems",{"_index":81,"title":{},"body":{"components/AllOrderComponent.html":{}}}],["order.component.html",{"_index":20,"title":{},"body":{"components/AllOrderComponent.html":{}}}],["order.component.scss",{"_index":22,"title":{},"body":{"components/AllOrderComponent.html":{}}}],["order.component.ts",{"_index":11,"title":{},"body":{"components/AllOrderComponent.html":{},"coverage.html":{}}}],["order.component.ts:13",{"_index":45,"title":{},"body":{"components/AllOrderComponent.html":{}}}],["order.component.ts:14",{"_index":48,"title":{},"body":{"components/AllOrderComponent.html":{}}}],["order.component.ts:16",{"_index":51,"title":{},"body":{"components/AllOrderComponent.html":{}}}],["order.component.ts:17",{"_index":52,"title":{},"body":{"components/AllOrderComponent.html":{}}}],["order.component.ts:19",{"_index":41,"title":{},"body":{"components/AllOrderComponent.html":{}}}],["order.component.ts:26",{"_index":36,"title":{},"body":{"components/AllOrderComponent.html":{}}}],["order.component.ts:38",{"_index":40,"title":{},"body":{"components/AllOrderComponent.html":{}}}],["order/all",{"_index":10,"title":{},"body":{"components/AllOrderComponent.html":{},"coverage.html":{}}}],["orderdata",{"_index":28,"title":{},"body":{"components/AllOrderComponent.html":{}}}],["orderdata:iorders",{"_index":64,"title":{},"body":{"components/AllOrderComponent.html":{}}}],["orders",{"_index":994,"title":{},"body":{"components/NavbarComponent.html":{}}}],["ordersservice",{"_index":56,"title":{"injectables/OrdersService.html":{}},"body":{"components/AllOrderComponent.html":{},"components/CheckoutComponent.html":{},"injectables/OrdersService.html":{},"coverage.html":{}}}],["oreder",{"_index":18,"title":{},"body":{"components/AllOrderComponent.html":{}}}],["oreder'},{'name",{"_index":103,"title":{},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{}}}],["out",{"_index":596,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["overview",{"_index":1266,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owl",{"_index":668,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"dependencies.html":{}}}],["owloptions",{"_index":639,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{}}}],["p.get('id",{"_index":680,"title":{},"body":{"components/DetailsComponent.html":{}}}],["package",{"_index":1233,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":1001,"title":{},"body":{"components/NotfoundComponent.html":{}}}],["paidat",{"_index":265,"title":{},"body":{"interfaces/Brand.html":{},"interfaces/CartItem.html":{},"interfaces/Category-1.html":{},"interfaces/Iorders.html":{},"interfaces/Product-1.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory-1.html":{},"interfaces/User.html":{}}}],["param.get('id",{"_index":582,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["parameters",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"injectables/CategoriesService.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/HomeComponent.html":{},"injectables/OrdersService.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"components/WishListComponent.html":{},"injectables/WishlistService.html":{}}}],["partners",{"_index":728,"title":{},"body":{"components/FooterComponent.html":{}}}],["password",{"_index":788,"title":{},"body":{"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["password:new",{"_index":749,"title":{},"body":{"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["password===repassword",{"_index":1098,"title":{},"body":{"components/RegisterComponent.html":{}}}],["passwordcontrol=loginform.get('password",{"_index":938,"title":{},"body":{"components/LoginComponent.html":{}}}],["passwordcontrol=loginform.get(\\'password",{"_index":944,"title":{},"body":{"components/LoginComponent.html":{}}}],["passwordcontrol=register.get('password",{"_index":1109,"title":{},"body":{"components/RegisterComponent.html":{}}}],["passwordcontrol=register.get(\\'password",{"_index":1119,"title":{},"body":{"components/RegisterComponent.html":{}}}],["passwordcontrol?.touched",{"_index":940,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["path",{"_index":1340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["payment",{"_index":615,"title":{},"body":{"components/CheckoutComponent.html":{},"components/FooterComponent.html":{}}}],["paymentmethodtype",{"_index":259,"title":{},"body":{"interfaces/Brand.html":{},"interfaces/CartItem.html":{},"interfaces/Category-1.html":{},"interfaces/Iorders.html":{},"interfaces/Product-1.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory-1.html":{},"interfaces/User.html":{}}}],["phone",{"_index":270,"title":{},"body":{"interfaces/Brand.html":{},"interfaces/CartItem.html":{},"interfaces/Category-1.html":{},"components/CheckoutComponent.html":{},"components/FooterComponent.html":{},"interfaces/Iorders.html":{},"interfaces/Product-1.html":{},"components/RegisterComponent.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory-1.html":{},"interfaces/User.html":{}}}],["phone:new",{"_index":573,"title":{},"body":{"components/CheckoutComponent.html":{},"components/RegisterComponent.html":{}}}],["phonecontrol=checkoutform.get('phone",{"_index":604,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["phonecontrol=checkoutform.get(\\'phone",{"_index":620,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["phonecontrol=register.get('phone",{"_index":1115,"title":{},"body":{"components/RegisterComponent.html":{}}}],["phonecontrol=register.get(\\'phone",{"_index":1123,"title":{},"body":{"components/RegisterComponent.html":{}}}],["phonecontrol?.touched",{"_index":606,"title":{},"body":{"components/CheckoutComponent.html":{},"components/RegisterComponent.html":{}}}],["pipe",{"_index":1124,"title":{"pipes/SearchPipe.html":{}},"body":{"pipes/SearchPipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipes",{"_index":1125,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["pipetransform",{"_index":1132,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["platform_id",{"_index":453,"title":{},"body":{"injectables/CartService.html":{},"injectables/FlowbiteService.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"injectables/OrdersService.html":{},"components/ProductsComponent.html":{},"injectables/WishlistService.html":{},"miscellaneous/variables.html":{}}}],["platformid",{"_index":708,"title":{},"body":{"injectables/FlowbiteService.html":{},"injectables/OrdersService.html":{},"injectables/WishlistService.html":{}}}],["popular",{"_index":899,"title":{},"body":{"components/HomeComponent.html":{}}}],["preset",{"_index":1309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["price",{"_index":88,"title":{},"body":{"components/AllOrderComponent.html":{},"interfaces/Brand.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"interfaces/Icart.html":{},"interfaces/Iorders.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwish.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{},"interfaces/User.html":{}}}],["primeng",{"_index":1254,"title":{},"body":{"dependencies.html":{}}}],["primeng/themes",{"_index":1247,"title":{},"body":{"dependencies.html":{}}}],["private",{"_index":25,"title":{},"body":{"components/AllOrderComponent.html":{},"injectables/AuthService.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/OrdersService.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{},"injectables/WishlistService.html":{}}}],["product",{"_index":273,"title":{"interfaces/Product.html":{},"interfaces/Product-1.html":{}},"body":{"interfaces/Brand.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"interfaces/Icart.html":{},"interfaces/Iorders.html":{},"components/NavbarComponent.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"components/ProductsComponent.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/User.html":{},"components/WishListComponent.html":{},"coverage.html":{}}}],["product.category.name",{"_index":902,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["product.count",{"_index":426,"title":{},"body":{"components/CartComponent.html":{}}}],["product.id",{"_index":901,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{},"components/WishListComponent.html":{}}}],["product.price",{"_index":424,"title":{},"body":{"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{},"components/WishListComponent.html":{}}}],["product.product.id",{"_index":422,"title":{},"body":{"components/CartComponent.html":{}}}],["product.product.title",{"_index":423,"title":{},"body":{"components/CartComponent.html":{}}}],["product.ratingsaverage",{"_index":904,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["product.title.split",{"_index":903,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{},"components/WishListComponent.html":{}}}],["product2",{"_index":517,"title":{"interfaces/Product2.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Icart.html":{},"interfaces/Product.html":{},"interfaces/Product2.html":{},"interfaces/Subcategory.html":{},"coverage.html":{}}}],["product:{{item.count",{"_index":87,"title":{},"body":{"components/AllOrderComponent.html":{}}}],["productid",{"_index":464,"title":{},"body":{"injectables/CartService.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{},"injectables/WishlistService.html":{}}}],["products",{"_index":429,"title":{},"body":{"components/CartComponent.html":{},"interfaces/Category.html":{},"components/HomeComponent.html":{},"interfaces/Icart.html":{},"interfaces/Product.html":{},"interfaces/Product2.html":{},"components/ProductsComponent.html":{},"interfaces/Subcategory.html":{}}}],["products'},{'name",{"_index":134,"title":{},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{}}}],["products().slice(0,12",{"_index":900,"title":{},"body":{"components/HomeComponent.html":{}}}],["products.component.html",{"_index":1029,"title":{},"body":{"components/ProductsComponent.html":{}}}],["products.component.scss",{"_index":1030,"title":{},"body":{"components/ProductsComponent.html":{}}}],["productscomponent",{"_index":133,"title":{"components/ProductsComponent.html":{}},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{},"coverage.html":{}}}],["productsservice",{"_index":628,"title":{"injectables/ProductsService.html":{}},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["productsservice=inject(productsservice",{"_index":672,"title":{},"body":{"components/DetailsComponent.html":{}}}],["properties",{"_index":24,"title":{"properties.html":{}},"body":{"components/AllOrderComponent.html":{},"injectables/AuthService.html":{},"interfaces/Brand.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/Ibrands.html":{},"interfaces/Icart.html":{},"interfaces/Icategories.html":{},"interfaces/Iorders.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwish.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/OrdersService.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{},"interfaces/User.html":{},"components/WishListComponent.html":{},"injectables/WishlistService.html":{},"properties.html":{}}}],["provideanimations",{"_index":1305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideanimationsasync",{"_index":1306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideclienthydration(witheventreplay",{"_index":1303,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BrandsService.html":{},"injectables/CartService.html":{},"injectables/CategoriesService.html":{},"injectables/FlowbiteService.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"injectables/WishlistService.html":{}}}],["providehttpclient(withfetch(),withinterceptors([errorsinterceptor,loadinginterceptor",{"_index":1304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideprimeng",{"_index":1307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes,withinmemoryscrolling({scrollpositionrestoration:'top",{"_index":1301,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":1298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideserverrendering",{"_index":1321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideserverroutesconfig(serverroutes",{"_index":1322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providetoastr",{"_index":1311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":1299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pulldrag",{"_index":643,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{}}}],["quantity",{"_index":520,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"interfaces/Icart.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwish.html":{},"interfaces/Product.html":{},"interfaces/Product2.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{}}}],["ratingsaverage",{"_index":279,"title":{},"body":{"interfaces/Brand.html":{},"interfaces/CartItem.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"interfaces/Icart.html":{},"interfaces/Iorders.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwish.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{},"interfaces/User.html":{}}}],["ratingsquantity",{"_index":275,"title":{},"body":{"interfaces/Brand.html":{},"interfaces/CartItem.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"interfaces/Iorders.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwish.html":{},"interfaces/Product-1.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{},"interfaces/User.html":{}}}],["reactiveformsmodule",{"_index":531,"title":{},"body":{"components/CheckoutComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["reactiveformsmodule,routerlink",{"_index":923,"title":{},"body":{"components/LoginComponent.html":{}}}],["readonly",{"_index":26,"title":{},"body":{"components/AllOrderComponent.html":{},"injectables/AuthService.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/OrdersService.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{},"injectables/WishlistService.html":{}}}],["recode",{"_index":802,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["register",{"_index":996,"title":{},"body":{"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["register'},{'name",{"_index":136,"title":{},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{}}}],["register.component.html",{"_index":1068,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.scss",{"_index":1069,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.get('repassword')?.touched",{"_index":1111,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.get(\\'repassword\\')?.touched",{"_index":1121,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register:formgroup",{"_index":1089,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercomponent",{"_index":135,"title":{"components/RegisterComponent.html":{}},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{},"coverage.html":{}}}],["remove",{"_index":425,"title":{},"body":{"components/CartComponent.html":{},"components/WishListComponent.html":{}}}],["removeitem",{"_index":353,"title":{},"body":{"components/CartComponent.html":{},"components/WishListComponent.html":{}}}],["removeitem(id",{"_index":359,"title":{},"body":{"components/CartComponent.html":{},"components/WishListComponent.html":{}}}],["removeitem(id:string):void",{"_index":382,"title":{},"body":{"components/CartComponent.html":{},"components/WishListComponent.html":{}}}],["removeproductfromwishlist",{"_index":1168,"title":{},"body":{"injectables/WishlistService.html":{}}}],["removeproductfromwishlist(id",{"_index":1173,"title":{},"body":{"injectables/WishlistService.html":{}}}],["removeproductfromwishlist(id:string):observable",{"_index":1179,"title":{},"body":{"injectables/WishlistService.html":{}}}],["removespecificart",{"_index":437,"title":{},"body":{"injectables/CartService.html":{}}}],["removespecificart(id",{"_index":444,"title":{},"body":{"injectables/CartService.html":{}}}],["rendermode",{"_index":1341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rendermode.client",{"_index":1342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repassword",{"_index":1096,"title":{},"body":{"components/RegisterComponent.html":{}}}],["repassword:new",{"_index":1083,"title":{},"body":{"components/RegisterComponent.html":{}}}],["req",{"_index":1325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.clone",{"_index":1332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reqhandler",{"_index":1227,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["request",{"_index":1288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":603,"title":{},"body":{"components/CheckoutComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["res",{"_index":74,"title":{},"body":{"components/AllOrderComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{},"components/WishListComponent.html":{}}}],["res.data",{"_index":403,"title":{},"body":{"components/CartComponent.html":{},"components/DetailsComponent.html":{}}}],["res.status",{"_index":688,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{},"components/WishListComponent.html":{}}}],["res.token",{"_index":782,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["resetcode:new",{"_index":755,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["resetemailcontrol=resetpassword.get('email",{"_index":806,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["resetemailcontrol=resetpassword.get(\\'email",{"_index":822,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["resetemailcontrol?.touched",{"_index":808,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["resetpassword",{"_index":734,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["resetpassword:formgroup=new",{"_index":765,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["resetpasswordsubmit",{"_index":738,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["resetpasswordsubmit():void",{"_index":779,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["resolve",{"_index":976,"title":{},"body":{"components/NavbarComponent.html":{}}}],["resolve(serverdistfolder",{"_index":1286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["responsive",{"_index":652,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{}}}],["restcontrol=verifycode.get('resetcode",{"_index":798,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["restcontrol=verifycode.get(\\'resetcode",{"_index":821,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["restcontrol?.touched",{"_index":800,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["result.isconfirmed",{"_index":400,"title":{},"body":{"components/CartComponent.html":{}}}],["results",{"_index":142,"title":{},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/AuthService.html":{},"components/BlankLayoutComponent.html":{},"interfaces/Brand.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/Ibrands.html":{},"interfaces/Icart.html":{},"interfaces/Icategories.html":{},"interfaces/Iorders.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwish.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"injectables/OrdersService.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{},"interfaces/User.html":{},"components/WishListComponent.html":{},"injectables/WishlistService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BrandsService.html":{},"injectables/CartService.html":{},"injectables/CategoriesService.html":{},"components/HomeComponent.html":{},"injectables/OrdersService.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"injectables/WishlistService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":37,"title":{},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesService.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/OrdersService.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"components/WishListComponent.html":{},"injectables/WishlistService.html":{}}}],["revert",{"_index":387,"title":{},"body":{"components/CartComponent.html":{}}}],["root",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/BrandsService.html":{},"injectables/CartService.html":{},"injectables/CategoriesService.html":{},"injectables/FlowbiteService.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"injectables/WishlistService.html":{}}}],["root'},{'name",{"_index":105,"title":{},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{}}}],["route",{"_index":1314,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["router=inject(router",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{}}}],["routerlink",{"_index":344,"title":{},"body":{"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProductsComponent.html":{}}}],["routerlink,routerlinkactive",{"_index":979,"title":{},"body":{"components/NavbarComponent.html":{}}}],["routerlinkactive",{"_index":948,"title":{},"body":{"components/NavbarComponent.html":{}}}],["routeroutlet",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{}}}],["routeroutlet,ngxspinnercomponent",{"_index":164,"title":{},"body":{"components/AppComponent.html":{}}}],["rxjs",{"_index":60,"title":{},"body":{"components/AllOrderComponent.html":{},"injectables/AuthService.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesService.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"injectables/OrdersService.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"components/WishListComponent.html":{},"injectables/WishlistService.html":{},"dependencies.html":{}}}],["saveuserdata",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{}}}],["saveuserdata():void",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{}}}],["savewishlist",{"_index":836,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["search",{"_index":1055,"title":{},"body":{"components/ProductsComponent.html":{},"pipes/SearchPipe.html":{}}}],["searchpipe",{"_index":1027,"title":{"pipes/SearchPipe.html":{}},"body":{"components/ProductsComponent.html":{},"pipes/SearchPipe.html":{},"coverage.html":{}}}],["searchpipe,routerlink,formsmodule",{"_index":1053,"title":{},"body":{"components/ProductsComponent.html":{}}}],["selector",{"_index":16,"title":{},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{}}}],["send",{"_index":723,"title":{},"body":{"components/FooterComponent.html":{}}}],["sendloginform",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{}}}],["sendloginform(data",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{}}}],["sendloginform(data:object):observable",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["sendregisterform",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{}}}],["sendregisterform(data",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{}}}],["sendregisterform(data:object):observable",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{}}}],["server",{"_index":1241,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["serverconfig",{"_index":1192,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverdistfolder",{"_index":1230,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverroute",{"_index":1339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serverroutes",{"_index":1196,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["session/${id}?url=http://localhost:4200",{"_index":1018,"title":{},"body":{"injectables/OrdersService.html":{}}}],["set",{"_index":874,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["set(json.parse(storedwishlist",{"_index":897,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["setcodeverify",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{}}}],["setcodeverify(data",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{}}}],["setcodeverify(data:object):observable",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["setemailverify",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{}}}],["setemailverify(data",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{}}}],["setemailverify(data:object):observable",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["setheaders",{"_index":1333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setresetpassword",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{}}}],["setresetpassword(data",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{}}}],["setresetpassword(data:object):observable",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{}}}],["settimeout",{"_index":930,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["share",{"_index":727,"title":{},"body":{"components/FooterComponent.html":{}}}],["shared/interfaces/ibrands",{"_index":311,"title":{},"body":{"components/BrandsComponent.html":{}}}],["shared/interfaces/icart",{"_index":368,"title":{},"body":{"components/CartComponent.html":{},"injectables/CartService.html":{},"components/CheckoutComponent.html":{}}}],["shared/interfaces/icategories",{"_index":488,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{}}}],["shared/interfaces/iorders",{"_index":59,"title":{},"body":{"components/AllOrderComponent.html":{}}}],["shared/interfaces/iproduct",{"_index":667,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["shared/interfaces/iwish",{"_index":1153,"title":{},"body":{"components/WishListComponent.html":{}}}],["shippingaddress",{"_index":254,"title":{"interfaces/ShippingAddress.html":{}},"body":{"interfaces/Brand.html":{},"interfaces/CartItem.html":{},"interfaces/Category-1.html":{},"interfaces/Iorders.html":{},"interfaces/Product-1.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory-1.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["shippingaddress\":data",{"_index":1019,"title":{},"body":{"injectables/OrdersService.html":{}}}],["shippingprice",{"_index":257,"title":{},"body":{"interfaces/Brand.html":{},"interfaces/CartItem.html":{},"interfaces/Category-1.html":{},"interfaces/Iorders.html":{},"interfaces/Product-1.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory-1.html":{},"interfaces/User.html":{}}}],["shop",{"_index":416,"title":{},"body":{"components/CartComponent.html":{}}}],["showcancelbutton",{"_index":390,"title":{},"body":{"components/CartComponent.html":{}}}],["signal",{"_index":303,"title":{},"body":{"components/BrandsComponent.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/ProductsComponent.html":{},"components/WishListComponent.html":{}}}],["signal(0",{"_index":449,"title":{},"body":{"injectables/CartService.html":{}}}],["signin",{"_index":941,"title":{},"body":{"components/LoginComponent.html":{}}}],["signup",{"_index":1116,"title":{},"body":{"components/RegisterComponent.html":{}}}],["slug",{"_index":252,"title":{},"body":{"interfaces/Brand.html":{},"interfaces/CartItem.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"interfaces/Ibrands.html":{},"interfaces/Icart.html":{},"interfaces/Icategories.html":{},"interfaces/Iorders.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwish.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{},"interfaces/User.html":{}}}],["sold",{"_index":524,"title":{},"body":{"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwish.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/AuthService.html":{},"components/BlankLayoutComponent.html":{},"interfaces/Brand.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/Ibrands.html":{},"interfaces/Icart.html":{},"interfaces/Icategories.html":{},"interfaces/Iorders.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwish.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"injectables/OrdersService.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{},"interfaces/User.html":{},"components/WishListComponent.html":{},"injectables/WishlistService.html":{}}}],["spinner",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{},"dependencies.html":{}}}],["spinner/lib/config.d",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["src/.../app.config.server.ts",{"_index":1278,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":1275,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.routes.server.ts",{"_index":1284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.guard.ts",{"_index":1276,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../errors.interceptor.ts",{"_index":1280,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../headers.interceptor.ts",{"_index":1281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../loading.interceptor.ts",{"_index":1282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../login.guard.ts",{"_index":1283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.server.ts",{"_index":1277,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../server.ts",{"_index":1274,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:14",{"_index":153,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:17",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.server.ts",{"_index":1188,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.config.ts",{"_index":1193,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.routes.server.ts",{"_index":1195,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/environments/environment.ts",{"_index":1197,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/guards/auth.guard.ts",{"_index":1198,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/guards/login.guard.ts",{"_index":1200,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/interceptors/errors/errors.interceptor.ts",{"_index":1202,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/interceptors/headers/headers.interceptor.ts",{"_index":1204,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/interceptors/loading/loading.interceptor.ts",{"_index":1206,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/pipes/search.pipe.ts",{"_index":1126,"title":{},"body":{"pipes/SearchPipe.html":{},"coverage.html":{}}}],["src/app/core/pipes/search.pipe.ts:8",{"_index":1130,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["src/app/core/services/auth/auth.service.ts",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/core/services/auth/auth.service.ts:11",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth/auth.service.ts:14",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth/auth.service.ts:16",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth/auth.service.ts:19",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth/auth.service.ts:23",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth/auth.service.ts:27",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth/auth.service.ts:37",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth/auth.service.ts:44",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth/auth.service.ts:50",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth/auth.service.ts:56",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/brands/brands.service.ts",{"_index":335,"title":{},"body":{"injectables/BrandsService.html":{},"coverage.html":{}}}],["src/app/core/services/brands/brands.service.ts:14",{"_index":338,"title":{},"body":{"injectables/BrandsService.html":{}}}],["src/app/core/services/brands/brands.service.ts:9",{"_index":337,"title":{},"body":{"injectables/BrandsService.html":{}}}],["src/app/core/services/cart/cart.service.ts",{"_index":431,"title":{},"body":{"injectables/CartService.html":{},"coverage.html":{}}}],["src/app/core/services/cart/cart.service.ts:13",{"_index":452,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/core/services/cart/cart.service.ts:15",{"_index":450,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/core/services/cart/cart.service.ts:19",{"_index":439,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/core/services/cart/cart.service.ts:33",{"_index":441,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/core/services/cart/cart.service.ts:47",{"_index":443,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/core/services/cart/cart.service.ts:59",{"_index":445,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/core/services/cart/cart.service.ts:70",{"_index":448,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/core/services/cart/cart.service.ts:87",{"_index":442,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/core/services/categories/categories.service.ts",{"_index":503,"title":{},"body":{"injectables/CategoriesService.html":{},"coverage.html":{}}}],["src/app/core/services/categories/categories.service.ts:11",{"_index":507,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/app/core/services/categories/categories.service.ts:15",{"_index":509,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/app/core/services/categories/categories.service.ts:8",{"_index":506,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/app/core/services/flowbite/flowbite.service.ts",{"_index":704,"title":{},"body":{"injectables/FlowbiteService.html":{},"coverage.html":{}}}],["src/app/core/services/flowbite/flowbite.service.ts:11",{"_index":711,"title":{},"body":{"injectables/FlowbiteService.html":{}}}],["src/app/core/services/flowbite/flowbite.service.ts:7",{"_index":707,"title":{},"body":{"injectables/FlowbiteService.html":{}}}],["src/app/core/services/orders/orders.service.ts",{"_index":1003,"title":{},"body":{"injectables/OrdersService.html":{},"coverage.html":{}}}],["src/app/core/services/orders/orders.service.ts:12",{"_index":1015,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/app/core/services/orders/orders.service.ts:13",{"_index":1007,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/app/core/services/orders/orders.service.ts:22",{"_index":1009,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/app/core/services/orders/orders.service.ts:36",{"_index":1014,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/app/core/services/orders/orders.service.ts:51",{"_index":1010,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/app/core/services/orders/orders.service.ts:58",{"_index":1012,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/app/core/services/products/products.service.ts",{"_index":1056,"title":{},"body":{"injectables/ProductsService.html":{},"coverage.html":{}}}],["src/app/core/services/products/products.service.ts:11",{"_index":1060,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/app/core/services/products/products.service.ts:15",{"_index":1062,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/app/core/services/products/products.service.ts:8",{"_index":1059,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/app/core/services/wishlist/wishlist.service.ts",{"_index":1165,"title":{},"body":{"injectables/WishlistService.html":{},"coverage.html":{}}}],["src/app/core/services/wishlist/wishlist.service.ts:11",{"_index":1175,"title":{},"body":{"injectables/WishlistService.html":{}}}],["src/app/core/services/wishlist/wishlist.service.ts:12",{"_index":1169,"title":{},"body":{"injectables/WishlistService.html":{}}}],["src/app/core/services/wishlist/wishlist.service.ts:23",{"_index":1171,"title":{},"body":{"injectables/WishlistService.html":{}}}],["src/app/core/services/wishlist/wishlist.service.ts:37",{"_index":1174,"title":{},"body":{"injectables/WishlistService.html":{}}}],["src/app/core/services/wishlist/wishlist.service.ts:49",{"_index":1172,"title":{},"body":{"injectables/WishlistService.html":{}}}],["src/app/layouts/auth",{"_index":171,"title":{},"body":{"components/AuthLayoutComponent.html":{},"coverage.html":{}}}],["src/app/layouts/blank",{"_index":244,"title":{},"body":{"components/BlankLayoutComponent.html":{},"coverage.html":{}}}],["src/app/layouts/footer/footer.component.ts",{"_index":718,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/layouts/navbar/navbar.component.ts",{"_index":945,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/layouts/navbar/navbar.component.ts:18",{"_index":969,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/layouts/navbar/navbar.component.ts:19",{"_index":968,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/layouts/navbar/navbar.component.ts:20",{"_index":975,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/layouts/navbar/navbar.component.ts:21",{"_index":970,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/layouts/navbar/navbar.component.ts:23",{"_index":959,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/layouts/navbar/navbar.component.ts:24",{"_index":965,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/layouts/navbar/navbar.component.ts:25",{"_index":974,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/layouts/navbar/navbar.component.ts:26",{"_index":972,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/layouts/navbar/navbar.component.ts:29",{"_index":963,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/layouts/navbar/navbar.component.ts:45",{"_index":960,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/layouts/navbar/navbar.component.ts:51",{"_index":961,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/layouts/navbar/navbar.component.ts:57",{"_index":964,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/layouts/navbar/navbar.component.ts:63",{"_index":962,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/pages/all",{"_index":9,"title":{},"body":{"components/AllOrderComponent.html":{},"coverage.html":{}}}],["src/app/pages/brands/brands.component.ts",{"_index":280,"title":{},"body":{"components/BrandsComponent.html":{},"coverage.html":{}}}],["src/app/pages/brands/brands.component.ts:15",{"_index":306,"title":{},"body":{"components/BrandsComponent.html":{}}}],["src/app/pages/brands/brands.component.ts:16",{"_index":304,"title":{},"body":{"components/BrandsComponent.html":{}}}],["src/app/pages/brands/brands.component.ts:17",{"_index":309,"title":{},"body":{"components/BrandsComponent.html":{}}}],["src/app/pages/brands/brands.component.ts:18",{"_index":307,"title":{},"body":{"components/BrandsComponent.html":{}}}],["src/app/pages/brands/brands.component.ts:19",{"_index":310,"title":{},"body":{"components/BrandsComponent.html":{}}}],["src/app/pages/brands/brands.component.ts:23",{"_index":297,"title":{},"body":{"components/BrandsComponent.html":{}}}],["src/app/pages/brands/brands.component.ts:28",{"_index":295,"title":{},"body":{"components/BrandsComponent.html":{}}}],["src/app/pages/brands/brands.component.ts:38",{"_index":301,"title":{},"body":{"components/BrandsComponent.html":{}}}],["src/app/pages/brands/brands.component.ts:42",{"_index":300,"title":{},"body":{"components/BrandsComponent.html":{}}}],["src/app/pages/brands/brands.component.ts:46",{"_index":294,"title":{},"body":{"components/BrandsComponent.html":{}}}],["src/app/pages/brands/brands.component.ts:52",{"_index":296,"title":{},"body":{"components/BrandsComponent.html":{}}}],["src/app/pages/cart/cart.component.ts",{"_index":341,"title":{},"body":{"components/CartComponent.html":{},"coverage.html":{}}}],["src/app/pages/cart/cart.component.ts:108",{"_index":357,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/pages/cart/cart.component.ts:17",{"_index":364,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/pages/cart/cart.component.ts:18",{"_index":366,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/pages/cart/cart.component.ts:19",{"_index":367,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/pages/cart/cart.component.ts:22",{"_index":358,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/pages/cart/cart.component.ts:26",{"_index":356,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/pages/cart/cart.component.ts:34",{"_index":360,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/pages/cart/cart.component.ts:67",{"_index":362,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/pages/cart/cart.component.ts:78",{"_index":355,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/pages/categories/categories.component.ts",{"_index":470,"title":{},"body":{"components/CategoriesComponent.html":{},"coverage.html":{}}}],["src/app/pages/categories/categories.component.ts:16",{"_index":482,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/pages/categories/categories.component.ts:17",{"_index":484,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/pages/categories/categories.component.ts:18",{"_index":480,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/pages/categories/categories.component.ts:19",{"_index":485,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/pages/categories/categories.component.ts:21",{"_index":479,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/pages/categories/categories.component.ts:25",{"_index":477,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/pages/categories/categories.component.ts:41",{"_index":478,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/pages/checkout/checkout.component.ts",{"_index":530,"title":{},"body":{"components/CheckoutComponent.html":{},"coverage.html":{}}}],["src/app/pages/checkout/checkout.component.ts:16",{"_index":550,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/pages/checkout/checkout.component.ts:17",{"_index":557,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/pages/checkout/checkout.component.ts:18",{"_index":552,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/pages/checkout/checkout.component.ts:19",{"_index":551,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/pages/checkout/checkout.component.ts:20",{"_index":555,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/pages/checkout/checkout.component.ts:21",{"_index":554,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/pages/checkout/checkout.component.ts:22",{"_index":556,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/pages/checkout/checkout.component.ts:23",{"_index":558,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/pages/checkout/checkout.component.ts:26",{"_index":547,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/pages/checkout/checkout.component.ts:30",{"_index":546,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/pages/checkout/checkout.component.ts:39",{"_index":545,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/pages/checkout/checkout.component.ts:49",{"_index":548,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/pages/checkout/checkout.component.ts:67",{"_index":544,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/pages/details/details.component.ts",{"_index":622,"title":{},"body":{"components/DetailsComponent.html":{},"coverage.html":{}}}],["src/app/pages/details/details.component.ts:19",{"_index":637,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/pages/details/details.component.ts:20",{"_index":661,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/pages/details/details.component.ts:21",{"_index":638,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/pages/details/details.component.ts:22",{"_index":665,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/pages/details/details.component.ts:23",{"_index":663,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/pages/details/details.component.ts:24",{"_index":662,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/pages/details/details.component.ts:26",{"_index":659,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/pages/details/details.component.ts:27",{"_index":658,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/pages/details/details.component.ts:58",{"_index":636,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/pages/details/details.component.ts:78",{"_index":634,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/pages/details/details.component.ts:95",{"_index":635,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/pages/forgotpassword/forgotpassword.component.ts",{"_index":730,"title":{},"body":{"components/ForgotpasswordComponent.html":{},"coverage.html":{}}}],["src/app/pages/forgotpassword/forgotpassword.component.ts:13",{"_index":745,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["src/app/pages/forgotpassword/forgotpassword.component.ts:14",{"_index":753,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["src/app/pages/forgotpassword/forgotpassword.component.ts:15",{"_index":746,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["src/app/pages/forgotpassword/forgotpassword.component.ts:17",{"_index":754,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["src/app/pages/forgotpassword/forgotpassword.component.ts:19",{"_index":759,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["src/app/pages/forgotpassword/forgotpassword.component.ts:26",{"_index":758,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["src/app/pages/forgotpassword/forgotpassword.component.ts:32",{"_index":752,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["src/app/pages/forgotpassword/forgotpassword.component.ts:42",{"_index":743,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["src/app/pages/forgotpassword/forgotpassword.component.ts:61",{"_index":742,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["src/app/pages/forgotpassword/forgotpassword.component.ts:83",{"_index":741,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["src/app/pages/home/home.component.ts",{"_index":823,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/pages/home/home.component.ts:106",{"_index":838,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:118",{"_index":840,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:129",{"_index":850,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:138",{"_index":844,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:142",{"_index":848,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:149",{"_index":845,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:156",{"_index":846,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:24",{"_index":868,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:25",{"_index":853,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:26",{"_index":851,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:27",{"_index":877,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:28",{"_index":873,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:29",{"_index":866,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:30",{"_index":865,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:32",{"_index":869,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:33",{"_index":870,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:34",{"_index":871,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:35",{"_index":872,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:37",{"_index":867,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:38",{"_index":852,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:39",{"_index":875,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:41",{"_index":864,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:43",{"_index":855,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:58",{"_index":860,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:78",{"_index":847,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:84",{"_index":842,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:95",{"_index":841,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/login/login.component.ts",{"_index":908,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/pages/login/login.component.ts:13",{"_index":915,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/login/login.component.ts:14",{"_index":920,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/login/login.component.ts:15",{"_index":916,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/login/login.component.ts:16",{"_index":919,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/login/login.component.ts:17",{"_index":917,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/login/login.component.ts:21",{"_index":918,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/login/login.component.ts:29",{"_index":914,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/notfound/notfound.component.ts",{"_index":997,"title":{},"body":{"components/NotfoundComponent.html":{},"coverage.html":{}}}],["src/app/pages/products/products.component.ts",{"_index":1026,"title":{},"body":{"components/ProductsComponent.html":{},"coverage.html":{}}}],["src/app/pages/products/products.component.ts:103",{"_index":1034,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/pages/products/products.component.ts:107",{"_index":1038,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/pages/products/products.component.ts:114",{"_index":1035,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/pages/products/products.component.ts:127",{"_index":1036,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/pages/products/products.component.ts:22",{"_index":1048,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/pages/products/products.component.ts:23",{"_index":1045,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/pages/products/products.component.ts:24",{"_index":1046,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/pages/products/products.component.ts:25",{"_index":1047,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/pages/products/products.component.ts:26",{"_index":1041,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/pages/products/products.component.ts:28",{"_index":1051,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/pages/products/products.component.ts:29",{"_index":1044,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/pages/products/products.component.ts:30",{"_index":1049,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/pages/products/products.component.ts:31",{"_index":1042,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/pages/products/products.component.ts:32",{"_index":1040,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/pages/products/products.component.ts:33",{"_index":1043,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/pages/products/products.component.ts:34",{"_index":1050,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/pages/products/products.component.ts:38",{"_index":1037,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/pages/products/products.component.ts:41",{"_index":1033,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/pages/products/products.component.ts:54",{"_index":1031,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/pages/products/products.component.ts:78",{"_index":1032,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/pages/products/products.component.ts:94",{"_index":1039,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/pages/register/register.component.ts",{"_index":1067,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/pages/register/register.component.ts:16",{"_index":1077,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/pages/register/register.component.ts:17",{"_index":1087,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/pages/register/register.component.ts:18",{"_index":1078,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/pages/register/register.component.ts:19",{"_index":1080,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/pages/register/register.component.ts:20",{"_index":1079,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/pages/register/register.component.ts:24",{"_index":1086,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/pages/register/register.component.ts:33",{"_index":1076,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/pages/register/register.component.ts:65",{"_index":1073,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/pages/wish",{"_index":1135,"title":{},"body":{"components/WishListComponent.html":{},"coverage.html":{}}}],["src/app/shared/interfaces/ibrands.ts",{"_index":906,"title":{},"body":{"interfaces/Ibrands.html":{},"coverage.html":{}}}],["src/app/shared/interfaces/icart.ts",{"_index":515,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Icart.html":{},"interfaces/Product.html":{},"interfaces/Product2.html":{},"interfaces/Subcategory.html":{},"coverage.html":{}}}],["src/app/shared/interfaces/icategories.ts",{"_index":907,"title":{},"body":{"interfaces/Icategories.html":{},"coverage.html":{}}}],["src/app/shared/interfaces/iorders.ts",{"_index":249,"title":{},"body":{"interfaces/Brand.html":{},"interfaces/CartItem.html":{},"interfaces/Category-1.html":{},"interfaces/Iorders.html":{},"interfaces/Product-1.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory-1.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["src/app/shared/interfaces/iproduct.ts",{"_index":522,"title":{},"body":{"interfaces/Category-2.html":{},"interfaces/Iproduct.html":{},"interfaces/Subcategory-2.html":{},"coverage.html":{}}}],["src/app/shared/interfaces/iwish.ts",{"_index":528,"title":{},"body":{"interfaces/Category-3.html":{},"interfaces/Iwish.html":{},"interfaces/Subcategory-3.html":{},"coverage.html":{}}}],["src/main.server.ts",{"_index":1222,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/server.ts",{"_index":1224,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":813,"title":{},"body":{"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["started",{"_index":1262,"title":{"index.html":{}},"body":{}}],["state",{"_index":1315,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statements",{"_index":1186,"title":{},"body":{"coverage.html":{}}}],["step",{"_index":735,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["step:number",{"_index":762,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["step==3",{"_index":805,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["stoppop",{"_index":290,"title":{},"body":{"components/BrandsComponent.html":{}}}],["stoppop($event",{"_index":298,"title":{},"body":{"components/BrandsComponent.html":{}}}],["stoppop($event:event):void",{"_index":326,"title":{},"body":{"components/BrandsComponent.html":{}}}],["storedwishlist",{"_index":894,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["string",{"_index":253,"title":{},"body":{"interfaces/Brand.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"injectables/CategoriesService.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"interfaces/Ibrands.html":{},"interfaces/Icart.html":{},"interfaces/Icategories.html":{},"interfaces/Iorders.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwish.html":{},"components/LoginComponent.html":{},"injectables/OrdersService.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{},"interfaces/User.html":{},"components/WishListComponent.html":{},"injectables/WishlistService.html":{}}}],["styleurl",{"_index":21,"title":{},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{}}}],["subactive",{"_index":629,"title":{},"body":{"components/DetailsComponent.html":{}}}],["subactive:subscription=new",{"_index":675,"title":{},"body":{"components/DetailsComponent.html":{}}}],["subbrands",{"_index":287,"title":{},"body":{"components/BrandsComponent.html":{}}}],["subbrands:subscription",{"_index":318,"title":{},"body":{"components/BrandsComponent.html":{}}}],["subbroduct",{"_index":630,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["subbroduct:subscription=new",{"_index":674,"title":{},"body":{"components/DetailsComponent.html":{},"components/ProductsComponent.html":{}}}],["subcart",{"_index":350,"title":{},"body":{"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/ProductsComponent.html":{},"components/WishListComponent.html":{}}}],["subcart:subscription",{"_index":1155,"title":{},"body":{"components/WishListComponent.html":{}}}],["subcart:subscription=new",{"_index":376,"title":{},"body":{"components/CartComponent.html":{},"components/NavbarComponent.html":{},"components/ProductsComponent.html":{}}}],["subcategory",{"_index":274,"title":{"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{}},"body":{"interfaces/Brand.html":{},"interfaces/CartItem.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"components/HomeComponent.html":{},"interfaces/Icart.html":{},"interfaces/Iorders.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwish.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["subcategory:subscription=new",{"_index":491,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["submitform",{"_index":543,"title":{},"body":{"components/CheckoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["submitform():void",{"_index":583,"title":{},"body":{"components/CheckoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["suborder",{"_index":539,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["suborder:subscription=new",{"_index":567,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["subscription",{"_index":49,"title":{},"body":{"components/AllOrderComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/ProductsComponent.html":{},"components/WishListComponent.html":{}}}],["subwish",{"_index":1140,"title":{},"body":{"components/WishListComponent.html":{}}}],["subwish:subscription",{"_index":1154,"title":{},"body":{"components/WishListComponent.html":{}}}],["subwishlist",{"_index":829,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["success",{"_index":406,"title":{},"body":{"components/CartComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{}}}],["suporder",{"_index":29,"title":{},"body":{"components/AllOrderComponent.html":{}}}],["suporder:subscription",{"_index":66,"title":{},"body":{"components/AllOrderComponent.html":{}}}],["sure",{"_index":384,"title":{},"body":{"components/CartComponent.html":{}}}],["swal",{"_index":373,"title":{},"body":{"components/CartComponent.html":{}}}],["swal.fire",{"_index":383,"title":{},"body":{"components/CartComponent.html":{}}}],["sweetalert2",{"_index":372,"title":{},"body":{"components/CartComponent.html":{},"dependencies.html":{}}}],["sweetalert2/ngx",{"_index":371,"title":{},"body":{"components/CartComponent.html":{},"dependencies.html":{}}}],["sweetalert2module",{"_index":345,"title":{},"body":{"components/CartComponent.html":{}}}],["table",{"_index":1232,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1231,"title":{},"body":{"coverage.html":{}}}],["taxprice",{"_index":255,"title":{},"body":{"interfaces/Brand.html":{},"interfaces/CartItem.html":{},"interfaces/Category-1.html":{},"interfaces/Iorders.html":{},"interfaces/Product-1.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory-1.html":{},"interfaces/User.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{}}}],["templateurl",{"_index":19,"title":{},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{}}}],["term",{"_index":1129,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["text",{"_index":385,"title":{},"body":{"components/CartComponent.html":{},"components/ProductsComponent.html":{}}}],["text:string",{"_index":1054,"title":{},"body":{"components/ProductsComponent.html":{}}}],["theme",{"_index":1308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["then((result",{"_index":399,"title":{},"body":{"components/CartComponent.html":{}}}],["this.activatedroute.parammap.subscribe",{"_index":579,"title":{},"body":{"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{}}}],["this.allorder.getuserorder('67a26f18518151d803bd7944').subscribe",{"_index":71,"title":{},"body":{"components/AllOrderComponent.html":{}}}],["this.authservice.logout",{"_index":986,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.authservice.saveuserdata",{"_index":784,"title":{},"body":{"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{}}}],["this.authservice.sendloginform(this.loginform.value).subscribe",{"_index":927,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.sendregisterform(this.register.value).subscribe",{"_index":1091,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.authservice.setcodeverify",{"_index":775,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["this.authservice.setemailverify",{"_index":769,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["this.authservice.setresetpassword(this.resetpassword.value).subscribe",{"_index":780,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["this.brands.set(res.data",{"_index":323,"title":{},"body":{"components/BrandsComponent.html":{}}}],["this.brandsservice.getallbrands().subscribe",{"_index":322,"title":{},"body":{"components/BrandsComponent.html":{}}}],["this.cartdetails",{"_index":402,"title":{},"body":{"components/CartComponent.html":{}}}],["this.cartdetails=res.data",{"_index":381,"title":{},"body":{"components/CartComponent.html":{}}}],["this.cartid",{"_index":581,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.cartservice.addproducttocart(id).subscribe",{"_index":686,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{},"components/WishListComponent.html":{}}}],["this.cartservice.cartnumber",{"_index":967,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.cartservice.cartnumber.set(0",{"_index":413,"title":{},"body":{"components/CartComponent.html":{},"components/CheckoutComponent.html":{}}}],["this.cartservice.cartnumber.set(res.numofcartitems",{"_index":404,"title":{},"body":{"components/CartComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/ProductsComponent.html":{},"components/WishListComponent.html":{}}}],["this.cartservice.clearcart().subscribe",{"_index":411,"title":{},"body":{"components/CartComponent.html":{}}}],["this.cartservice.getlogedusercart().subscribe",{"_index":380,"title":{},"body":{"components/CartComponent.html":{},"components/NavbarComponent.html":{}}}],["this.cartservice.removespecificart(id).subscribe",{"_index":401,"title":{},"body":{"components/CartComponent.html":{}}}],["this.cartservice.updateproductquantity(id,count).subscribe",{"_index":409,"title":{},"body":{"components/CartComponent.html":{}}}],["this.categories.set(res.data",{"_index":497,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{}}}],["this.categoriesservice.getallgategories().subscribe",{"_index":496,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{}}}],["this.checkoutform",{"_index":571,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.currentdata",{"_index":329,"title":{},"body":{"components/BrandsComponent.html":{}}}],["this.detailsproduct",{"_index":684,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.flowbiteservice.loadflowbite(flowbite",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["this.getallorder",{"_index":68,"title":{},"body":{"components/AllOrderComponent.html":{}}}],["this.getbrandsdata",{"_index":319,"title":{},"body":{"components/BrandsComponent.html":{}}}],["this.getcartdata",{"_index":377,"title":{},"body":{"components/CartComponent.html":{}}}],["this.getcartid",{"_index":569,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.getcategoriesdata",{"_index":492,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{}}}],["this.getlogged",{"_index":1156,"title":{},"body":{"components/WishListComponent.html":{}}}],["this.getproductsdata",{"_index":880,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["this.httpclient.delete(`${environment.baseurl}/api/v1/cart",{"_index":469,"title":{},"body":{"injectables/CartService.html":{}}}],["this.httpclient.delete(`${environment.baseurl}/api/v1/cart/${id",{"_index":467,"title":{},"body":{"injectables/CartService.html":{}}}],["this.httpclient.delete(`${environment.baseurl}/api/v1/wishlist/${id",{"_index":1180,"title":{},"body":{"injectables/WishlistService.html":{}}}],["this.httpclient.get('https://ecommerce.routemisr.com/api/v1/categories",{"_index":512,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.httpclient.get('https://ecommerce.routemisr.com/api/v1/products",{"_index":1064,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.httpclient.get(`${environment.baseurl}/api/v1/brands",{"_index":340,"title":{},"body":{"injectables/BrandsService.html":{}}}],["this.httpclient.get(`${environment.baseurl}/api/v1/cart",{"_index":466,"title":{},"body":{"injectables/CartService.html":{}}}],["this.httpclient.get(`${environment.baseurl}/api/v1/orders",{"_index":1023,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.httpclient.get(`${environment.baseurl}/api/v1/orders/user/${id",{"_index":1025,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.httpclient.get(`${environment.baseurl}/api/v1/wishlist",{"_index":1182,"title":{},"body":{"injectables/WishlistService.html":{}}}],["this.httpclient.get(`https://ecommerce.routemisr.com/api/v1/categories/${id",{"_index":514,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.httpclient.get(`https://ecommerce.routemisr.com/api/v1/products/${id",{"_index":1066,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.httpclient.post(`${environment.baseurl}/api/v1/auth/forgotpasswords`,data",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.httpclient.post(`${environment.baseurl}/api/v1/auth/signin`,data",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.httpclient.post(`${environment.baseurl}/api/v1/auth/signup`,data",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.httpclient.post(`${environment.baseurl}/api/v1/auth/verifyresetcode`,data",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.httpclient.post(`${environment.baseurl}/api/v1/cart",{"_index":463,"title":{},"body":{"injectables/CartService.html":{}}}],["this.httpclient.post(`${environment.baseurl}/api/v1/orders/${id",{"_index":1021,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.httpclient.post(`${environment.baseurl}/api/v1/orders/checkout",{"_index":1017,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.httpclient.post(`${environment.baseurl}/api/v1/wishlist",{"_index":1177,"title":{},"body":{"injectables/WishlistService.html":{}}}],["this.httpclient.put(`${environment.baseurl}/api/v1/auth/resetpassword`,data",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.httpclient.put(`${environment.baseurl}/api/v1/cart/${id",{"_index":468,"title":{},"body":{"injectables/CartService.html":{}}}],["this.initform",{"_index":568,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.isloading=false",{"_index":929,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.isloading=true",{"_index":768,"title":{},"body":{"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.issuccess=res.message",{"_index":933,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.issuccess=res.status",{"_index":593,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.istoggellightbox",{"_index":325,"title":{},"body":{"components/BrandsComponent.html":{}}}],["this.loadwishlist",{"_index":881,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.mserror",{"_index":934,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.mytoken",{"_index":461,"title":{},"body":{"injectables/CartService.html":{},"injectables/OrdersService.html":{},"injectables/WishlistService.html":{}}}],["this.navbarmenu.nativeelement",{"_index":990,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.navbartoggle.nativeelement.addeventlistener('click",{"_index":987,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.ngxspinnerservice.hide",{"_index":498,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["this.ngxspinnerservice.show",{"_index":494,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["this.orderdata",{"_index":73,"title":{},"body":{"components/AllOrderComponent.html":{}}}],["this.ordersservice.checkoutpayment(this.cartid,this.checkoutform.value).subscribe",{"_index":585,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.ordersservice.greatecashorder(this.cartid,this.checkoutform.value).subscribe",{"_index":592,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.products.set(res.data",{"_index":883,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["this.productsservice.getallproduct().subscribe",{"_index":882,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["this.productsservice.getspecificproduct(idprduct).subscribe",{"_index":683,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.register.markallastouched",{"_index":1093,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.removeitem(id",{"_index":1160,"title":{},"body":{"components/WishListComponent.html":{}}}],["this.router.navigate(['/home",{"_index":785,"title":{},"body":{"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{}}}],["this.router.navigate(['/login",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{},"components/RegisterComponent.html":{}}}],["this.savewishlist",{"_index":890,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["this.step=2",{"_index":772,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["this.step=3",{"_index":778,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["this.subactive",{"_index":677,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.subactive.unsubscribe",{"_index":691,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.subbrands",{"_index":321,"title":{},"body":{"components/BrandsComponent.html":{}}}],["this.subbrands.unsubscribe",{"_index":330,"title":{},"body":{"components/BrandsComponent.html":{}}}],["this.subbroduct",{"_index":685,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["this.subbroduct.unsubscribe",{"_index":692,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["this.subcart",{"_index":379,"title":{},"body":{"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/ProductsComponent.html":{},"components/WishListComponent.html":{}}}],["this.subcart.unsubscribe",{"_index":414,"title":{},"body":{"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/ProductsComponent.html":{}}}],["this.subcategory",{"_index":495,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{}}}],["this.subcategory.unsubscribe",{"_index":499,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{}}}],["this.suborder",{"_index":578,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.subwish",{"_index":1161,"title":{},"body":{"components/WishListComponent.html":{}}}],["this.subwishlist",{"_index":884,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["this.subwishlist.unsubscribe",{"_index":898,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.suporder",{"_index":70,"title":{},"body":{"components/AllOrderComponent.html":{}}}],["this.suporder.unsubscribe",{"_index":75,"title":{},"body":{"components/AllOrderComponent.html":{}}}],["this.toastrservice.success(res.message",{"_index":689,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{},"components/WishListComponent.html":{}}}],["this.togglemenu",{"_index":988,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.togglewishlist(id",{"_index":886,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["this.userdata",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userdata=null",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.verifycode.value).subscribe",{"_index":776,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["this.verifyemail.value).subscribe",{"_index":770,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["this.wishdata",{"_index":1163,"title":{},"body":{"components/WishListComponent.html":{}}}],["this.wishdata.filter(product",{"_index":1164,"title":{},"body":{"components/WishListComponent.html":{}}}],["this.wishdata=res.data",{"_index":1159,"title":{},"body":{"components/WishListComponent.html":{}}}],["this.wishlist",{"_index":896,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["this.wishlist.add(productid",{"_index":889,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["this.wishlist.delete(productid",{"_index":888,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["this.wishlist.has(productid",{"_index":887,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["this.wishlistservice.addproducttowishlist(id).subscribe",{"_index":885,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["this.wishlistservice.getloggedwishlist().subscribe",{"_index":1158,"title":{},"body":{"components/WishListComponent.html":{}}}],["this.wishlistservice.removeproductfromwishlist(id).subscribe",{"_index":1162,"title":{},"body":{"components/WishListComponent.html":{}}}],["throwerror",{"_index":1329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tick",{"_index":489,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["title",{"_index":276,"title":{},"body":{"interfaces/Brand.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"interfaces/Icart.html":{},"interfaces/Iorders.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwish.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{},"interfaces/User.html":{}}}],["toastr",{"_index":671,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{},"components/WishListComponent.html":{},"dependencies.html":{}}}],["toastrservice",{"_index":631,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{},"components/WishListComponent.html":{},"miscellaneous/variables.html":{}}}],["toastrservice.error(err.error.message",{"_index":1328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["toggelightbox",{"_index":291,"title":{},"body":{"components/BrandsComponent.html":{}}}],["toggelightbox():void",{"_index":324,"title":{},"body":{"components/BrandsComponent.html":{}}}],["togglemenu",{"_index":956,"title":{},"body":{"components/NavbarComponent.html":{}}}],["togglewishlist",{"_index":837,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["togglewishlist(productid",{"_index":849,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["token",{"_index":460,"title":{},"body":{"injectables/CartService.html":{},"injectables/OrdersService.html":{},"injectables/WishlistService.html":{},"miscellaneous/variables.html":{}}}],["token:this.mytoken",{"_index":1178,"title":{},"body":{"injectables/WishlistService.html":{}}}],["total",{"_index":417,"title":{},"body":{"components/CartComponent.html":{}}}],["totalcartprice",{"_index":519,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Icart.html":{},"interfaces/Product.html":{},"interfaces/Product2.html":{},"interfaces/Subcategory.html":{}}}],["totalorderprice",{"_index":258,"title":{},"body":{"interfaces/Brand.html":{},"interfaces/CartItem.html":{},"interfaces/Category-1.html":{},"interfaces/Iorders.html":{},"interfaces/Product-1.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory-1.html":{},"interfaces/User.html":{}}}],["touchdrag",{"_index":642,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{}}}],["track",{"_index":77,"title":{},"body":{"components/AllOrderComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{},"components/WishListComponent.html":{}}}],["transform",{"_index":1127,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["transform(arrayofobject",{"_index":1128,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{}}}],["true",{"_index":391,"title":{},"body":{"components/CartComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1257,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":46,"title":{},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Brand.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/Ibrands.html":{},"interfaces/Icart.html":{},"interfaces/Icategories.html":{},"interfaces/Iorders.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwish.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/OrdersService.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{},"interfaces/User.html":{},"components/WishListComponent.html":{},"injectables/WishlistService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":462,"title":{},"body":{"injectables/CartService.html":{},"injectables/OrdersService.html":{},"injectables/WishlistService.html":{}}}],["unsubscribe",{"_index":313,"title":{},"body":{"components/BrandsComponent.html":{}}}],["updatecount",{"_index":354,"title":{},"body":{"components/CartComponent.html":{}}}],["updatecount(id",{"_index":361,"title":{},"body":{"components/CartComponent.html":{}}}],["updatecount(id:string",{"_index":407,"title":{},"body":{"components/CartComponent.html":{}}}],["updatedat",{"_index":267,"title":{},"body":{"interfaces/Brand.html":{},"interfaces/CartItem.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"interfaces/Ibrands.html":{},"interfaces/Icart.html":{},"interfaces/Icategories.html":{},"interfaces/Iorders.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwish.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{},"interfaces/User.html":{}}}],["updateproductquantity",{"_index":438,"title":{},"body":{"injectables/CartService.html":{}}}],["updateproductquantity(id",{"_index":446,"title":{},"body":{"injectables/CartService.html":{}}}],["used",{"_index":1290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":263,"title":{"interfaces/User.html":{}},"body":{"interfaces/Brand.html":{},"interfaces/CartItem.html":{},"interfaces/Category-1.html":{},"interfaces/Iorders.html":{},"interfaces/Product-1.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory-1.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["userdata",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdata\",this.userdata",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdata:any=null",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{}}}],["userid",{"_index":30,"title":{},"body":{"components/AllOrderComponent.html":{}}}],["userid:any",{"_index":67,"title":{},"body":{"components/AllOrderComponent.html":{}}}],["valid",{"_index":610,"title":{},"body":{"components/CheckoutComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validators",{"_index":560,"title":{},"body":{"components/CheckoutComponent.html":{},"components/ForgotpasswordComponent.html":{}}}],["validators.pattern(/^01[0125][0",{"_index":574,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["validators:this.confirmpassword",{"_index":1085,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators}from",{"_index":922,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["value",{"_index":43,"title":{},"body":{"components/AllOrderComponent.html":{},"injectables/AuthService.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/OrdersService.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{},"injectables/WishlistService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":100,"title":{},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{}}}],["variable",{"_index":1189,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1273,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verify",{"_index":796,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["verifycode",{"_index":736,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["verifycode:formgroup=new",{"_index":764,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["verifycodesubmit",{"_index":739,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["verifycodesubmit():void",{"_index":773,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["verifyemail",{"_index":737,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["verifyemail:formgroup=new",{"_index":763,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["verifyemailsubmit",{"_index":740,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["verifyemailsubmit():void",{"_index":766,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["version",{"_index":1270,"title":{},"body":{"properties.html":{}}}],["viewchild",{"_index":878,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarComponent.html":{}}}],["viewchild('hearticon",{"_index":863,"title":{},"body":{"components/HomeComponent.html":{}}}],["viewchild('navbarmenu",{"_index":971,"title":{},"body":{"components/NavbarComponent.html":{}}}],["viewchild('navbartoggle",{"_index":973,"title":{},"body":{"components/NavbarComponent.html":{}}}],["void",{"_index":39,"title":{},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{}}}],["warning",{"_index":389,"title":{},"body":{"components/CartComponent.html":{}}}],["wish",{"_index":138,"title":{},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{}}}],["wishdata",{"_index":1141,"title":{},"body":{"components/WishListComponent.html":{}}}],["wishlist",{"_index":830,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/ProductsComponent.html":{}}}],["wishlistcomponent",{"_index":137,"title":{"components/WishListComponent.html":{}},"body":{"components/AllOrderComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishListComponent.html":{},"coverage.html":{}}}],["wishlistservice",{"_index":831,"title":{"injectables/WishlistService.html":{}},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{},"components/WishListComponent.html":{},"injectables/WishlistService.html":{},"coverage.html":{}}}],["withviewtransitions(),withhashlocation",{"_index":1302,"title":{},"body":{"miscellaneous/variables.html":{}}}],["won't",{"_index":386,"title":{},"body":{"components/CartComponent.html":{}}}],["writablesignal",{"_index":302,"title":{},"body":{"components/BrandsComponent.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{},"components/WishListComponent.html":{}}}],["yes",{"_index":397,"title":{},"body":{"components/CartComponent.html":{}}}],["z]\\w{7",{"_index":751,"title":{},"body":{"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["zone.js",{"_index":1259,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AllOrderComponent.html":{"url":"components/AllOrderComponent.html","title":"component - AllOrderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AllOrderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/all-order/all-order.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-all-oreder\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./all-order.component.html\n            \n\n\n\n            \n                styleUrl\n                ./all-order.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                allOrder\n                            \n                            \n                                orderData\n                            \n                            \n                                supOrder\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllOrder\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAllOrder\n                        \n                    \n                \n            \n            \n                \ngetAllOrder()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/all-order/all-order.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/all-order/all-order.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/all-order/all-order.component.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        allOrder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(OrdersService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/all-order/all-order.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        orderData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Iorders[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/all-order/all-order.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        supOrder\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/all-order/all-order.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/all-order/all-order.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, OnDestroy, OnInit } from '@angular/core';\nimport { OrdersService } from '../../core/services/orders/orders.service';\nimport { CartItem, Iorders } from '../../shared/interfaces/iorders';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-all-oreder',\n  imports: [],\n  templateUrl: './all-order.component.html',\n  styleUrl: './all-order.component.scss'\n})\nexport class AllOrderComponent implements OnInit , OnDestroy {\n  private readonly allOrder = inject(OrdersService);\n  orderData:Iorders[] = []\n  // cartItems:CartItem[]=[]\n  supOrder:Subscription= new Subscription();\n  userId:any;\n\n  ngOnInit(): void {\n    this.getAllOrder();\n\n\n\n  }\n\n  getAllOrder():void{\n   this.supOrder= this.allOrder.getUserOrder('67a26f18518151d803bd7944').subscribe({\n      next:(res)=>{\n        \n        this.orderData= res ;\n        \n      \n        \n      }\n    })\n  }\n\n  ngOnDestroy(): void {\n    this.supOrder.unsubscribe();\n  }\n  \n}\n\n    \n\n    \n          \n\n\n\n    All Order\n\n    \n\n    @for (order of orderData; track $index) {\n   \n\n       \n\n        Oder: {{$index +1}}\n    \n            \n        @for (item of order.cartItems; track $index) {\n            \n            \n        \n            \n               \n                \n               \n                \n                     {{item.product.category.name}}\n                     {{item.product.title.split(\" \",2).join(' ')}}\n                   \n                    \n                \n                \n            \n            \n                 brand:{{item.product.brand.name}}\n                Count of the product:{{item.count}}\n               \n            \n          \n            \n                Price: {{item.price}} EGP\n                \n                    @for (num of [1,2,3,4,5].slice(0, item.product.ratingsAverage); track $index) {\n\n                    \n                    }\n                    @if(item.product.ratingsAverage %1 !==0){\n                    \n                    }\n                    {{item.product.ratingsAverage}}\n                \n            \n            \n\n            \n        }\n   \n   \n    }\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      All Order        @for (order of orderData; track $index) {                  Oder: {{$index +1}}                        @for (item of order.cartItems; track $index) {                                                                                                                               {{item.product.category.name}}                     {{item.product.title.split(\" \",2).join(\\' \\')}}                                                                                                                brand:{{item.product.brand.name}}                Count of the product:{{item.count}}                                                                 Price: {{item.price}} EGP                                    @for (num of [1,2,3,4,5].slice(0, item.product.ratingsAverage); track $index) {                                        }                    @if(item.product.ratingsAverage %1 !==0){                                        }                    {{item.product.ratingsAverage}}                                                            }          }'\n    var COMPONENTS = [{'name': 'AllOrderComponent', 'selector': 'app-all-oreder'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotpasswordComponent', 'selector': 'app-forgotpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'WishListComponent', 'selector': 'app-wish-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AllOrderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n            \n                imports\n                \n                            RouterOutlet\n                            NgxSpinnerComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(flowbiteService: FlowbiteService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        flowbiteService\n                                                  \n                                                        \n                                                                        FlowbiteService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { NgxSpinnerConfig } from './../../node_modules/ngx-spinner/lib/config.d';\n\nimport { Component, OnInit } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { FlowbiteService } from './core/services/flowbite/flowbite.service';\nimport { NgxSpinnerComponent } from 'ngx-spinner';\n\n@Component({\n  selector: 'app-root',\n  imports: [RouterOutlet,NgxSpinnerComponent],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss'\n})\nexport class AppComponent implements OnInit {\n  constructor(private flowbiteService: FlowbiteService) {}\n\n  ngOnInit(): void {\n    this.flowbiteService.loadFlowbite(flowbite => {\n      // Your custom code here\n     \n    });\n  }\n\n\n}\n\n    \n\n    \n        \n\n Loading... \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' Loading... '\n    var COMPONENTS = [{'name': 'AllOrderComponent', 'selector': 'app-all-oreder'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotpasswordComponent', 'selector': 'app-forgotpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'WishListComponent', 'selector': 'app-wish-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthLayoutComponent.html":{"url":"components/AuthLayoutComponent.html","title":"component - AuthLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/auth-layout/auth-layout.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth-layout\n            \n\n\n            \n                imports\n                \n                            RouterOutlet\n                                NavbarComponent\n                                FooterComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./auth-layout.component.html\n            \n\n\n\n            \n                styleUrl\n                ./auth-layout.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { NavbarComponent } from \"../navbar/navbar.component\";\nimport { FooterComponent } from \"../footer/footer.component\";\n\n@Component({\n  selector: 'app-auth-layout',\n  imports: [RouterOutlet, NavbarComponent, FooterComponent],\n  templateUrl: './auth-layout.component.html',\n  styleUrl: './auth-layout.component.scss'\n})\nexport class AuthLayoutComponent {\n\n}\n\n    \n\n    \n        \n\n\n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AllOrderComponent', 'selector': 'app-all-oreder'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotpasswordComponent', 'selector': 'app-forgotpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'WishListComponent', 'selector': 'app-wish-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                router\n                            \n                            \n                                userData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logOut\n                            \n                            \n                                saveUserData\n                            \n                            \n                                sendLoginForm\n                            \n                            \n                                sendRegisterForm\n                            \n                            \n                                setCodeVerify\n                            \n                            \n                                setEmailVerify\n                            \n                            \n                                setresetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/auth/auth.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logOut\n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth/auth.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveUserData\n                        \n                    \n                \n            \n            \n                \nsaveUserData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth/auth.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendLoginForm\n                        \n                    \n                \n            \n            \n                \nsendLoginForm(data: Object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth/auth.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendRegisterForm\n                        \n                    \n                \n            \n            \n                \nsendRegisterForm(data: Object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth/auth.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCodeVerify\n                        \n                    \n                \n            \n            \n                \nsetCodeVerify(data: object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth/auth.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setEmailVerify\n                        \n                    \n                \n            \n            \n                \nsetEmailVerify(data: object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth/auth.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setresetPassword\n                        \n                    \n                \n            \n            \n                \nsetresetPassword(data: object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth/auth.service.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth/auth.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth/auth.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { jwtDecode } from \"jwt-decode\";\nimport { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport { Router } from \"@angular/router\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor( private httpClient :HttpClient) { }\n  private readonly router=inject(Router)\n\n  userData:any=null;\n\n\n    sendRegisterForm(data:Object):Observable{\n     return this.httpClient.post(`${environment.baseUrl}/api/v1/auth/signup`,data)\n    }\n    \n    sendLoginForm(data:Object):Observable{\n    return  this.httpClient.post(`${environment.baseUrl}/api/v1/auth/signin`,data)\n    }\n\n    saveUserData():void{\n      if(localStorage.getItem('userToken')!==null){\n      this.userData= jwtDecode(localStorage.getItem('userToken')!)\n      console.log( \"userData\",this.userData);\n      this.router.navigate(['/login']);\n\n      }\n    \n    }\n\n    logOut():void{\n      localStorage.removeItem('userToken');\n      this.userData=null;\n      this.router.navigate(['/login'])\n    }\n\n\n   setEmailVerify(data:object):Observable{\n    return this.httpClient.post(`${environment.baseUrl}/api/v1/auth/forgotPasswords`,data)\n\n   }\n\n\n   setCodeVerify(data:object):Observable{\n    return this.httpClient.post(`${environment.baseUrl}/api/v1/auth/verifyResetCode`,data)\n\n   }\n\n   \n   setresetPassword(data:object):Observable{\n    return this.httpClient.put(`${environment.baseUrl}/api/v1/auth/resetPassword`,data)\n\n   }\n\n\n\n\n   \n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BlankLayoutComponent.html":{"url":"components/BlankLayoutComponent.html","title":"component - BlankLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BlankLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/blank-layout/blank-layout.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-blank-layout\n            \n\n\n            \n                imports\n                \n                            RouterOutlet\n                                NavbarComponent\n                                FooterComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./blank-layout.component.html\n            \n\n\n\n            \n                styleUrl\n                ./blank-layout.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { NavbarComponent } from \"../navbar/navbar.component\";\nimport { FooterComponent } from \"../footer/footer.component\";\n\n\n@Component({\n  selector: 'app-blank-layout',\n  imports: [RouterOutlet, NavbarComponent, FooterComponent],\n  templateUrl: './blank-layout.component.html',\n  styleUrl: './blank-layout.component.scss'\n})\nexport class BlankLayoutComponent {\n \n\n}\n\n    \n\n    \n        \n\n    \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AllOrderComponent', 'selector': 'app-all-oreder'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotpasswordComponent', 'selector': 'app-forgotpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'WishListComponent', 'selector': 'app-wish-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BlankLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Brand.html":{"url":"interfaces/Brand.html","title":"interface - Brand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Brand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/iorders.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Iorders {\n  shippingAddress: ShippingAddress\n  taxPrice: number\n  shippingPrice: number\n  totalOrderPrice: number\n  paymentMethodType: string\n  isPaid: boolean\n  isDelivered: boolean\n  _id: string\n  user: User\n  cartItems: CartItem[]\n  paidAt: string\n  createdAt: string\n  updatedAt: string\n  id: number\n}\n\nexport interface ShippingAddress {\n  details: string\n  phone: string\n  city: string\n}\n\nexport interface User {\n  _id: string\n  name: string\n  email: string\n  phone: string\n}\n\nexport interface CartItem {\n  count: number\n  _id: string\n  product: Product\n  price: number\n}\n\nexport interface Product {\n  subcategory: Subcategory[]\n  ratingsQuantity: number\n  _id: string\n  title: string\n  imageCover: string\n  category: Category\n  brand: Brand\n  ratingsAverage: number\n  id: string\n}\n\nexport interface Subcategory {\n  _id: string\n  name: string\n  slug: string\n  category: string\n}\n\nexport interface Category {\n  _id: string\n  name: string\n  slug: string\n  image: string\n}\n\nexport interface Brand {\n  _id: string\n  name: string\n  slug: string\n  image: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BrandsComponent.html":{"url":"components/BrandsComponent.html","title":"component - BrandsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BrandsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/brands/brands.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-brands\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./brands.component.html\n            \n\n\n\n            \n                styleUrl\n                ./brands.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                brands\n                            \n                            \n                                    Private\n                                    Readonly\n                                brandsService\n                            \n                            \n                                currentData\n                            \n                            \n                                isToggelLightBox\n                            \n                            \n                                subBrands\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                currentItem\n                            \n                            \n                                getBrandsData\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                stopPop\n                            \n                            \n                                toggelightBox\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        currentItem\n                        \n                    \n                \n            \n            \n                \ncurrentItem(brand: Ibrands)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/brands/brands.component.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                brand\n                                            \n                                                            Ibrands\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBrandsData\n                        \n                    \n                \n            \n            \n                \ngetBrandsData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/brands/brands.component.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/brands/brands.component.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/brands/brands.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stopPop\n                        \n                    \n                \n            \n            \n                \nstopPop($event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/brands/brands.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                $event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggelightBox\n                        \n                    \n                \n            \n            \n                \ntoggelightBox()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/brands/brands.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        brands\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/brands/brands.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        brandsService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(BrandsService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/brands/brands.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Ibrands\n\n                    \n                \n                \n                    \n                        Default value : {} as Ibrands\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/brands/brands.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isToggelLightBox\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/brands/brands.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subBrands\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/brands/brands.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Ibrands } from './../../shared/interfaces/ibrands';\nimport { Component, inject, OnDestroy, OnInit, signal, WritableSignal } from '@angular/core';\nimport { BrandsService } from '../../core/services/brands/brands.service';\nimport { unsubscribe } from 'diagnostics_channel';\nimport { Subscription } from 'rxjs';\n\n\n@Component({\n  selector: 'app-brands',\n  imports: [],\n  templateUrl: './brands.component.html',\n  styleUrl: './brands.component.scss'\n})\nexport class BrandsComponent implements OnInit,OnDestroy {\n  private readonly brandsService = inject(BrandsService);\n  brands :WritableSignal =signal([]);\n  isToggelLightBox:boolean= false;\n  currentData:Ibrands={} as Ibrands;\n  subBrands:Subscription = new Subscription()\n\n\n\n  ngOnInit(): void {\n    this.getBrandsData();\n    \n  }\n\n  getBrandsData():void{\n   this.subBrands= this.brandsService.getAllBrands().subscribe({\n      next:(res)=>{\n      \n        this.brands.set(res.data)\n      },\n    \n    })\n  }\n\n  toggelightBox():void{\n    this.isToggelLightBox= !this.isToggelLightBox;\n\n  }\n  stopPop($event:Event):void{\n    $event.stopPropagation();\n\n  }\n  currentItem(brand:Ibrands):void{\n    this.currentData= brand ;\n\n  }\n\n\nngOnDestroy(): void {\n this.subBrands.unsubscribe()\n}\n\n\n}\n\n    \n\n    \n        \n\n    Brands\n    \n        @for (brand of brands(); track brand._id) {\n        \n            \n                \n                    \n                \n                \n                     {{brand.name}}\n                \n            \n        \n\n        }\n\n    \n\n    @if(isToggelLightBox){\n    \n\n        \n            \n\n                \n                     {{currentData.name}}\n                \n                \n                    \n                \n            \n        \n\n\n\n    \n\n    }\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Brands            @for (brand of brands(); track brand._id) {                                                                                                             {{brand.name}}                                            }        @if(isToggelLightBox){                                                             {{currentData.name}}                                                                                                }'\n    var COMPONENTS = [{'name': 'AllOrderComponent', 'selector': 'app-all-oreder'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotpasswordComponent', 'selector': 'app-forgotpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'WishListComponent', 'selector': 'app-wish-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BrandsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BrandsService.html":{"url":"injectables/BrandsService.html","title":"injectable - BrandsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BrandsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/brands/brands.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllBrands\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/brands/brands.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAllBrands\n                        \n                    \n                \n            \n            \n                \ngetAllBrands()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/brands/brands.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BrandsService {\n\n  constructor(private httpClient: HttpClient) { }\n\n\n  getAllBrands():Observable{\n    return this.httpClient.get(`${environment.baseUrl}/api/v1/brands`);\n\n  }\n\n\n\n\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CartComponent.html":{"url":"components/CartComponent.html","title":"component - CartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/cart/cart.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-cart\n            \n\n\n            \n                imports\n                \n                            CurrencyPipe\n                            RouterLink\n                            SweetAlert2Module\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./cart.component.html\n            \n\n\n\n            \n                styleUrl\n                ./cart.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cartDetails\n                            \n                            \n                                    Private\n                                    Readonly\n                                cartService\n                            \n                            \n                                subCart\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                claerCart\n                            \n                            \n                                getCartData\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removeItem\n                            \n                            \n                                updateCount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        claerCart\n                        \n                    \n                \n            \n            \n                \nclaerCart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/cart/cart.component.ts:78\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCartData\n                        \n                    \n                \n            \n            \n                \ngetCartData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/cart/cart.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/cart/cart.component.ts:108\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/cart/cart.component.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/cart/cart.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateCount\n                        \n                    \n                \n            \n            \n                \nupdateCount(id: string, count: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/cart/cart.component.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                count\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cartDetails\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Icart\n\n                    \n                \n                \n                    \n                        Default value : {} as Icart\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/cart/cart.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        cartService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CartService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/cart/cart.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subCart\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/cart/cart.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Icart } from './../../shared/interfaces/icart';\nimport { Component, inject, OnDestroy, OnInit } from '@angular/core';\nimport { CartService } from '../../core/services/cart/cart.service';\nimport { CurrencyPipe } from '@angular/common';\nimport { RouterLink } from '@angular/router';\nimport { SweetAlert2Module } from '@sweetalert2/ngx-sweetalert2';\nimport Swal from 'sweetalert2';\nimport { Subscription } from 'rxjs';\n@Component({\n  selector: 'app-cart',\n  imports: [CurrencyPipe,RouterLink,SweetAlert2Module],\n  templateUrl: './cart.component.html',\n  styleUrl: './cart.component.scss'\n})\nexport class CartComponent implements OnInit ,OnDestroy {\n  cartDetails:Icart={} as Icart ;\n  private readonly cartService = inject(CartService);\n   subCart:Subscription=new Subscription();\n\n\n  ngOnInit(): void {\n    this.getCartData();\n    \n  }\n getCartData():void{\n this.subCart= this.cartService.getLogedUserCart().subscribe({\n    next:(res)=>{\n     \n      this.cartDetails=res.data;\n    }\n  })\n }\n removeItem(id:string):void{\n  Swal.fire({\n    title: \"Are you sure?\",\n    text: \"You won't be able to revert this!\",\n    icon: \"warning\",\n    showCancelButton: true,\n    confirmButtonColor: \"#3085d6\",\n    cancelButtonColor: \"#d33\",\n    confirmButtonText: \"Yes, delete it!\"\n  }).then((result) => {\n    if (result.isConfirmed) {\n    this.subCart=  this.cartService.removeSpecifiCart(id).subscribe({\n        next:(res)=>{\n         \n          this.cartDetails= res.data;\n          this.cartService.cartNumber.set(res.numOfCartItems);\n\n\n        }\n      }\n    )\n      Swal.fire({\n        title: \"Deleted!\",\n        text: \"Your file has been deleted.\",\n        icon: \"success\"\n      });\n    }\n  });\n\n  \n\n }\n\n updateCount(id:string , count:number):void{\n  this.cartService.updateProductQuantity(id,count).subscribe({\n    next:(res)=>{\n    \n      this.cartDetails=res.data;\n    }\n  })\n  \n\n }\n\n claerCart():void{\n  Swal.fire({\n    title: \"Are you sure?\",\n    text: \"You won't be able to revert this!\",\n    icon: \"warning\",\n    showCancelButton: true,\n    confirmButtonColor: \"#3085d6\",\n    cancelButtonColor: \"#d33\",\n    confirmButtonText: \"Yes, delete it!\"\n  }).then((result) => {\n    if (result.isConfirmed) {\n    this.subCart=  this.cartService.clearCart().subscribe({\n        next:(res)=>{\n          if(res.message==\"success\"){\n            this.cartDetails={} as Icart;\n            this.cartService.cartNumber.set(0);\n          }\n        }\n      })\n\n      Swal.fire({\n        title: \"Deleted!\",\n        text: \"Your file has been deleted.\",\n        icon: \"success\"\n      });\n    }\n  });\n\n }\n\nngOnDestroy(): void {\n  this.subCart.unsubscribe();\n}\n\n\n\n\n\n}\n\n    \n\n    \n        @if(cartDetails.totalCartPrice){\n    \n        Shop Cart\n    \n        \n           \n             Total Cart Price: {{cartDetails.totalCartPrice | currency:'GBP'}}\n            Clear Cart\n           \n    \n          @for (product of cartDetails.products; track product.product.id) {\n            \n                \n                    \n            \n                \n                \n                    \n                        Title: {{product.product.title}}\n                         Price: {{product.price | currency:'GBP' }} \n                        Remove\n    \n                    \n    \n                    \n                   \n                    \n                        \n                        {{product.count}}\n                        \n    \n                    \n    \n                \n            \n          }\n          CheckOut\n    \n        \n    \n}\n@else {\n    \n\n        \n            \n                Empty products\n            \n        \n    \n\n}\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if(cartDetails.totalCartPrice){            Shop Cart                                    Total Cart Price: {{cartDetails.totalCartPrice | currency:\\'GBP\\'}}            Clear Cart                         @for (product of cartDetails.products; track product.product.id) {                                                                                                                                        Title: {{product.product.title}}                         Price: {{product.price | currency:\\'GBP\\' }}                         Remove                                                                                                                                       {{product.count}}                                                                                          }          CheckOut                }@else {                                        Empty products                        }'\n    var COMPONENTS = [{'name': 'AllOrderComponent', 'selector': 'app-all-oreder'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotpasswordComponent', 'selector': 'app-forgotpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'WishListComponent', 'selector': 'app-wish-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CartItem.html":{"url":"interfaces/CartItem.html","title":"interface - CartItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CartItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/iorders.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            count\n                                        \n                                \n                                \n                                        \n                                            price\n                                        \n                                \n                                \n                                        \n                                            product\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        product\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        product:         Product\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Product\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Iorders {\n  shippingAddress: ShippingAddress\n  taxPrice: number\n  shippingPrice: number\n  totalOrderPrice: number\n  paymentMethodType: string\n  isPaid: boolean\n  isDelivered: boolean\n  _id: string\n  user: User\n  cartItems: CartItem[]\n  paidAt: string\n  createdAt: string\n  updatedAt: string\n  id: number\n}\n\nexport interface ShippingAddress {\n  details: string\n  phone: string\n  city: string\n}\n\nexport interface User {\n  _id: string\n  name: string\n  email: string\n  phone: string\n}\n\nexport interface CartItem {\n  count: number\n  _id: string\n  product: Product\n  price: number\n}\n\nexport interface Product {\n  subcategory: Subcategory[]\n  ratingsQuantity: number\n  _id: string\n  title: string\n  imageCover: string\n  category: Category\n  brand: Brand\n  ratingsAverage: number\n  id: string\n}\n\nexport interface Subcategory {\n  _id: string\n  name: string\n  slug: string\n  category: string\n}\n\nexport interface Category {\n  _id: string\n  name: string\n  slug: string\n  image: string\n}\n\nexport interface Brand {\n  _id: string\n  name: string\n  slug: string\n  image: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CartService.html":{"url":"injectables/CartService.html","title":"injectable - CartService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CartService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/cart/cart.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cartNumber\n                            \n                            \n                                    Private\n                                    Readonly\n                                id\n                            \n                            \n                                    Private\n                                myToken\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addProductToCart\n                            \n                            \n                                clearCart\n                            \n                            \n                                getLogedUserCart\n                            \n                            \n                                removeSpecifiCart\n                            \n                            \n                                updateProductQuantity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/cart/cart.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addProductToCart\n                        \n                    \n                \n            \n            \n                \naddProductToCart(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cart/cart.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearCart\n                        \n                    \n                \n            \n            \n                \nclearCart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cart/cart.service.ts:87\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLogedUserCart\n                        \n                    \n                \n            \n            \n                \ngetLogedUserCart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cart/cart.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeSpecifiCart\n                        \n                    \n                \n            \n            \n                \nremoveSpecifiCart(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cart/cart.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateProductQuantity\n                        \n                    \n                \n            \n            \n                \nupdateProductQuantity(id: string, nuwCount: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cart/cart.service.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                nuwCount\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cartNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/cart/cart.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PLATFORM_ID)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/cart/cart.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        myToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/cart/cart.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable, PLATFORM_ID, signal, WritableSignal } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport { isPlatformBrowser } from '@angular/common';\nimport { Icart } from '../../../shared/interfaces/icart';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n  private readonly id = inject(PLATFORM_ID);\n\n cartNumber:WritableSignal = signal(0);\n\n\n  //  myToken: any =localStorage.getItem('userToken');\n  private myToken: string = '';\n  constructor(private httpClient: HttpClient) {\n    \n    if (isPlatformBrowser(this.id)) {\n      const token = localStorage.getItem('userToken');\n      this.myToken = token ? token : ''; // تجنب تمرير null أو undefined\n    }\n\n   }\n\n\n\n\n\n  addProductToCart(id: string): Observable {\n    return this.httpClient.post(`${environment.baseUrl}/api/v1/cart`,\n      {\n        \"productId\": id\n      }, \n      // {\n      //   headers:{\n      //     token: this.myToken\n  \n      //   }\n      // }\n    )\n  }\n\n  getLogedUserCart(): Observable {\n    return this.httpClient.get(`${environment.baseUrl}/api/v1/cart`,\n      // {\n      //   headers:{\n      //     token: this.myToken\n  \n      //   }\n      // }\n    )\n\n  }\n\n  removeSpecifiCart(id: string): Observable {\n    return this.httpClient.delete(`${environment.baseUrl}/api/v1/cart/${id}`,\n      // {\n      //   headers:{\n      //     token: this.myToken\n  \n      //   }\n      // }\n    )\n  }\n\n  updateProductQuantity(id: string, nuwCount: number): Observable {\n    return this.httpClient.put(`${environment.baseUrl}/api/v1/cart/${id}`,\n      {\n\n        \"count\": nuwCount\n\n      },\n      // {\n      //   headers:{\n      //     token: this.myToken\n  \n      //   }\n      // }\n    )\n     \n  }\n\n   clearCart(): Observable {\n    return this.httpClient.delete(`${environment.baseUrl}/api/v1/cart`,\n      // {\n      //   headers:{\n      //     token: this.myToken\n  \n      //   }\n      // }\n    )\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategoriesComponent.html":{"url":"components/CategoriesComponent.html","title":"component - CategoriesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CategoriesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/categories/categories.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-categories\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./categories.component.html\n            \n\n\n\n            \n                styleUrl\n                ./categories.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categories\n                            \n                            \n                                    Private\n                                    Readonly\n                                categoriesService\n                            \n                            \n                                    Private\n                                    Readonly\n                                ngxSpinnerService\n                            \n                            \n                                subCategory\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCategoriesData\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCategoriesData\n                        \n                    \n                \n            \n            \n                \ngetCategoriesData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/categories/categories.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/categories/categories.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/categories/categories.component.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/categories/categories.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        categoriesService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CategoriesService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/categories/categories.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        ngxSpinnerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(NgxSpinnerService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/categories/categories.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subCategory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/categories/categories.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, OnDestroy, OnInit, signal, WritableSignal } from '@angular/core';\nimport { CategoriesService } from '../../core/services/categories/categories.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { Icategories } from '../../shared/interfaces/icategories';\nimport { Subscription } from 'rxjs';\nimport { tick } from '@angular/core/testing';\n\n\n@Component({\n  selector: 'app-categories',\n  imports: [],\n  templateUrl: './categories.component.html',\n  styleUrl: './categories.component.scss'\n})\nexport class CategoriesComponent implements OnInit ,OnDestroy {\n  private readonly categoriesService= inject(CategoriesService);\n   private readonly ngxSpinnerService= inject(NgxSpinnerService);\n   categories :WritableSignal =signal([]);\n   subCategory:Subscription=new Subscription();\n\n   ngOnInit(): void {\n    this.getCategoriesData();\n     \n   }\n   getCategoriesData():void{\n\n    this.ngxSpinnerService.show()\n   this.subCategory= this.categoriesService.getAllGategories().subscribe({\n      next:(res)=>{\n     \n        this.categories.set(res.data);\n\n        this.ngxSpinnerService.hide()\n        \n      }\n\n    })\n  }\n\n\n  ngOnDestroy(): void {\n    this.subCategory.unsubscribe();\n  }\n\n\n}\n\n    \n\n    \n        \n\n     Category\n    \n        @for (cat of categories(); track cat._id) {\n        \n            \n                \n                    \n                \n                \n                     {{cat.name}}\n                \n            \n        \n\n        }\n\n    \n\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '     Category            @for (cat of categories(); track cat._id) {                                                                                                             {{cat.name}}                                            }      '\n    var COMPONENTS = [{'name': 'AllOrderComponent', 'selector': 'app-all-oreder'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotpasswordComponent', 'selector': 'app-forgotpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'WishListComponent', 'selector': 'app-wish-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CategoriesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoriesService.html":{"url":"injectables/CategoriesService.html","title":"injectable - CategoriesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CategoriesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/categories/categories.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllGategories\n                            \n                            \n                                getSpecificGategories\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/categories/categories.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAllGategories\n                        \n                    \n                \n            \n            \n                \ngetAllGategories()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/categories/categories.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSpecificGategories\n                        \n                    \n                \n            \n            \n                \ngetSpecificGategories(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/categories/categories.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoriesService  {\n\n  constructor(private httpClient:HttpClient) { }\n  getAllGategories():Observable{\n    \n   return  this.httpClient.get('https://ecommerce.routemisr.com/api/v1/categories')\n  }\n  getSpecificGategories(id:string):Observable{\n    return  this.httpClient.get(`https://ecommerce.routemisr.com/api/v1/categories/${id}`)\n   }\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Category.html":{"url":"interfaces/Category.html","title":"interface - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/icart.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Icart {\n  _id: string;\n  cartOwner: string;\n  products: Product2[];\n  createdAt: string;\n  updatedAt: string;\n  __v: number;\n  totalCartPrice: number;\n}\n\nexport interface Product2 {\n  count: number;\n  _id: string;\n  product: Product;\n  price: number;\n}\n\nexport interface Product {\n  subcategory: Subcategory[];\n  _id: string;\n  title: string;\n  quantity: number;\n  imageCover: string;\n  category: Category;\n  brand: Category;\n  ratingsAverage: number;\n  id: string;\n}\n\nexport interface Category {\n  _id: string;\n  name: string;\n  slug: string;\n  image: string;\n}\n\nexport interface Subcategory {\n  _id: string;\n  name: string;\n  slug: string;\n  category: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Category-1.html":{"url":"interfaces/Category-1.html","title":"interface - Category-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/iorders.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Iorders {\n  shippingAddress: ShippingAddress\n  taxPrice: number\n  shippingPrice: number\n  totalOrderPrice: number\n  paymentMethodType: string\n  isPaid: boolean\n  isDelivered: boolean\n  _id: string\n  user: User\n  cartItems: CartItem[]\n  paidAt: string\n  createdAt: string\n  updatedAt: string\n  id: number\n}\n\nexport interface ShippingAddress {\n  details: string\n  phone: string\n  city: string\n}\n\nexport interface User {\n  _id: string\n  name: string\n  email: string\n  phone: string\n}\n\nexport interface CartItem {\n  count: number\n  _id: string\n  product: Product\n  price: number\n}\n\nexport interface Product {\n  subcategory: Subcategory[]\n  ratingsQuantity: number\n  _id: string\n  title: string\n  imageCover: string\n  category: Category\n  brand: Brand\n  ratingsAverage: number\n  id: string\n}\n\nexport interface Subcategory {\n  _id: string\n  name: string\n  slug: string\n  category: string\n}\n\nexport interface Category {\n  _id: string\n  name: string\n  slug: string\n  image: string\n}\n\nexport interface Brand {\n  _id: string\n  name: string\n  slug: string\n  image: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Category-2.html":{"url":"interfaces/Category-2.html","title":"interface - Category-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/iproduct.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Iproduct {\n  sold: number;\n  images: string[];\n  subcategory: Subcategory[];\n  ratingsQuantity: number;\n  _id: string;\n  title: string;\n  slug: string;\n  description: string;\n  quantity: number;\n  price: number;\n  imageCover: string;\n  category: Category;\n  brand: Category;\n  ratingsAverage: number;\n  createdAt: string;\n  updatedAt: string;\n  id: string;\n}\n\ninterface Category {\n  _id: string;\n  name: string;\n  slug: string;\n  image: string;\n}\n\ninterface Subcategory {\n  _id: string;\n  name: string;\n  slug: string;\n  category: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Category-3.html":{"url":"interfaces/Category-3.html","title":"interface - Category-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/iwish.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Iwish {\n  sold: number;\n  images: string[];\n  subcategory: Subcategory[];\n  ratingsQuantity: number;\n  _id: string;\n  title: string;\n  slug: string;\n  description: string;\n  quantity: number;\n  price: number;\n  imageCover: string;\n  category: Category;\n  brand: Category;\n  ratingsAverage: number;\n  createdAt: string;\n  updatedAt: string;\n  __v: number;\n  id: string;\n}\n\nexport interface Category {\n  _id: string;\n  name: string;\n  slug: string;\n  image: string;\n}\n\nexport interface Subcategory {\n  _id: string;\n  name: string;\n  slug: string;\n  category: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckoutComponent.html":{"url":"components/CheckoutComponent.html","title":"component - CheckoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CheckoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/checkout/checkout.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-checkout\n            \n\n\n            \n                imports\n                \n                            ReactiveFormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./checkout.component.html\n            \n\n\n\n            \n                styleUrl\n                ./checkout.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                activatedRoute\n                            \n                            \n                                cartId\n                            \n                            \n                                    Private\n                                    Readonly\n                                cartService\n                            \n                            \n                                checkOutForm\n                            \n                            \n                                isloading\n                            \n                            \n                                isSuccess\n                            \n                            \n                                    Private\n                                    Readonly\n                                ordersService\n                            \n                            \n                                subOrder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cashPayMent\n                            \n                            \n                                getCartId\n                            \n                            \n                                initForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                submitForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cashPayMent\n                        \n                    \n                \n            \n            \n                \ncashPayMent()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/checkout/checkout.component.ts:67\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCartId\n                        \n                    \n                \n            \n            \n                \ngetCartId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/checkout/checkout.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initForm\n                        \n                    \n                \n            \n            \n                \ninitForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/checkout/checkout.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/checkout/checkout.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitForm\n                        \n                    \n                \n            \n            \n                \nsubmitForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/checkout/checkout.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        activatedRoute\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/checkout/checkout.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cartId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/checkout/checkout.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        cartService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CartService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/checkout/checkout.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkOutForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/checkout/checkout.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isloading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/checkout/checkout.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/checkout/checkout.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        ordersService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(OrdersService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/checkout/checkout.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subOrder\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/checkout/checkout.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { OrdersService } from '../../core/services/orders/orders.service';\nimport { CartService } from '../../core/services/cart/cart.service';\nimport { Icart } from '../../shared/interfaces/icart';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-checkout',\n  imports: [ReactiveFormsModule],\n  templateUrl: './checkout.component.html',\n  styleUrl: './checkout.component.scss'\n})\nexport class CheckoutComponent implements OnInit {\n  private readonly activatedRoute=inject(ActivatedRoute);\n  private readonly ordersService = inject(OrdersService);\n  private readonly cartService =inject(CartService);\n  cartId:string='';\n  isloading:boolean=false;\n  checkOutForm!:FormGroup;\n  isSuccess:string='';\n   subOrder:Subscription=new Subscription();\n  \n\n ngOnInit(): void {\n  this.initForm();\n  this.getCartId();\n }\ninitForm():void{\n  this.checkOutForm= new FormGroup({\n    details: new FormControl(null,[Validators.required]),\n    phone:new FormControl(null,[Validators.required, Validators.pattern(/^01[0125][0-9]{8}$/)]),\n    city:new FormControl(null,[Validators.required])\n\n   })\n}\n\ngetCartId():void{\n this.subOrder= this.activatedRoute.paramMap.subscribe({\n    next:(param)=>{\n     \n     this.cartId = param.get('id')!\n    }\n  })\n}\n\n\n submitForm():void{\n  console.log(this.checkOutForm.value);\n this.subOrder= this.ordersService.checkOutPayMent(this.cartId,this.checkOutForm.value).subscribe({\n    next:(res)=>{\n      console.log(res);\n      if(res.status=='success'){\n        open(res.session.url,'_self');\n      }\n    },\n    error:(err)=>{\n      console.log(err)\n\n    }\n  })\n }\n\n\n\n cashPayMent():void{\n this.subOrder= this.ordersService.greateCashOrder(this.cartId,this.checkOutForm.value).subscribe({\n    next:(res)=>{\n      if(res.status=='success'){\n        this.isSuccess=res.status;\n        this.cartService.cartNumber.set(0);\n        \n      }\n\n    },\n    error:(err)=>{\n      console.log(\"errCash\",err);\n    }\n  })\n\n }\n\n}\n\n    \n\n    \n        \n\n    \n       Check Out\n    \n\n    \n        \n            @let detailsControl = checkOutForm.get('details');\n            details\n            \n            @if(detailsControl?.errors &&detailsControl?.touched ){\n            \n                \n                    \n                \n                Danger\n                \n                    \n                        @if(detailsControl?.getError(\"required\")){\n                        details is required\n                        }\n                    \n                \n            \n            }\n\n\n\n\n        \n        \n            @let phoneControl=checkOutForm.get('phone');\n            Phone\n            \n\n            @if(phoneControl?.errors &&phoneControl?.touched ){\n            \n                \n                    \n                \n                Danger\n                \n                    \n                        @if(phoneControl?.getError(\"required\")){\n                        Phone is Required\n                        }\n                        @else if(phoneControl?.getError(\"pattern\")){\n                         Enter Valid Phone\n                        }\n\n\n                    \n                \n            \n            }\n        \n        \n            @let cityControl=checkOutForm.get('city');\n            city\n            \n            @if( cityControl?.errors&&cityControl?.touched ){\n            \n                \n                    \n                \n                Danger\n                \n                    \n                        @if(cityControl?.getError(\"required\")){\n                        city is required\n                        }\n\n                    \n                \n            \n            }\n\n        \n        Online Payment\n            @if(isloading){\n            \n            } \n        \n         Cash Payment\n            @if(isloading){\n            \n            } \n        \n         \n        @if(isSuccess){\n            \n                {{isSuccess}}\n              \n              \n        } \n\n       \n\n\n\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '           Check Out                            @let detailsControl = checkOutForm.get(\\'details\\');            details                        @if(detailsControl?.errors &&detailsControl?.touched ){                                                                                Danger                                                            @if(detailsControl?.getError(\"required\")){                        details is required                        }                                                            }                            @let phoneControl=checkOutForm.get(\\'phone\\');            Phone                        @if(phoneControl?.errors &&phoneControl?.touched ){                                                                                Danger                                                            @if(phoneControl?.getError(\"required\")){                        Phone is Required                        }                        @else if(phoneControl?.getError(\"pattern\")){                         Enter Valid Phone                        }                                                            }                            @let cityControl=checkOutForm.get(\\'city\\');            city                        @if( cityControl?.errors&&cityControl?.touched ){                                                                                Danger                                                            @if(cityControl?.getError(\"required\")){                        city is required                        }                                                            }                Online Payment            @if(isloading){                        }                  Cash Payment            @if(isloading){                        }                          @if(isSuccess){                            {{isSuccess}}                                    }            '\n    var COMPONENTS = [{'name': 'AllOrderComponent', 'selector': 'app-all-oreder'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotpasswordComponent', 'selector': 'app-forgotpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'WishListComponent', 'selector': 'app-wish-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CheckoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DetailsComponent.html":{"url":"components/DetailsComponent.html","title":"component - DetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/details/details.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-details\n            \n\n\n            \n                imports\n                \n                            CarouselModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./details.component.html\n            \n\n\n\n            \n                styleUrl\n                ./details.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                activatedRoute\n                            \n                            \n                                    Private\n                                    Readonly\n                                cartService\n                            \n                            \n                                customOptions\n                            \n                            \n                                detailsProduct\n                            \n                            \n                                    Private\n                                    Readonly\n                                productsService\n                            \n                            \n                                subActive\n                            \n                            \n                                subBroduct\n                            \n                            \n                                    Private\n                                    Readonly\n                                toastrService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToCart\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addToCart\n                        \n                    \n                \n            \n            \n                \naddToCart(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/details/details.component.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/details/details.component.ts:95\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/details/details.component.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        activatedRoute\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/details/details.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        cartService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CartService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/details/details.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        customOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OwlOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    loop: true,\n    mouseDrag: true,\n    touchDrag: true,\n    pullDrag: false,\n    dots: true,\n    autoplay: true,\n    autoplayTimeout: 1000,\n    autoplayHoverPause: true,\n    navSpeed: 700,\n    navText: ['', ''],\n    responsive: {\n      0: {\n        items: 1,\n        nav: false\n      },\n      480: {\n        items: 1\n      },\n      768: {\n        items: 2\n      },\n      1024: {\n        items: 3\n      }\n    }\n  \n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/details/details.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        detailsProduct\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Iproduct | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/details/details.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        productsService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ProductsService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/details/details.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/details/details.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subBroduct\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/details/details.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        toastrService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ToastrService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/details/details.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ProductsService } from '../../core/services/products/products.service';\nimport { Iproduct } from '../../shared/interfaces/iproduct';\nimport { CarouselModule, OwlOptions } from 'ngx-owl-carousel-o';\nimport { CartService } from '../../core/services/cart/cart.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Subscription } from 'rxjs';\n\n\n@Component({\n  selector: 'app-details',\n  imports: [ CarouselModule ],\n  templateUrl: './details.component.html',\n  styleUrl: './details.component.scss'\n})\nexport class DetailsComponent implements OnInit ,OnDestroy {\n\n  private readonly activatedRoute=inject(ActivatedRoute);\n  private readonly productsService=inject(ProductsService);\n  private readonly cartService=inject(CartService)\n   private readonly toastrService = inject(ToastrService);\n     subBroduct:Subscription=new Subscription();\n     subActive:Subscription=new Subscription();\n\n  detailsProduct:Iproduct| null = null;\n  customOptions: OwlOptions = {\n    loop: true,\n    mouseDrag: true,\n    touchDrag: true,\n    pullDrag: false,\n    dots: true,\n    autoplay: true,\n    autoplayTimeout: 1000,\n    autoplayHoverPause: true,\n    navSpeed: 700,\n    navText: ['', ''],\n    responsive: {\n      0: {\n        items: 1,\n        nav: false\n      },\n      480: {\n        items: 1\n      },\n      768: {\n        items: 2\n      },\n      1024: {\n        items: 3\n      }\n    }\n  \n  }\n\n\n\n  ngOnInit(): void {\n   this.subActive= this.activatedRoute.paramMap.subscribe({\n      next:(p)=>{\n         let idPrduct=  p.get('id');\n\n        //call api \n        this.productsService.getSpecificProduct(idPrduct).subscribe({\n          next:(res)=>{\n          this.detailsProduct= res.data;\n          }\n        })\n\n\n      }\n    })\n\n    \n  }\n\n \n  addToCart(id: string): void {\n   this.subBroduct= this.cartService.addProductToCart(id).subscribe({\n      next: (res) => {\n       \n        if (res.status === \"success\") {\n          this.toastrService.success(res.message, 'Fresh Cart')\n          this.cartService.cartNumber.set(res.numOfCartItems);\n         \n        }\n\n      }\n    })\n\n\n  }\n\n\n  ngOnDestroy(): void {\n    this.subActive.unsubscribe();\n    this.subBroduct.unsubscribe();\n  }\n\n}\n\n    \n\n    \n        @if(detailsProduct){\n\n     Details Product\n    \n        \n            \n                @for (img of detailsProduct.images; track $index) {\n                \n                    \n                \n\n                }\n            \n\n        \n\n        \n            {{detailsProduct.title}}\n            {{detailsProduct.description}}\n            {{detailsProduct.category.name}}\n            \n                {{detailsProduct.price}} EGP\n                \n\n                    @for (num of [1,2,3,4,5].slice(0, detailsProduct.ratingsAverage); track $index) {\n\n                    \n                    }\n                    @if(detailsProduct.ratingsAverage %1 !==0){\n                    \n\n                    }\n                    {{detailsProduct.ratingsAverage}}\n                \n\n            \n            Add To\n                Card\n\n\n        \n    \n\n\n}\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if(detailsProduct){     Details Product                                        @for (img of detailsProduct.images; track $index) {                                                                    }                                        {{detailsProduct.title}}            {{detailsProduct.description}}            {{detailsProduct.category.name}}                            {{detailsProduct.price}} EGP                                    @for (num of [1,2,3,4,5].slice(0, detailsProduct.ratingsAverage); track $index) {                                        }                    @if(detailsProduct.ratingsAverage %1 !==0){                                        }                    {{detailsProduct.ratingsAverage}}                                        Add To                Card            }'\n    var COMPONENTS = [{'name': 'AllOrderComponent', 'selector': 'app-all-oreder'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotpasswordComponent', 'selector': 'app-forgotpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'WishListComponent', 'selector': 'app-wish-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FlowbiteService.html":{"url":"injectables/FlowbiteService.html","title":"injectable - FlowbiteService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FlowbiteService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/flowbite/flowbite.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadFlowbite\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(platformId: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/flowbite/flowbite.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadFlowbite\n                        \n                    \n                \n            \n            \n                \nloadFlowbite(callback: (flowbite: any) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/flowbite/flowbite.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                callback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { isPlatformBrowser } from '@angular/common';\nimport { Inject, Injectable, PLATFORM_ID } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FlowbiteService {\n\n  constructor(@Inject(PLATFORM_ID) private platformId: any) {}\n\n  loadFlowbite(callback: (flowbite: any) => void) {\n    if (isPlatformBrowser(this.platformId)) {\n      import('flowbite').then(flowbite => {\n        callback(flowbite);\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/footer/footer.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./footer.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  imports: [],\n  templateUrl: './footer.component.html',\n  styleUrl: './footer.component.scss'\n})\nexport class FooterComponent {\n\n}\n\n    \n\n    \n        \n    \n        Get The FreshCart App\n        \n            We Will Send You a Link, Open it on Your Phone to download the app\n        \n\n        \n        \n            \n            Share App Link\n        \n\n        \n\n        \n        \n            \n                Payment partners\n                \n                \n                \n                \n            \n\n            \n                Get Deliveries with FreshCart\n                \n                \n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Get The FreshCart App                    We Will Send You a Link, Open it on Your Phone to download the app                                                Share App Link                                                            Payment partners                                                                                                        Get Deliveries with FreshCart                                                        '\n    var COMPONENTS = [{'name': 'AllOrderComponent', 'selector': 'app-all-oreder'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotpasswordComponent', 'selector': 'app-forgotpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'WishListComponent', 'selector': 'app-wish-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgotpasswordComponent.html":{"url":"components/ForgotpasswordComponent.html","title":"component - ForgotpasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ForgotpasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/forgotpassword/forgotpassword.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forgotpassword\n            \n\n\n            \n                imports\n                \n                            ReactiveFormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./forgotpassword.component.html\n            \n\n\n\n            \n                styleUrl\n                ./forgotpassword.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                authService\n                            \n                            \n                                isloading\n                            \n                            \n                                resetPassword\n                            \n                            \n                                    Private\n                                    Readonly\n                                router\n                            \n                            \n                                step\n                            \n                            \n                                verifyCode\n                            \n                            \n                                verifyEmail\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resetPasswordSubmit\n                            \n                            \n                                verifyCodeSubmit\n                            \n                            \n                                verifyEmailSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        resetPasswordSubmit\n                        \n                    \n                \n            \n            \n                \nresetPasswordSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/forgotpassword/forgotpassword.component.ts:83\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifyCodeSubmit\n                        \n                    \n                \n            \n            \n                \nverifyCodeSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/forgotpassword/forgotpassword.component.ts:61\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifyEmailSubmit\n                        \n                    \n                \n            \n            \n                \nverifyEmailSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/forgotpassword/forgotpassword.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/forgotpassword/forgotpassword.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isloading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/forgotpassword/forgotpassword.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({\n    email:new FormControl(null,[Validators.required,Validators.email]),\n    password:new FormControl(null,[Validators.required,Validators.pattern(/^[A-z]\\w{7,}$/)])\n\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/forgotpassword/forgotpassword.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/forgotpassword/forgotpassword.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        step\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/forgotpassword/forgotpassword.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifyCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({\n    resetCode:new FormControl(null,[Validators.required,Validators.pattern(/^[0-9]{6}$/) ])\n\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/forgotpassword/forgotpassword.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifyEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({\n    email:new FormControl(null,[Validators.required,Validators.email]),\n\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/forgotpassword/forgotpassword.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { AuthService } from '../../core/services/auth/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-forgotpassword',\n  imports: [ReactiveFormsModule],\n  templateUrl: './forgotpassword.component.html',\n  styleUrl: './forgotpassword.component.scss'\n})\nexport class ForgotpasswordComponent {\n  private readonly authService= inject(AuthService);\n  private readonly router= inject(Router);\n  isloading:boolean = false;\n\n  step:number= 1;\n\n  verifyEmail:FormGroup=new FormGroup({\n    email:new FormControl(null,[Validators.required,Validators.email]),\n\n  })\n\n\n  \n  verifyCode:FormGroup=new FormGroup({\n    resetCode:new FormControl(null,[Validators.required,Validators.pattern(/^[0-9]{6}$/) ])\n\n  })\n\n\n  resetPassword:FormGroup=new FormGroup({\n    email:new FormControl(null,[Validators.required,Validators.email]),\n    password:new FormControl(null,[Validators.required,Validators.pattern(/^[A-z]\\w{7,}$/)])\n\n  });\n\n\n\n\n\n  verifyEmailSubmit():void{\n if(this.verifyEmail.valid){\nthis.isloading=true\n  this.authService.setEmailVerify( this.verifyEmail.value).subscribe({\n    next:(res)=>{\n  \n      if(res.statusMsg==='success'){\n        this.step=2;\n      }\n\n    },\n    error:(err)=>{\n\n    }\n  })\n }\n  }\n\n\n  verifyCodeSubmit():void{\n   if(this.verifyCode.valid){\n    this.isloading=true;\n    this.authService.setCodeVerify( this.verifyCode.value).subscribe({\n      next:(res)=>{\n       \n        if(res.status==='Success'){\n          this.step=3;\n        }\n\n      },\n      error:(err)=>{\n\n      }\n    })\n   }\n  }\n\n\n\n\n  \n  resetPasswordSubmit():void{\n      this.authService.setresetPassword(this.resetPassword.value).subscribe({\n        next:(res)=>{\n          console.log('successssssss',res);\n          let data= res.token;\n         localStorage.setItem('userToken',data);\n         this.authService.saveUserData();\n         this.router.navigate(['/home']);\n  \n        },\n        error:(err)=>{\n          console.log( 'errorrrrrrrrrrrrrrrrrrrrrrr',err.message)\n  \n        }\n      })\n    \n  }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n}\n\n    \n\n    \n        \n    Forgot Password \n\n  @if(step==1){\n    \n        \n            @let emailControl=verifyEmail.get('email');\n            Email\n            \n\n            @if(emailControl?.errors &&emailControl?.touched ){\n            \n                \n                    \n                \n                Danger\n                \n                    \n                        @if(emailControl?.getError(\"required\")){\n                        Email is Required\n                        }\n                        @else if(emailControl?.getError(\"email\")){\n                        Entar Valid Email\n                        }\n\n\n                    \n                \n            \n            }\n\n\n\n        \n        \n            verify Email\n            @if(isloading){\n                \n                }\n        \n    \n  }\n  @else if(step==2){\n    \n        \n            @let restControl=verifyCode.get('resetCode');\n            VerifyCode\n            \n            @if(restControl?.errors &&restControl?.touched ){\n            \n                \n                    \n                \n                Danger\n                \n                    \n                        @if(restControl?.getError(\"required\")){\n                        recode is Required\n                        }\n                        @else if(restControl?.getError(\"pattern\")){\n                         No Match\n                        }\n\n\n                    \n                \n            \n            }\n        \n        \n            verify Email\n            @if(isloading){\n                \n                }\n        \n    \n  }\n  @else if (step==3) {\n    \n\n        \n            @let resetEmailControl=resetPassword.get('email');\n            Email\n            \n\n            @if(resetEmailControl?.errors &&resetEmailControl?.touched ){\n            \n                \n                    \n                \n                Danger\n                \n                    \n                        @if(resetEmailControl?.getError(\"required\")){\n                        Email is Required\n                        }\n                        @else if(resetEmailControl?.getError(\"email\")){\n                        Entar Valid Email\n                        }\n\n\n                    \n                \n            \n            }\n\n\n\n        \n\n        \n            \n            New Password\n            \n            \n                \n                    \n                \n                Danger\n                \n                    \n                        @if(passwordControl?.getError(\"required\")){\n                        Password is Required\n                        }\n                        @else if(passwordControl?.getError(\"pattern\")){\n                         must start with a capital letter and be more than 7 characters long\n                        }\n\n\n                    \n                \n            \n            } -->\n        \n        \n            verify Email\n            @if(isloading){\n                \n                }\n        \n\n    \n  }\n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Forgot Password   @if(step==1){                        @let emailControl=verifyEmail.get(\\'email\\');            Email                        @if(emailControl?.errors &&emailControl?.touched ){                                                                                Danger                                                            @if(emailControl?.getError(\"required\")){                        Email is Required                        }                        @else if(emailControl?.getError(\"email\")){                        Entar Valid Email                        }                                                            }                            verify Email            @if(isloading){                                }              }  @else if(step==2){                        @let restControl=verifyCode.get(\\'resetCode\\');            VerifyCode                        @if(restControl?.errors &&restControl?.touched ){                                                                                Danger                                                            @if(restControl?.getError(\"required\")){                        recode is Required                        }                        @else if(restControl?.getError(\"pattern\")){                         No Match                        }                                                            }                            verify Email            @if(isloading){                                }              }  @else if (step==3) {                        @let resetEmailControl=resetPassword.get(\\'email\\');            Email                        @if(resetEmailControl?.errors &&resetEmailControl?.touched ){                                                                                Danger                                                            @if(resetEmailControl?.getError(\"required\")){                        Email is Required                        }                        @else if(resetEmailControl?.getError(\"email\")){                        Entar Valid Email                        }                                                            }                                        New Password                                                                                            Danger                                                            @if(passwordControl?.getError(\"required\")){                        Password is Required                        }                        @else if(passwordControl?.getError(\"pattern\")){                         must start with a capital letter and be more than 7 characters long                        }                                                            } -->                            verify Email            @if(isloading){                                }              }'\n    var COMPONENTS = [{'name': 'AllOrderComponent', 'selector': 'app-all-oreder'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotpasswordComponent', 'selector': 'app-forgotpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'WishListComponent', 'selector': 'app-wish-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForgotpasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/home.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n\n            \n                imports\n                \n                            CarouselModule\n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n            \n                styleUrl\n                ./home.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                CartService\n                            \n                            \n                                categories\n                            \n                            \n                                    Private\n                                    Readonly\n                                categoriesService\n                            \n                            \n                                customMainSlider\n                            \n                            \n                                customOptions\n                            \n                            \n                                    \n                                heartIcon\n                            \n                            \n                                    Private\n                                id\n                            \n                            \n                                    Private\n                                    Readonly\n                                ngxSpinnerService\n                            \n                            \n                                products\n                            \n                            \n                                    Private\n                                    Readonly\n                                productsService\n                            \n                            \n                                subBroduct\n                            \n                            \n                                subCart\n                            \n                            \n                                subCategory\n                            \n                            \n                                subWishList\n                            \n                            \n                                    Private\n                                    Readonly\n                                toastrService\n                            \n                            \n                                wishList\n                            \n                            \n                                    Private\n                                    Readonly\n                                wishlistService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToCart\n                            \n                            \n                                addToWish\n                            \n                            \n                                getCategoriesData\n                            \n                            \n                                getProductsData\n                            \n                            \n                                isProductInWishlist\n                            \n                            \n                                loadWishList\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                saveWishList\n                            \n                            \n                                toggleWishlist\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addToCart\n                        \n                    \n                \n            \n            \n                \naddToCart(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.component.ts:106\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addToWish\n                        \n                    \n                \n            \n            \n                \naddToWish(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.component.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCategoriesData\n                        \n                    \n                \n            \n            \n                \ngetCategoriesData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.component.ts:95\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProductsData\n                        \n                    \n                \n            \n            \n                \ngetProductsData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.component.ts:84\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isProductInWishlist\n                        \n                    \n                \n            \n            \n                \nisProductInWishlist(productId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.component.ts:138\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadWishList\n                        \n                    \n                \n            \n            \n                \nloadWishList()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.component.ts:149\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.component.ts:156\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.component.ts:78\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveWishList\n                        \n                    \n                \n            \n            \n                \nsaveWishList()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.component.ts:142\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleWishlist\n                        \n                    \n                \n            \n            \n                \ntoggleWishlist(productId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.component.ts:129\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        CartService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CartService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        categoriesService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CategoriesService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        customMainSlider\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OwlOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    loop: true,\n    mouseDrag: true,\n    touchDrag: true,\n    pullDrag: false,\n    dots: false,\n    autoplay: true,\n    autoplayTimeout: 2000,\n    autoplayHoverPause: true,\n    navSpeed: 700,\n    navText: ['', ''],\n    items: 1,\n    nav: false\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        customOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OwlOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    loop: true,\n    mouseDrag: true,\n    touchDrag: true,\n    pullDrag: false,\n    dots: true,\n    autoplay: true,\n    autoplayTimeout: 1000,\n    autoplayHoverPause: true,\n    navSpeed: 700,\n    navText: ['', ''],\n    responsive: {\n      0: { items: 1 },\n      400: { items: 2 },\n      740: { items: 3 },\n      940: { items: 6 }\n    },\n    nav: false\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        heartIcon\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('heartIcon')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PLATFORM_ID)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        ngxSpinnerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(NgxSpinnerService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        productsService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ProductsService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subBroduct\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subCart\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subCategory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subWishList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        toastrService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ToastrService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        wishList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        wishlistService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(WishlistService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, inject, OnDestroy, OnInit, PLATFORM_ID, signal, ViewChild, WritableSignal } from '@angular/core';\nimport { ProductsService } from '../../core/services/products/products.service';\nimport { Iproduct } from '../../shared/interfaces/iproduct';\nimport { CategoriesService } from '../../core/services/categories/categories.service';\nimport { CarouselModule, OwlOptions } from 'ngx-owl-carousel-o';\nimport { Icategories } from '../../shared/interfaces/icategories';\nimport { RouterLink } from '@angular/router';\nimport { CartService } from '../../core/services/cart/cart.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { Subscription } from 'rxjs';\nimport { WishlistService } from '../../core/services/wishList/wishlist.service';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Component({\n  selector: 'app-home',\n  imports: [CarouselModule, RouterLink],\n  templateUrl: './home.component.html',\n  styleUrl: './home.component.scss'\n})\nexport class HomeComponent implements OnInit, OnDestroy {\n\n  private readonly productsService = inject(ProductsService);\n  private readonly categoriesService = inject(CategoriesService);\n  private readonly CartService = inject(CartService);\n  private readonly wishlistService = inject(WishlistService);\n  private readonly toastrService = inject(ToastrService);\n  private readonly ngxSpinnerService = inject(NgxSpinnerService);\n  private id = inject(PLATFORM_ID);\n\n  subBroduct: Subscription = new Subscription();\n  subCart: Subscription = new Subscription();\n  subCategory: Subscription = new Subscription();\n  subWishList: Subscription = new Subscription();\n\n  products: WritableSignal = signal([]);\n  categories: WritableSignal = signal([]);\n  wishList: Set = new Set(); // استخدام Set بدلاً من مصفوفة لتحسين الأداء\n\n  @ViewChild('heartIcon') heartIcon!: ElementRef;\n\n  customMainSlider: OwlOptions = {\n    loop: true,\n    mouseDrag: true,\n    touchDrag: true,\n    pullDrag: false,\n    dots: false,\n    autoplay: true,\n    autoplayTimeout: 2000,\n    autoplayHoverPause: true,\n    navSpeed: 700,\n    navText: ['', ''],\n    items: 1,\n    nav: false\n  };\n\n  customOptions: OwlOptions = {\n    loop: true,\n    mouseDrag: true,\n    touchDrag: true,\n    pullDrag: false,\n    dots: true,\n    autoplay: true,\n    autoplayTimeout: 1000,\n    autoplayHoverPause: true,\n    navSpeed: 700,\n    navText: ['', ''],\n    responsive: {\n      0: { items: 1 },\n      400: { items: 2 },\n      740: { items: 3 },\n      940: { items: 6 }\n    },\n    nav: false\n  };\n\n  ngOnInit(): void {\n    this.getProductsData();\n    this.getCategoriesData();\n    this.loadWishList(); \n  }\n\n  getProductsData(): void {\n    this.ngxSpinnerService.show();\n    this.subBroduct = this.productsService.getAllProduct().subscribe({\n      next: (res) => {\n        this.products.set(res.data);\n        this.ngxSpinnerService.hide();\n      },\n      \n    });\n  }\n\n  getCategoriesData(): void {\n    this.ngxSpinnerService.show();\n    this.subCategory = this.categoriesService.getAllGategories().subscribe({\n      next: (res) => {\n        this.categories.set(res.data);\n        this.ngxSpinnerService.hide();\n      },\n    \n    });\n  }\n\n  addToCart(id: string): void {\n    this.subCart = this.CartService.addProductToCart(id).subscribe({\n      next: (res) => {\n        if (res.status === \"success\") {\n          this.toastrService.success(res.message, 'Fresh Cart');\n          this.CartService.cartNumber.set(res.numOfCartItems);\n        }\n      },\n \n    });\n  }\n\n  addToWish(id: string): void {\n    this.subWishList = this.wishlistService.addProductToWishList(id).subscribe({\n      next: (res) => {\n        if (res.status === \"success\") {\n          this.toastrService.success(res.message, 'Fresh Cart');\n          this.toggleWishlist(id); // تحديث الحالة\n        }\n      }\n    });\n  }\n\n  toggleWishlist(productId: string): void {\n    if (this.wishList.has(productId)) {\n      this.wishList.delete(productId);\n    } else {\n      this.wishList.add(productId);\n    }\n    this.saveWishList();\n  }\n\n  isProductInWishlist(productId: string): boolean {\n    return this.wishList.has(productId);\n  }\n\n  saveWishList(): void {\n    if(isPlatformBrowser(this.id)){\n      localStorage.setItem('wishList', JSON.stringify(Array.from(this.wishList)));\n    }\n\n  }\n\n  loadWishList(): void {\n    const storedWishlist = localStorage.getItem('wishList');\n    if (storedWishlist) {\n      this.wishList = new Set(JSON.parse(storedWishlist));\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subBroduct.unsubscribe();\n    this.subCart.unsubscribe();\n    this.subCategory.unsubscribe();\n    this.subWishList.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n    \n    \n        \n            \n                 \n                 \n                 \n                 \n                 \n                 \n            \n\n        \n        \n            \n            \n        \n\n\n    \n\n\n\n    Popular Categories\n    \n\n        @for (cat of categories(); track cat._id) {\n        \n            \n                \n                {{cat.name}}\n            \n        \n        }\n\n    \n\n\n\n\n    Popular Products\n    \n        @for (product of products().slice(0,12); track product.id) {\n        \n            \n                \n                    \n                \n                \n                     {{product.category.name}}\n                     {{product.title.split(\" \",2).join(' ')}}\n                  \n                   \n                    \n                        {{product.price}} EGP\n                        \n                            @for (num of [1,2,3,4,5].slice(0, product.ratingsAverage); track $index) {\n                          \n                                 \n                               }\n                               @if(product.ratingsAverage %1 !==0){\n                                  \n         \n                               }\n                            {{product.ratingsAverage}}\n                        \n                    \n                \n            \n          \n            \n          \n            Add To Card\n        \n        }\n\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                      Popular Categories            @for (cat of categories(); track cat._id) {                                                    {{cat.name}}                            }        Popular Products            @for (product of products().slice(0,12); track product.id) {                                                                                                             {{product.category.name}}                     {{product.title.split(\" \",2).join(\\' \\')}}                                                                                 {{product.price}} EGP                                                    @for (num of [1,2,3,4,5].slice(0, product.ratingsAverage); track $index) {                                                                                          }                               @if(product.ratingsAverage %1 !==0){                                                                          }                            {{product.ratingsAverage}}                                                                                                                    Add To Card                }    '\n    var COMPONENTS = [{'name': 'AllOrderComponent', 'selector': 'app-all-oreder'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotpasswordComponent', 'selector': 'app-forgotpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'WishListComponent', 'selector': 'app-wish-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Ibrands.html":{"url":"interfaces/Ibrands.html","title":"interface - Ibrands","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Ibrands\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/ibrands.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Ibrands  {\n  _id: string;\n  name: string;\n  slug: string;\n  image: string;\n  createdAt: string;\n  updatedAt: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Icart.html":{"url":"interfaces/Icart.html","title":"interface - Icart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Icart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/icart.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            __v\n                                        \n                                \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            cartOwner\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            products\n                                        \n                                \n                                \n                                        \n                                            totalCartPrice\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        __v\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        __v:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cartOwner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cartOwner:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        products\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        products:     Product2[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Product2[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalCartPrice\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalCartPrice:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Icart {\n  _id: string;\n  cartOwner: string;\n  products: Product2[];\n  createdAt: string;\n  updatedAt: string;\n  __v: number;\n  totalCartPrice: number;\n}\n\nexport interface Product2 {\n  count: number;\n  _id: string;\n  product: Product;\n  price: number;\n}\n\nexport interface Product {\n  subcategory: Subcategory[];\n  _id: string;\n  title: string;\n  quantity: number;\n  imageCover: string;\n  category: Category;\n  brand: Category;\n  ratingsAverage: number;\n  id: string;\n}\n\nexport interface Category {\n  _id: string;\n  name: string;\n  slug: string;\n  image: string;\n}\n\nexport interface Subcategory {\n  _id: string;\n  name: string;\n  slug: string;\n  category: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Icategories.html":{"url":"interfaces/Icategories.html","title":"interface - Icategories","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Icategories\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/icategories.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Icategories {\n  _id: string;\n  name: string;\n  slug: string;\n  image: string;\n  createdAt: string;\n  updatedAt: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Iorders.html":{"url":"interfaces/Iorders.html","title":"interface - Iorders","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Iorders\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/iorders.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            cartItems\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            isDelivered\n                                        \n                                \n                                \n                                        \n                                            isPaid\n                                        \n                                \n                                \n                                        \n                                            paidAt\n                                        \n                                \n                                \n                                        \n                                            paymentMethodType\n                                        \n                                \n                                \n                                        \n                                            shippingAddress\n                                        \n                                \n                                \n                                        \n                                            shippingPrice\n                                        \n                                \n                                \n                                        \n                                            taxPrice\n                                        \n                                \n                                \n                                        \n                                            totalOrderPrice\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cartItems\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cartItems:         CartItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CartItem[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isDelivered\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isDelivered:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isPaid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isPaid:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        paidAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        paidAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        paymentMethodType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        paymentMethodType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shippingAddress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        shippingAddress:         ShippingAddress\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ShippingAddress\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shippingPrice\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        shippingPrice:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        taxPrice\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        taxPrice:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalOrderPrice\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalOrderPrice:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Iorders {\n  shippingAddress: ShippingAddress\n  taxPrice: number\n  shippingPrice: number\n  totalOrderPrice: number\n  paymentMethodType: string\n  isPaid: boolean\n  isDelivered: boolean\n  _id: string\n  user: User\n  cartItems: CartItem[]\n  paidAt: string\n  createdAt: string\n  updatedAt: string\n  id: number\n}\n\nexport interface ShippingAddress {\n  details: string\n  phone: string\n  city: string\n}\n\nexport interface User {\n  _id: string\n  name: string\n  email: string\n  phone: string\n}\n\nexport interface CartItem {\n  count: number\n  _id: string\n  product: Product\n  price: number\n}\n\nexport interface Product {\n  subcategory: Subcategory[]\n  ratingsQuantity: number\n  _id: string\n  title: string\n  imageCover: string\n  category: Category\n  brand: Brand\n  ratingsAverage: number\n  id: string\n}\n\nexport interface Subcategory {\n  _id: string\n  name: string\n  slug: string\n  category: string\n}\n\nexport interface Category {\n  _id: string\n  name: string\n  slug: string\n  image: string\n}\n\nexport interface Brand {\n  _id: string\n  name: string\n  slug: string\n  image: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Iproduct.html":{"url":"interfaces/Iproduct.html","title":"interface - Iproduct","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Iproduct\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/iproduct.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            brand\n                                        \n                                \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            imageCover\n                                        \n                                \n                                \n                                        \n                                            images\n                                        \n                                \n                                \n                                        \n                                            price\n                                        \n                                \n                                \n                                        \n                                            quantity\n                                        \n                                \n                                \n                                        \n                                            ratingsAverage\n                                        \n                                \n                                \n                                        \n                                            ratingsQuantity\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                                \n                                        \n                                            sold\n                                        \n                                \n                                \n                                        \n                                            subcategory\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        brand\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        brand:         Category\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Category\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         Category\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Category\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imageCover\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        imageCover:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        images\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        images:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ratingsAverage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ratingsAverage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ratingsQuantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ratingsQuantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sold\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sold:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subcategory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subcategory:     Subcategory[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Subcategory[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Iproduct {\n  sold: number;\n  images: string[];\n  subcategory: Subcategory[];\n  ratingsQuantity: number;\n  _id: string;\n  title: string;\n  slug: string;\n  description: string;\n  quantity: number;\n  price: number;\n  imageCover: string;\n  category: Category;\n  brand: Category;\n  ratingsAverage: number;\n  createdAt: string;\n  updatedAt: string;\n  id: string;\n}\n\ninterface Category {\n  _id: string;\n  name: string;\n  slug: string;\n  image: string;\n}\n\ninterface Subcategory {\n  _id: string;\n  name: string;\n  slug: string;\n  category: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Iwish.html":{"url":"interfaces/Iwish.html","title":"interface - Iwish","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Iwish\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/iwish.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            __v\n                                        \n                                \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            brand\n                                        \n                                \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            imageCover\n                                        \n                                \n                                \n                                        \n                                            images\n                                        \n                                \n                                \n                                        \n                                            price\n                                        \n                                \n                                \n                                        \n                                            quantity\n                                        \n                                \n                                \n                                        \n                                            ratingsAverage\n                                        \n                                \n                                \n                                        \n                                            ratingsQuantity\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                                \n                                        \n                                            sold\n                                        \n                                \n                                \n                                        \n                                            subcategory\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        __v\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        __v:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        brand\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        brand:         Category\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Category\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         Category\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Category\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imageCover\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        imageCover:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        images\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        images:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ratingsAverage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ratingsAverage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ratingsQuantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ratingsQuantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sold\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sold:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subcategory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subcategory:     Subcategory[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Subcategory[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Iwish {\n  sold: number;\n  images: string[];\n  subcategory: Subcategory[];\n  ratingsQuantity: number;\n  _id: string;\n  title: string;\n  slug: string;\n  description: string;\n  quantity: number;\n  price: number;\n  imageCover: string;\n  category: Category;\n  brand: Category;\n  ratingsAverage: number;\n  createdAt: string;\n  updatedAt: string;\n  __v: number;\n  id: string;\n}\n\nexport interface Category {\n  _id: string;\n  name: string;\n  slug: string;\n  image: string;\n}\n\nexport interface Subcategory {\n  _id: string;\n  name: string;\n  slug: string;\n  category: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/login/login.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                authService\n                            \n                            \n                                isloading\n                            \n                            \n                                isSuccess\n                            \n                            \n                                loginForm\n                            \n                            \n                                msError\n                            \n                            \n                                    Private\n                                    Readonly\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                submitForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        submitForm\n                        \n                    \n                \n            \n            \n                \nsubmitForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/login/login.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login/login.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isloading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login/login.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login/login.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({\n     \n      email:new FormControl(null,[Validators.required,Validators.email]),\n      password:new FormControl(null,[Validators.required,Validators.pattern(/^[A-z]\\w{7,}$/)]),\n     \n    })\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login/login.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        msError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login/login.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login/login.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport{AbstractControl, FormControl, FormGroup, ReactiveFormsModule, Validators}from '@angular/forms'\nimport { AuthService } from '../../core/services/auth/auth.service';\nimport { Router, RouterLink } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  imports: [ReactiveFormsModule,RouterLink],\n  templateUrl: './login.component.html',\n  styleUrl: './login.component.scss'\n})\nexport class LoginComponent {\n  private readonly authService= inject(AuthService);\n    private readonly router = inject(Router);\n    isloading:boolean = false;\n    msError:string='';\n    isSuccess:string='';\n  \n  \n  \n    loginForm:FormGroup = new FormGroup({\n     \n      email:new FormControl(null,[Validators.required,Validators.email]),\n      password:new FormControl(null,[Validators.required,Validators.pattern(/^[A-z]\\w{7,}$/)]),\n     \n    })\n  \n  \n    submitForm():void{\n     if(this.loginForm.valid){\n      this.isloading=true;\n      this.authService.sendLoginForm(this.loginForm.value).subscribe({\n        next:(res)=>{\n      \n          if(res.message === 'success'){\n            this.isloading=false;\n           \n          setTimeout(() => {\n\n            localStorage.setItem('userToken',res.token);\n\n            this.authService.saveUserData();\n            \n            this.router.navigate(['/home']);\n          }, 500);\n\n            this.isSuccess=res.message;\n            \n          }\n        },\n\n        error:(err)=>{\n          this.isloading=false;\n         \n          this.msError= err.error.message;\n\n        }       \n      })\n     }\n    }\n  \n\n}\n\n    \n\n    \n        \n    \n        Login Now\n    \n\n    \n       \n        \n            @let emailControl=loginForm.get('email');\n            Email\n            \n\n            @if(emailControl?.errors &&emailControl?.touched ){\n            \n                \n                    \n                \n                Danger\n                \n                    \n                        @if(emailControl?.getError(\"required\")){\n                        Email is Required\n                        }\n                        @else if(emailControl?.getError(\"email\")){\n                        Entar Valid Email\n                        }\n\n\n                    \n                \n            \n            }\n\n\n\n        \n        \n            @let passwordControl=loginForm.get('password');\n            Password\n            \n            @if(passwordControl?.errors &&passwordControl?.touched ){\n            \n                \n                    \n                \n                Danger\n                \n                    \n                        @if(passwordControl?.getError(\"required\")){\n                        Password is Required\n                        }\n                        @else if(passwordControl?.getError(\"pattern\")){\n                         must start with a capital letter and be more than 7 characters long\n                        }\n\n\n                    \n                \n            \n            }\n        \n\n        \n           \n            Forgot Password\n           \n           \n            SignIn\n                @if(isloading){\n                \n                }\n            \n           \n        \n      \n        @if(isSuccess){\n            \n                {{isSuccess}}\n              \n              \n        }\n\n        @if(msError){\n            \n            \n                \n            \n            Danger\n            \n                \n                    {{msError}}\n                \n            \n        \n        }\n\n\n\n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Login Now                                   @let emailControl=loginForm.get(\\'email\\');            Email                        @if(emailControl?.errors &&emailControl?.touched ){                                                                                Danger                                                            @if(emailControl?.getError(\"required\")){                        Email is Required                        }                        @else if(emailControl?.getError(\"email\")){                        Entar Valid Email                        }                                                            }                            @let passwordControl=loginForm.get(\\'password\\');            Password                        @if(passwordControl?.errors &&passwordControl?.touched ){                                                                                Danger                                                            @if(passwordControl?.getError(\"required\")){                        Password is Required                        }                        @else if(passwordControl?.getError(\"pattern\")){                         must start with a capital letter and be more than 7 characters long                        }                                                            }                                       Forgot Password                                  SignIn                @if(isloading){                                }                                             @if(isSuccess){                            {{isSuccess}}                                    }        @if(msError){                                                                Danger                                                {{msError}}                                            }    '\n    var COMPONENTS = [{'name': 'AllOrderComponent', 'selector': 'app-all-oreder'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotpasswordComponent', 'selector': 'app-forgotpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'WishListComponent', 'selector': 'app-wish-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/navbar/navbar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n\n            \n                imports\n                \n                            RouterLink\n                            RouterLinkActive\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./navbar.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                authService\n                            \n                            \n                                cartCount\n                            \n                            \n                                    Private\n                                    Readonly\n                                CartService\n                            \n                            \n                                    Private\n                                id\n                            \n                            \n                                isLogin\n                            \n                            \n                                    \n                                navbarMenu\n                            \n                            \n                                    \n                                navbarToggle\n                            \n                            \n                                subCart\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleMenu\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isLogin\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isLogin\n                    \n                \n                \n                    \n                        Type :     InputSignal\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/layouts/navbar/navbar.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/layouts/navbar/navbar.component.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/layouts/navbar/navbar.component.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/layouts/navbar/navbar.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/layouts/navbar/navbar.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMenu\n                        \n                    \n                \n            \n            \n                \ntoggleMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/layouts/navbar/navbar.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/navbar/navbar.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cartCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                \n                    \n                        Default value : computed(()=> this.CartService.cartNumber())\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/navbar/navbar.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        CartService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CartService)\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/navbar/navbar.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PLATFORM_ID)\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/navbar/navbar.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLogin\n                        \n                    \n                \n            \n                \n                    \n                        Type :     InputSignal\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/navbar/navbar.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        navbarMenu\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('navbarMenu')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/navbar/navbar.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        navbarToggle\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('navbarToggle')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/navbar/navbar.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subCart\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/navbar/navbar.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { resolve } from 'node:path';\nimport { AfterViewInit, Component, computed, ElementRef, inject, input, InputSignal, OnDestroy, OnInit, PLATFORM_ID, Signal, ViewChild } from '@angular/core';\nimport { FlowbiteService } from '../../core/services/flowbite/flowbite.service';\nimport { RouterLink, RouterLinkActive } from '@angular/router';\nimport { AuthService } from '../../core/services/auth/auth.service';\nimport { CartService } from '../../core/services/cart/cart.service';\nimport { Subscription } from 'rxjs';\nimport { isPlatformBrowser } from '@angular/common';\n\n\n@Component({\n  selector: 'app-navbar',\n  imports: [RouterLink,RouterLinkActive],\n  templateUrl: './navbar.component.html',\n  styleUrl: './navbar.component.scss'\n})\nexport class NavbarComponent implements OnInit ,AfterViewInit,OnDestroy {\n  private readonly CartService = inject(CartService);\n  cartCount:Signal = computed(()=> this.CartService.cartNumber())\n   subCart:Subscription=new Subscription();\n   private id = inject(PLATFORM_ID)\n\n  isLogin:InputSignal =input(true);\n  private readonly authService=inject(AuthService);\n  @ViewChild('navbarToggle') navbarToggle!: ElementRef;\n  @ViewChild('navbarMenu') navbarMenu!: ElementRef;\n\n\n  ngOnInit(): void {\n\n    if(isPlatformBrowser(this.id)){\n      if(localStorage.getItem('userToken')){\n        this.subCart= this.CartService.getLogedUserCart().subscribe({\n          next:(res)=>{\n            this.CartService.cartNumber.set(res.numOfCartItems);\n          }\n         })\n      }\n    }\n \n \n    \n  }\n\n  logout():void{\n    this.authService.logOut();\n  }\n\n \n\n  ngAfterViewInit(): void {\n    this.navbarToggle.nativeElement.addEventListener('click', () => {\n      this.toggleMenu();\n    });\n  }\n\n  toggleMenu(): void {\n    const menu = this.navbarMenu.nativeElement;\n    menu.classList.toggle('hidden');\n  }\n\n\n  ngOnDestroy(): void {\n    this.subCart.unsubscribe();\n    \n  }\n\n}\n\n    \n\n    \n        \n\n\n    \n      \n          \n          \n      \n      \n          Open main menu\n          \n              \n          \n      \n      \n        @if(isLogin()){\n          \n            \n              Home\n            \n          \n            \n              product\n            \n            \n              categories\n            \n            \n              brands\n            \n            \n              wishList\n            \n            \n              All Orders\n            \n            \n          \n        }\n       \n\n\n        \n          \n            \n          \n          \n            \n          \n          \n            \n          \n          \n            \n          \n        \n\n        \n          @if(!isLogin()){\n            \n              login\n            \n            \n              register\n            \n          }\n          @else {\n            \n              \n                {{cartCount()}}\n              \n             \n            \n            \n              logOut\n            \n          }\n        \n      \n    \n  \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    Open main menu                                                      @if(isLogin()){                                    Home                                                product                                      categories                                      brands                                      wishList                                      All Orders                                          }                                                                                                                                                                         @if(!isLogin()){                          login                                      register                      }          @else {                                          {{cartCount()}}                                                                 logOut                      }                      '\n    var COMPONENTS = [{'name': 'AllOrderComponent', 'selector': 'app-all-oreder'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotpasswordComponent', 'selector': 'app-forgotpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'WishListComponent', 'selector': 'app-wish-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotfoundComponent.html":{"url":"components/NotfoundComponent.html","title":"component - NotfoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotfoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/notfound/notfound.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-notfound\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./notfound.component.html\n            \n\n\n\n            \n                styleUrl\n                ./notfound.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-notfound',\n  imports: [],\n  templateUrl: './notfound.component.html',\n  styleUrl: './notfound.component.scss'\n})\nexport class NotfoundComponent {\n\n}\n\n    \n\n    \n        \n\n\n\n\n    \n    Page Not Found\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Page Not Found'\n    var COMPONENTS = [{'name': 'AllOrderComponent', 'selector': 'app-all-oreder'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotpasswordComponent', 'selector': 'app-forgotpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'WishListComponent', 'selector': 'app-wish-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotfoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrdersService.html":{"url":"injectables/OrdersService.html","title":"injectable - OrdersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrdersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/orders/orders.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                myToken\n                            \n                            \n                                    Private\n                                    Readonly\n                                platformId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkOutPayMent\n                            \n                            \n                                getallOrder\n                            \n                            \n                                getUserOrder\n                            \n                            \n                                greateCashOrder\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/orders/orders.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkOutPayMent\n                        \n                    \n                \n            \n            \n                \ncheckOutPayMent(id: string, data: object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/orders/orders.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getallOrder\n                        \n                    \n                \n            \n            \n                \ngetallOrder()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/orders/orders.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserOrder\n                        \n                    \n                \n            \n            \n                \ngetUserOrder(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/orders/orders.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        greateCashOrder\n                        \n                    \n                \n            \n            \n                \ngreateCashOrder(id: string, data: object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/orders/orders.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        myToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/orders/orders.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        platformId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PLATFORM_ID)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/orders/orders.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrdersService {\n\n    private readonly platformId = inject(PLATFORM_ID);\n    private myToken: string = '';\n  constructor(private httpClient:HttpClient) { \n     if (isPlatformBrowser(this.platformId)) {\n          const token = localStorage.getItem('userToken');\n          this.myToken = token ? token : ''; // تجنب تمرير null أو undefined\n        }\n  }\n\n\n  checkOutPayMent(id:string,data:object):Observable{\n    return this.httpClient.post(`${environment.baseUrl}/api/v1/orders/checkout-session/${id}?url=http://localhost:4200`,\n      {\n        \"shippingAddress\":data\n    },\n    // {\n    //   headers:{\n    //     token: this.myToken\n\n    //   }\n    // }\n    )\n  }\n\n  greateCashOrder(id:string,data:object):Observable{\n    return this.httpClient.post(`${environment.baseUrl}/api/v1/orders/${id}`,{\n      \"shippingAddress\":data\n  },\n  // {\n  //   headers:{\n  //     token: this.myToken\n\n  //   }\n  // }\n\n    )\n  }\n\n\n  getallOrder():Observable{\n    return this.httpClient.get(`${environment.baseUrl}/api/v1/orders/`)\n  }\n\n\n\n\n  getUserOrder(id:string):Observable{\n    return this.httpClient.get(`${environment.baseUrl}/api/v1/orders/user/${id}`);\n  }\n\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Product.html":{"url":"interfaces/Product.html","title":"interface - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/icart.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            brand\n                                        \n                                \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            imageCover\n                                        \n                                \n                                \n                                        \n                                            quantity\n                                        \n                                \n                                \n                                        \n                                            ratingsAverage\n                                        \n                                \n                                \n                                        \n                                            subcategory\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        brand\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        brand:         Category\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Category\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         Category\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Category\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imageCover\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        imageCover:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ratingsAverage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ratingsAverage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subcategory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subcategory:     Subcategory[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Subcategory[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Icart {\n  _id: string;\n  cartOwner: string;\n  products: Product2[];\n  createdAt: string;\n  updatedAt: string;\n  __v: number;\n  totalCartPrice: number;\n}\n\nexport interface Product2 {\n  count: number;\n  _id: string;\n  product: Product;\n  price: number;\n}\n\nexport interface Product {\n  subcategory: Subcategory[];\n  _id: string;\n  title: string;\n  quantity: number;\n  imageCover: string;\n  category: Category;\n  brand: Category;\n  ratingsAverage: number;\n  id: string;\n}\n\nexport interface Category {\n  _id: string;\n  name: string;\n  slug: string;\n  image: string;\n}\n\nexport interface Subcategory {\n  _id: string;\n  name: string;\n  slug: string;\n  category: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Product-1.html":{"url":"interfaces/Product-1.html","title":"interface - Product-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/iorders.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            brand\n                                        \n                                \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            imageCover\n                                        \n                                \n                                \n                                        \n                                            ratingsAverage\n                                        \n                                \n                                \n                                        \n                                            ratingsQuantity\n                                        \n                                \n                                \n                                        \n                                            subcategory\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        brand\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        brand:         Brand\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Brand\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         Category\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Category\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imageCover\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        imageCover:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ratingsAverage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ratingsAverage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ratingsQuantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ratingsQuantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subcategory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subcategory:     Subcategory[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Subcategory[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Iorders {\n  shippingAddress: ShippingAddress\n  taxPrice: number\n  shippingPrice: number\n  totalOrderPrice: number\n  paymentMethodType: string\n  isPaid: boolean\n  isDelivered: boolean\n  _id: string\n  user: User\n  cartItems: CartItem[]\n  paidAt: string\n  createdAt: string\n  updatedAt: string\n  id: number\n}\n\nexport interface ShippingAddress {\n  details: string\n  phone: string\n  city: string\n}\n\nexport interface User {\n  _id: string\n  name: string\n  email: string\n  phone: string\n}\n\nexport interface CartItem {\n  count: number\n  _id: string\n  product: Product\n  price: number\n}\n\nexport interface Product {\n  subcategory: Subcategory[]\n  ratingsQuantity: number\n  _id: string\n  title: string\n  imageCover: string\n  category: Category\n  brand: Brand\n  ratingsAverage: number\n  id: string\n}\n\nexport interface Subcategory {\n  _id: string\n  name: string\n  slug: string\n  category: string\n}\n\nexport interface Category {\n  _id: string\n  name: string\n  slug: string\n  image: string\n}\n\nexport interface Brand {\n  _id: string\n  name: string\n  slug: string\n  image: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Product2.html":{"url":"interfaces/Product2.html","title":"interface - Product2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Product2\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/icart.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            count\n                                        \n                                \n                                \n                                        \n                                            price\n                                        \n                                \n                                \n                                        \n                                            product\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        product\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        product:         Product\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Product\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Icart {\n  _id: string;\n  cartOwner: string;\n  products: Product2[];\n  createdAt: string;\n  updatedAt: string;\n  __v: number;\n  totalCartPrice: number;\n}\n\nexport interface Product2 {\n  count: number;\n  _id: string;\n  product: Product;\n  price: number;\n}\n\nexport interface Product {\n  subcategory: Subcategory[];\n  _id: string;\n  title: string;\n  quantity: number;\n  imageCover: string;\n  category: Category;\n  brand: Category;\n  ratingsAverage: number;\n  id: string;\n}\n\nexport interface Category {\n  _id: string;\n  name: string;\n  slug: string;\n  image: string;\n}\n\nexport interface Subcategory {\n  _id: string;\n  name: string;\n  slug: string;\n  category: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProductsComponent.html":{"url":"components/ProductsComponent.html","title":"component - ProductsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProductsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/products/products.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-products\n            \n\n\n            \n                imports\n                \n                            SearchPipe\n                            RouterLink\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./products.component.html\n            \n\n\n\n            \n                styleUrl\n                ./products.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                CartService\n                            \n                            \n                                    Private\n                                id\n                            \n                            \n                                    Private\n                                    Readonly\n                                ngxSpinnerService\n                            \n                            \n                                products\n                            \n                            \n                                    Private\n                                    Readonly\n                                productsService\n                            \n                            \n                                subBroduct\n                            \n                            \n                                subCart\n                            \n                            \n                                subWishList\n                            \n                            \n                                text\n                            \n                            \n                                    Private\n                                    Readonly\n                                toastrService\n                            \n                            \n                                wishList\n                            \n                            \n                                    Private\n                                    Readonly\n                                wishlistService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToCart\n                            \n                            \n                                addToWish\n                            \n                            \n                                getProductsData\n                            \n                            \n                                isProductInWishlist\n                            \n                            \n                                loadWishList\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                saveWishList\n                            \n                            \n                                toggleWishlist\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addToCart\n                        \n                    \n                \n            \n            \n                \naddToCart(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/products/products.component.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addToWish\n                        \n                    \n                \n            \n            \n                \naddToWish(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/products/products.component.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProductsData\n                        \n                    \n                \n            \n            \n                \ngetProductsData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/products/products.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isProductInWishlist\n                        \n                    \n                \n            \n            \n                \nisProductInWishlist(productId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/products/products.component.ts:103\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadWishList\n                        \n                    \n                \n            \n            \n                \nloadWishList()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/products/products.component.ts:114\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/products/products.component.ts:127\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/products/products.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveWishList\n                        \n                    \n                \n            \n            \n                \nsaveWishList()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/products/products.component.ts:107\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleWishlist\n                        \n                    \n                \n            \n            \n                \ntoggleWishlist(productId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/products/products.component.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        CartService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CartService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/products/products.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PLATFORM_ID)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/products/products.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        ngxSpinnerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(NgxSpinnerService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/products/products.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/products/products.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        productsService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ProductsService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/products/products.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subBroduct\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/products/products.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subCart\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/products/products.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subWishList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/products/products.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/products/products.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        toastrService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ToastrService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/products/products.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        wishList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/products/products.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        wishlistService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(WishlistService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/products/products.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, OnDestroy, OnInit, PLATFORM_ID, signal, WritableSignal } from '@angular/core';\nimport { SearchPipe } from '../../core/pipes/search.pipe';\nimport { ProductsService } from '../../core/services/products/products.service';\nimport { Iproduct } from '../../shared/interfaces/iproduct';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ToastrService } from 'ngx-toastr';\nimport { CartService } from '../../core/services/cart/cart.service';\nimport { RouterLink } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { WishlistService } from '../../core/services/wishList/wishlist.service';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Component({\n  selector: 'app-products',\n  imports: [SearchPipe,RouterLink,FormsModule],\n  templateUrl: './products.component.html',\n  styleUrl: './products.component.scss'\n})\nexport class ProductsComponent implements OnInit ,OnDestroy {\n  text:string='';\n    subBroduct:Subscription=new Subscription();\n    subCart:Subscription=new Subscription();\n    subWishList: Subscription = new Subscription();\n    private id = inject(PLATFORM_ID);\n  \nprivate readonly wishlistService = inject(WishlistService);\n  private readonly productsService = inject(ProductsService);\n  private readonly toastrService = inject(ToastrService);\n  private readonly ngxSpinnerService = inject(NgxSpinnerService);\n   private readonly CartService= inject(CartService);\n  products: WritableSignal = signal([]);\n  wishList: Set = new Set(); \n\n\n\n  ngOnInit(): void {\n    this.getProductsData();\n  }\n  getProductsData(): void {\n    this.ngxSpinnerService.show()\n  this.subBroduct=  this.productsService.getAllProduct().subscribe({\n      next: (res) => {\n      \n        this.products.set(res.data)\n        this.ngxSpinnerService.hide()\n      },\n    \n\n    })\n  }\n\n  addToCart(id: string): void {\n   this.subCart= this.CartService.addProductToCart(id).subscribe({\n      next: (res) => {\n       \n        if (res.status === \"success\") {\n          this.toastrService.success(res.message, 'Fresh Cart')\n          this.CartService.cartNumber.set(res.numOfCartItems);\n        \n        }\n\n      }\n    })\n    \n\n\n  }\n\n\n\n\n\n\n\n\n  addToWish(id: string): void {\n    this.subWishList = this.wishlistService.addProductToWishList(id).subscribe({\n      next: (res) => {\n       \n        if (res.status === \"success\") {\n          this.toastrService.success(res.message, 'Fresh Cart');\n          this.toggleWishlist(id); \n        }\n\n        \n      }\n\n    })\n\n  }\n\n toggleWishlist(productId: string): void {\n    if (this.wishList.has(productId)) {\n      this.wishList.delete(productId);\n    } else {\n      this.wishList.add(productId);\n    }\n    this.saveWishList();\n  }\n\n  isProductInWishlist(productId: string): boolean {\n    return this.wishList.has(productId);\n  }\n\n  saveWishList(): void {\n    if(isPlatformBrowser(this.id)){\n      localStorage.setItem('wishList', JSON.stringify(Array.from(this.wishList)));\n    }\n\n  }\n\n  loadWishList(): void {\n    const storedWishlist = localStorage.getItem('wishList');\n    if (storedWishlist) {\n      this.wishList = new Set(JSON.parse(storedWishlist));\n    }\n  }\n\n\n\n\n\n\n\n  ngOnDestroy(): void {\n    this.subBroduct.unsubscribe();\n    this.subCart.unsubscribe();\n    \n  }\n\n}\n\n    \n\n    \n        \n\n    Products\n\n    \n        \n    \n\n    \n        @for (product of products() | search : text ; track product.id) {\n        \n            \n                \n                    \n                \n                \n                     {{product.category.name}}\n                     {{product.title.split(\" \",2).join(' ')}}\n                    \n                        {{product.price}} EGP\n                        \n                            @for (num of [1,2,3,4,5].slice(0, product.ratingsAverage); track $index) {\n\n                            \n                            }\n                            @if(product.ratingsAverage %1 !==0){\n                            \n\n                            }\n                            {{product.ratingsAverage}}\n                        \n                    \n                \n            \n            \n                \n              \n            Add To Card\n        \n        }\n\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Products                            @for (product of products() | search : text ; track product.id) {                                                                                                             {{product.category.name}}                     {{product.title.split(\" \",2).join(\\' \\')}}                                            {{product.price}} EGP                                                    @for (num of [1,2,3,4,5].slice(0, product.ratingsAverage); track $index) {                                                        }                            @if(product.ratingsAverage %1 !==0){                                                        }                            {{product.ratingsAverage}}                                                                                                                              Add To Card                }    '\n    var COMPONENTS = [{'name': 'AllOrderComponent', 'selector': 'app-all-oreder'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotpasswordComponent', 'selector': 'app-forgotpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'WishListComponent', 'selector': 'app-wish-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProductsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductsService.html":{"url":"injectables/ProductsService.html","title":"injectable - ProductsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/products/products.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllProduct\n                            \n                            \n                                getSpecificProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/products/products.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAllProduct\n                        \n                    \n                \n            \n            \n                \ngetAllProduct()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/products/products.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSpecificProduct\n                        \n                    \n                \n            \n            \n                \ngetSpecificProduct(id: string | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/products/products.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductsService {\n\n  constructor( private httpClient:HttpClient) { }\n  getAllProduct():Observable{\n   return this.httpClient.get('https://ecommerce.routemisr.com/api/v1/products')\n\n  }\n  getSpecificProduct(id:string|null):Observable{\n    return this.httpClient.get(`https://ecommerce.routemisr.com/api/v1/products/${id}`)\n \n   }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/register/register.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n\n            \n                imports\n                \n                            ReactiveFormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n            \n                styleUrl\n                ./register.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                authService\n                            \n                            \n                                isloading\n                            \n                            \n                                isSuccess\n                            \n                            \n                                msError\n                            \n                            \n                                register\n                            \n                            \n                                    Private\n                                    Readonly\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirmPassword\n                            \n                            \n                                submitForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmPassword\n                        \n                    \n                \n            \n            \n                \nconfirmPassword(group: AbstractControl)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/register/register.component.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                        AbstractControl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { misMatch: boolean; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitForm\n                        \n                    \n                \n            \n            \n                \nsubmitForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/register/register.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/register/register.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isloading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/register/register.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/register/register.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        msError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/register/register.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({\n    name:new FormControl(null,[Validators.required,Validators.minLength(3),Validators.maxLength(20)]),\n    email:new FormControl(null,[Validators.required,Validators.email]),\n    password:new FormControl(null,[Validators.required,Validators.pattern(/^[A-z]\\w{7,}$/)]),\n    rePassword:new FormControl(null,[Validators.required]),\n    phone:new FormControl(null,[Validators.required,Validators.pattern(/^01[0125][0-9]{8}$/)]),\n  },{validators:this.confirmPassword})\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/register/register.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/register/register.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport{AbstractControl, FormControl, FormGroup, ReactiveFormsModule, Validators}from '@angular/forms'\nimport { AuthService } from '../../core/services/auth/auth.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-register',\n  imports: [ReactiveFormsModule],\n  templateUrl: './register.component.html',\n  styleUrl: './register.component.scss'\n})\nexport class RegisterComponent {\n  private readonly authService= inject(AuthService);\n  private readonly router = inject(Router);\n  isloading:boolean = false;\n  msError:string='';\n  isSuccess:string='';\n\n\n\n  register:FormGroup = new FormGroup({\n    name:new FormControl(null,[Validators.required,Validators.minLength(3),Validators.maxLength(20)]),\n    email:new FormControl(null,[Validators.required,Validators.email]),\n    password:new FormControl(null,[Validators.required,Validators.pattern(/^[A-z]\\w{7,}$/)]),\n    rePassword:new FormControl(null,[Validators.required]),\n    phone:new FormControl(null,[Validators.required,Validators.pattern(/^01[0125][0-9]{8}$/)]),\n  },{validators:this.confirmPassword})\n\n\n  submitForm():void{\n   if(this.register.valid){\n    this.isloading=true;\n    this.authService.sendRegisterForm(this.register.value).subscribe({\n      next:(res)=>{\n     \n        if(res.message === 'success'){\n          this.isloading=false;\n         \n        setTimeout(() => {\n          this.router.navigate(['/login']);\n        }, 500);\n          this.isSuccess=res.message;\n          \n        }\n      },\n      error:(err:HttpErrorResponse)=>{\n        this.isloading=false;\n       \n        this.msError= err.error.message;\n\n\n      }\n       \n      \n    })\n   }\n   else{\n    this.register.markAllAsTouched();\n   }\n  }\n\n  confirmPassword(group:AbstractControl){\n    const password= group.get('password')?.value;\n    const rePassword= group.get('rePassword')?.value;\n    return password===rePassword ? null :{ misMatch: true}\n\n  }\n}\n\n    \n\n    \n        \n    \n        Register Now\n    \n\n    \n        \n            @let nameControl=register.get('name');\n            Name\n            \n            @if(nameControl?.errors &&nameControl?.touched ){\n            \n                \n                    \n                \n                Danger\n                \n                    \n                        @if(nameControl?.getError(\"required\")){\n                        Name is required\n                        }\n                        @else if(nameControl?.getError(\"minlength\")){\n                        Name minLength : 3 \n                        }\n                        @else if(nameControl?.getError(\"maxlength\")){\n                        Name maxLength : 20\n                        }\n\n\n\n                    \n                \n            \n            }\n\n\n\n\n        \n        \n            @let emailControl=register.get('email');\n            Email\n            \n\n            @if(emailControl?.errors &&emailControl?.touched ){\n            \n                \n                    \n                \n                Danger\n                \n                    \n                        @if(emailControl?.getError(\"required\")){\n                        Email is Required\n                        }\n                        @else if(emailControl?.getError(\"email\")){\n                        Entar Valid Email\n                        }\n\n\n                    \n                \n            \n            }\n\n\n\n        \n        \n            @let passwordControl=register.get('password');\n            Password\n            \n            @if(passwordControl?.errors &&passwordControl?.touched ){\n            \n                \n                    \n                \n                Danger\n                \n                    \n                        @if(passwordControl?.getError(\"required\")){\n                        Password is Required\n                        }\n                        @else if(passwordControl?.getError(\"pattern\")){\n                         must start with a capital letter and be more than 7 characters long\n                        }\n\n\n                    \n                \n            \n            }\n        \n        \n            rePassword\n            \n\n            @if(register.getError('misMatch') && register.get('rePassword')?.touched){\n            \n                \n                    \n                \n                Danger\n                \n                    \n                        Password Confirmation is incorrect\n\n\n                    \n                \n            \n            }\n            @else if(register.get('rePassword')?.getError('required') && register.get('rePassword')?.touched ){\n            \n                \n                    \n                \n                Danger\n                \n                    \n\n                        rePassword is Required\n                    \n                \n            \n            }\n        \n        \n            @let phoneControl=register.get('phone');\n            Phone\n            \n\n            @if(phoneControl?.errors &&phoneControl?.touched ){\n            \n                \n                    \n                \n                Danger\n                \n                    \n                        @if(phoneControl?.getError(\"required\")){\n                        Phone is Required\n                        }\n                        @else if(phoneControl?.getError(\"pattern\")){\n                         Enter Valid Phone\n                        }\n\n\n                    \n                \n            \n            }\n        \n        SignUp\n            @if(isloading){\n            \n            }\n        \n        @if(isSuccess){\n            \n                {{isSuccess}}\n              \n              \n        }\n\n        @if(msError){\n            \n            \n                \n            \n            Danger\n            \n                \n                    {{msError}}\n                \n            \n        \n        }\n\n\n\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Register Now                            @let nameControl=register.get(\\'name\\');            Name                        @if(nameControl?.errors &&nameControl?.touched ){                                                                                Danger                                                            @if(nameControl?.getError(\"required\")){                        Name is required                        }                        @else if(nameControl?.getError(\"minlength\")){                        Name minLength : 3                         }                        @else if(nameControl?.getError(\"maxlength\")){                        Name maxLength : 20                        }                                                            }                            @let emailControl=register.get(\\'email\\');            Email                        @if(emailControl?.errors &&emailControl?.touched ){                                                                                Danger                                                            @if(emailControl?.getError(\"required\")){                        Email is Required                        }                        @else if(emailControl?.getError(\"email\")){                        Entar Valid Email                        }                                                            }                            @let passwordControl=register.get(\\'password\\');            Password                        @if(passwordControl?.errors &&passwordControl?.touched ){                                                                                Danger                                                            @if(passwordControl?.getError(\"required\")){                        Password is Required                        }                        @else if(passwordControl?.getError(\"pattern\")){                         must start with a capital letter and be more than 7 characters long                        }                                                            }                            rePassword                        @if(register.getError(\\'misMatch\\') && register.get(\\'rePassword\\')?.touched){                                                                                Danger                                                            Password Confirmation is incorrect                                                            }            @else if(register.get(\\'rePassword\\')?.getError(\\'required\\') && register.get(\\'rePassword\\')?.touched ){                                                                                Danger                                                            rePassword is Required                                                            }                            @let phoneControl=register.get(\\'phone\\');            Phone                        @if(phoneControl?.errors &&phoneControl?.touched ){                                                                                Danger                                                            @if(phoneControl?.getError(\"required\")){                        Phone is Required                        }                        @else if(phoneControl?.getError(\"pattern\")){                         Enter Valid Phone                        }                                                            }                SignUp            @if(isloading){                        }                @if(isSuccess){                            {{isSuccess}}                                    }        @if(msError){                                                                Danger                                                {{msError}}                                            }    '\n    var COMPONENTS = [{'name': 'AllOrderComponent', 'selector': 'app-all-oreder'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotpasswordComponent', 'selector': 'app-forgotpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'WishListComponent', 'selector': 'app-wish-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/SearchPipe.html":{"url":"pipes/SearchPipe.html","title":"pipe - SearchPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  SearchPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/pipes/search.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        search\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(arrayOfObject: any[], term: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/pipes/search.pipe.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                arrayOfObject\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                term\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     any[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'search'\n})\nexport class SearchPipe implements PipeTransform {\n\n  transform(arrayOfObject: any[], term: string): any[] {\n\n    return arrayOfObject.filter(  (item)=> item.title.toLowerCase().includes(term.toLowerCase()) );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ShippingAddress.html":{"url":"interfaces/ShippingAddress.html","title":"interface - ShippingAddress","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ShippingAddress\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/iorders.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            city\n                                        \n                                \n                                \n                                        \n                                            details\n                                        \n                                \n                                \n                                        \n                                            phone\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        details\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        details:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Iorders {\n  shippingAddress: ShippingAddress\n  taxPrice: number\n  shippingPrice: number\n  totalOrderPrice: number\n  paymentMethodType: string\n  isPaid: boolean\n  isDelivered: boolean\n  _id: string\n  user: User\n  cartItems: CartItem[]\n  paidAt: string\n  createdAt: string\n  updatedAt: string\n  id: number\n}\n\nexport interface ShippingAddress {\n  details: string\n  phone: string\n  city: string\n}\n\nexport interface User {\n  _id: string\n  name: string\n  email: string\n  phone: string\n}\n\nexport interface CartItem {\n  count: number\n  _id: string\n  product: Product\n  price: number\n}\n\nexport interface Product {\n  subcategory: Subcategory[]\n  ratingsQuantity: number\n  _id: string\n  title: string\n  imageCover: string\n  category: Category\n  brand: Brand\n  ratingsAverage: number\n  id: string\n}\n\nexport interface Subcategory {\n  _id: string\n  name: string\n  slug: string\n  category: string\n}\n\nexport interface Category {\n  _id: string\n  name: string\n  slug: string\n  image: string\n}\n\nexport interface Brand {\n  _id: string\n  name: string\n  slug: string\n  image: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Subcategory.html":{"url":"interfaces/Subcategory.html","title":"interface - Subcategory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Subcategory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/icart.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Icart {\n  _id: string;\n  cartOwner: string;\n  products: Product2[];\n  createdAt: string;\n  updatedAt: string;\n  __v: number;\n  totalCartPrice: number;\n}\n\nexport interface Product2 {\n  count: number;\n  _id: string;\n  product: Product;\n  price: number;\n}\n\nexport interface Product {\n  subcategory: Subcategory[];\n  _id: string;\n  title: string;\n  quantity: number;\n  imageCover: string;\n  category: Category;\n  brand: Category;\n  ratingsAverage: number;\n  id: string;\n}\n\nexport interface Category {\n  _id: string;\n  name: string;\n  slug: string;\n  image: string;\n}\n\nexport interface Subcategory {\n  _id: string;\n  name: string;\n  slug: string;\n  category: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Subcategory-1.html":{"url":"interfaces/Subcategory-1.html","title":"interface - Subcategory-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Subcategory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/iorders.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Iorders {\n  shippingAddress: ShippingAddress\n  taxPrice: number\n  shippingPrice: number\n  totalOrderPrice: number\n  paymentMethodType: string\n  isPaid: boolean\n  isDelivered: boolean\n  _id: string\n  user: User\n  cartItems: CartItem[]\n  paidAt: string\n  createdAt: string\n  updatedAt: string\n  id: number\n}\n\nexport interface ShippingAddress {\n  details: string\n  phone: string\n  city: string\n}\n\nexport interface User {\n  _id: string\n  name: string\n  email: string\n  phone: string\n}\n\nexport interface CartItem {\n  count: number\n  _id: string\n  product: Product\n  price: number\n}\n\nexport interface Product {\n  subcategory: Subcategory[]\n  ratingsQuantity: number\n  _id: string\n  title: string\n  imageCover: string\n  category: Category\n  brand: Brand\n  ratingsAverage: number\n  id: string\n}\n\nexport interface Subcategory {\n  _id: string\n  name: string\n  slug: string\n  category: string\n}\n\nexport interface Category {\n  _id: string\n  name: string\n  slug: string\n  image: string\n}\n\nexport interface Brand {\n  _id: string\n  name: string\n  slug: string\n  image: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Subcategory-2.html":{"url":"interfaces/Subcategory-2.html","title":"interface - Subcategory-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Subcategory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/iproduct.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Iproduct {\n  sold: number;\n  images: string[];\n  subcategory: Subcategory[];\n  ratingsQuantity: number;\n  _id: string;\n  title: string;\n  slug: string;\n  description: string;\n  quantity: number;\n  price: number;\n  imageCover: string;\n  category: Category;\n  brand: Category;\n  ratingsAverage: number;\n  createdAt: string;\n  updatedAt: string;\n  id: string;\n}\n\ninterface Category {\n  _id: string;\n  name: string;\n  slug: string;\n  image: string;\n}\n\ninterface Subcategory {\n  _id: string;\n  name: string;\n  slug: string;\n  category: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Subcategory-3.html":{"url":"interfaces/Subcategory-3.html","title":"interface - Subcategory-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Subcategory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/iwish.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Iwish {\n  sold: number;\n  images: string[];\n  subcategory: Subcategory[];\n  ratingsQuantity: number;\n  _id: string;\n  title: string;\n  slug: string;\n  description: string;\n  quantity: number;\n  price: number;\n  imageCover: string;\n  category: Category;\n  brand: Category;\n  ratingsAverage: number;\n  createdAt: string;\n  updatedAt: string;\n  __v: number;\n  id: string;\n}\n\nexport interface Category {\n  _id: string;\n  name: string;\n  slug: string;\n  image: string;\n}\n\nexport interface Subcategory {\n  _id: string;\n  name: string;\n  slug: string;\n  category: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/iorders.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            phone\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Iorders {\n  shippingAddress: ShippingAddress\n  taxPrice: number\n  shippingPrice: number\n  totalOrderPrice: number\n  paymentMethodType: string\n  isPaid: boolean\n  isDelivered: boolean\n  _id: string\n  user: User\n  cartItems: CartItem[]\n  paidAt: string\n  createdAt: string\n  updatedAt: string\n  id: number\n}\n\nexport interface ShippingAddress {\n  details: string\n  phone: string\n  city: string\n}\n\nexport interface User {\n  _id: string\n  name: string\n  email: string\n  phone: string\n}\n\nexport interface CartItem {\n  count: number\n  _id: string\n  product: Product\n  price: number\n}\n\nexport interface Product {\n  subcategory: Subcategory[]\n  ratingsQuantity: number\n  _id: string\n  title: string\n  imageCover: string\n  category: Category\n  brand: Brand\n  ratingsAverage: number\n  id: string\n}\n\nexport interface Subcategory {\n  _id: string\n  name: string\n  slug: string\n  category: string\n}\n\nexport interface Category {\n  _id: string\n  name: string\n  slug: string\n  image: string\n}\n\nexport interface Brand {\n  _id: string\n  name: string\n  slug: string\n  image: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WishListComponent.html":{"url":"components/WishListComponent.html","title":"component - WishListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  WishListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/wish-list/wish-list.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-wish-list\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./wish-list.component.html\n            \n\n\n\n            \n                styleUrl\n                ./wish-list.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                cartService\n                            \n                            \n                                subCart\n                            \n                            \n                                subWish\n                            \n                            \n                                    Private\n                                    Readonly\n                                toastrService\n                            \n                            \n                                wishData\n                            \n                            \n                                    Private\n                                    Readonly\n                                wishlistService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToCart\n                            \n                            \n                                getlogged\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removeItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addToCart\n                        \n                    \n                \n            \n            \n                \naddToCart(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/wish-list/wish-list.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getlogged\n                        \n                    \n                \n            \n            \n                \ngetlogged()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/wish-list/wish-list.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/wish-list/wish-list.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/wish-list/wish-list.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        cartService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CartService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/wish-list/wish-list.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subCart\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/wish-list/wish-list.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subWish\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/wish-list/wish-list.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        toastrService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ToastrService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/wish-list/wish-list.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        wishData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Iwish[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/wish-list/wish-list.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        wishlistService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(WishlistService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/wish-list/wish-list.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, OnInit, signal, WritableSignal } from '@angular/core';\nimport { WishlistService } from '../../core/services/wishList/wishlist.service';\nimport { Subscription } from 'rxjs';\nimport { Iwish } from '../../shared/interfaces/iwish';\nimport { CartService } from '../../core/services/cart/cart.service';\nimport { ToastrService } from 'ngx-toastr';\n\n\n\n@Component({\n  selector: 'app-wish-list',\n  imports: [],\n  templateUrl: './wish-list.component.html',\n  styleUrl: './wish-list.component.scss'\n})\nexport class WishListComponent implements OnInit {\n  private readonly wishlistService = inject(WishlistService);\n  private readonly cartService = inject(CartService);\n  private readonly toastrService = inject(ToastrService);\n\n  subWish:Subscription = new Subscription();\n  subCart:Subscription = new Subscription();\n  wishData: Iwish[]= [] ;\n\n  ngOnInit(): void {\n    this.getlogged();\n    \n  }\n\n  getlogged():void{\n     this.wishlistService.getLoggedWishList().subscribe({\n      next:(res)=>{\n    \n        this.wishData=res.data\n      }\n     })\n  }\n\n  addToCart(id: string): void {\n    this.subCart= this.cartService.addProductToCart(id).subscribe({\n       next: (res) => {\n       \n         if (res.status === \"success\") {\n           this.toastrService.success(res.message, 'Fresh Cart')\n           this.cartService.cartNumber.set(res.numOfCartItems);\n           this.removeItem(id);\n         }\n \n       }\n     })\n     \n \n \n   }\n \n    removeItem(id:string):void{\n      this.subWish=  this.wishlistService.removeProductFromWishList(id).subscribe({\n        next:(res)=>{\n          this.wishData = this.wishData.filter(product => product.id !== id);\n        \n        }\n      }\n    )\n    }\n}\n\n    \n\n    \n        \n\n    \n        Wish List\n    \n        \n          \n    \n          @for (product of wishData; track product.id) {\n            \n                \n                    \n            \n                \n                \n                    \n                         {{product.title.split(\" \",2).join(' ')}}\n                        {{product.price }} EGP\n                        Remove\n    \n                    \n    \n                    \n                   \n                    \n                        \n                        Add To Card\n\n                    \n    \n                \n            \n          }\n         \n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Wish List                                    @for (product of wishData; track product.id) {                                                                                                                                         {{product.title.split(\" \",2).join(\\' \\')}}                        {{product.price }} EGP                        Remove                                                                                                                                       Add To Card                                                              }                         '\n    var COMPONENTS = [{'name': 'AllOrderComponent', 'selector': 'app-all-oreder'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotpasswordComponent', 'selector': 'app-forgotpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'WishListComponent', 'selector': 'app-wish-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WishListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WishlistService.html":{"url":"injectables/WishlistService.html","title":"injectable - WishlistService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WishlistService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/wishList/wishlist.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                myToken\n                            \n                            \n                                    Private\n                                    Readonly\n                                platformId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addProductToWishList\n                            \n                            \n                                getLoggedWishList\n                            \n                            \n                                removeProductFromWishList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/wishList/wishlist.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addProductToWishList\n                        \n                    \n                \n            \n            \n                \naddProductToWishList(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/wishList/wishlist.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLoggedWishList\n                        \n                    \n                \n            \n            \n                \ngetLoggedWishList()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/wishList/wishlist.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeProductFromWishList\n                        \n                    \n                \n            \n            \n                \nremoveProductFromWishList(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/wishList/wishlist.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        myToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/wishList/wishlist.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        platformId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PLATFORM_ID)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/wishList/wishlist.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WishlistService {\n  private readonly platformId = inject(PLATFORM_ID);\n  private myToken: string = '';\n\n  constructor(private httpClient :HttpClient) {\n      if (isPlatformBrowser(this.platformId)) {\n              const token = localStorage.getItem('userToken');\n              this.myToken = token ? token : ''; // تجنب تمرير null أو undefined\n            }\n   }\n\n\n\n  addProductToWishList(id:string ):Observable{\n\n    return this.httpClient.post(`${environment.baseUrl}/api/v1/wishlist`,\n      {\n        \"productId\": id\n    }\n    // ,{\n    //   headers:{\n    //     token:this.myToken\n    //   }\n      \n    // }\n  );\n  }\n  removeProductFromWishList(id:string):Observable{\n    return this.httpClient.delete(`${environment.baseUrl}/api/v1/wishlist/${id}`,\n      // {\n      //   headers:{\n      //     token:this.myToken\n      //   }\n        \n      // }\n    )\n  }\n\n\n  getLoggedWishList():Observable{\n    return this.httpClient.get(`${environment.baseUrl}/api/v1/wishlist`,\n      // {\n      //   headers:{\n      //     token:this.myToken\n      //   }\n        \n      // }\n    )\n  }\n\n\n\n\n\n\n\n\n\n\n\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            serverConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.routes.server.ts\n            \n            variable\n            serverRoutes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/guards/auth.guard.ts\n            \n            variable\n            authGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/guards/login.guard.ts\n            \n            variable\n            loginGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/interceptors/errors/errors.interceptor.ts\n            \n            variable\n            errorsInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/interceptors/headers/headers.interceptor.ts\n            \n            variable\n            headersInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/interceptors/loading/loading.interceptor.ts\n            \n            variable\n            loadingInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/pipes/search.pipe.ts\n            \n            pipe\n            SearchPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/core/services/brands/brands.service.ts\n            \n            injectable\n            BrandsService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/cart/cart.service.ts\n            \n            injectable\n            CartService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/core/services/categories/categories.service.ts\n            \n            injectable\n            CategoriesService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/services/flowbite/flowbite.service.ts\n            \n            injectable\n            FlowbiteService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/orders/orders.service.ts\n            \n            injectable\n            OrdersService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/services/products/products.service.ts\n            \n            injectable\n            ProductsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/services/wishList/wishlist.service.ts\n            \n            injectable\n            WishlistService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/layouts/auth-layout/auth-layout.component.ts\n            \n            component\n            AuthLayoutComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/layouts/blank-layout/blank-layout.component.ts\n            \n            component\n            BlankLayoutComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/layouts/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/layouts/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/pages/all-order/all-order.component.ts\n            \n            component\n            AllOrderComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/pages/brands/brands.component.ts\n            \n            component\n            BrandsComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/pages/cart/cart.component.ts\n            \n            component\n            CartComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/pages/categories/categories.component.ts\n            \n            component\n            CategoriesComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/pages/checkout/checkout.component.ts\n            \n            component\n            CheckoutComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/pages/details/details.component.ts\n            \n            component\n            DetailsComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/pages/forgotpassword/forgotpassword.component.ts\n            \n            component\n            ForgotpasswordComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/pages/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                src/app/pages/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/pages/notfound/notfound.component.ts\n            \n            component\n            NotfoundComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/products/products.component.ts\n            \n            component\n            ProductsComponent\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/app/pages/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/pages/wish-list/wish-list.component.ts\n            \n            component\n            WishListComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/ibrands.ts\n            \n            interface\n            Ibrands\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/icart.ts\n            \n            interface\n            Category\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/icart.ts\n            \n            interface\n            Icart\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/icart.ts\n            \n            interface\n            Product\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/icart.ts\n            \n            interface\n            Product2\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/icart.ts\n            \n            interface\n            Subcategory\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/icategories.ts\n            \n            interface\n            Icategories\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/iorders.ts\n            \n            interface\n            Brand\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/iorders.ts\n            \n            interface\n            CartItem\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/iorders.ts\n            \n            interface\n            Category\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/iorders.ts\n            \n            interface\n            Iorders\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/iorders.ts\n            \n            interface\n            Product\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/iorders.ts\n            \n            interface\n            ShippingAddress\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/iorders.ts\n            \n            interface\n            Subcategory\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/iorders.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/iproduct.ts\n            \n            interface\n            Category\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/iproduct.ts\n            \n            interface\n            Iproduct\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/iproduct.ts\n            \n            interface\n            Subcategory\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/iwish.ts\n            \n            interface\n            Category\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/iwish.ts\n            \n            interface\n            Iwish\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/iwish.ts\n            \n            interface\n            Subcategory\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/main.server.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            angularApp\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            app\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            browserDistFolder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            reqHandler\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            serverDistFolder\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^19.0.0\n        \n            @angular/common : ^19.0.0\n        \n            @angular/compiler : ^19.0.0\n        \n            @angular/core : ^19.0.0\n        \n            @angular/forms : ^19.0.0\n        \n            @angular/platform-browser : ^19.0.0\n        \n            @angular/platform-browser-dynamic : ^19.0.0\n        \n            @angular/platform-server : ^19.0.0\n        \n            @angular/router : ^19.0.0\n        \n            @angular/ssr : ^19.0.6\n        \n            @fortawesome/fontawesome-free : ^6.7.2\n        \n            @primeng/themes : ^19.0.7\n        \n            @sweetalert2/ngx-sweetalert2 : ^13.0.0\n        \n            express : ^4.18.2\n        \n            flowbite : ^3.1.2\n        \n            jwt-decode : ^4.0.0\n        \n            ngx-owl-carousel-o : ^19.0.0\n        \n            ngx-spinner : ^19.0.0\n        \n            ngx-toastr : ^19.0.0\n        \n            primeng : ^19.0.7\n        \n            rxjs : ~7.8.0\n        \n            sweetalert2 : ^11.17.2\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nE-Commerce\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    18 Components\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    21 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            angularApp   (src/.../server.ts)\n                        \n                        \n                            app   (src/.../server.ts)\n                        \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            authGuard   (src/.../auth.guard.ts)\n                        \n                        \n                            bootstrap   (src/.../main.server.ts)\n                        \n                        \n                            browserDistFolder   (src/.../server.ts)\n                        \n                        \n                            config   (src/.../app.config.server.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            errorsInterceptor   (src/.../errors.interceptor.ts)\n                        \n                        \n                            headersInterceptor   (src/.../headers.interceptor.ts)\n                        \n                        \n                            loadingInterceptor   (src/.../loading.interceptor.ts)\n                        \n                        \n                            loginGuard   (src/.../login.guard.ts)\n                        \n                        \n                            reqHandler   (src/.../server.ts)\n                        \n                        \n                            serverConfig   (src/.../app.config.server.ts)\n                        \n                        \n                            serverDistFolder   (src/.../server.ts)\n                        \n                        \n                            serverRoutes   (src/.../app.routes.server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        angularApp\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new AngularNodeAppEngine()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Default value : express()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        browserDistFolder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : resolve(serverDistFolder, '../browser')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reqHandler\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createNodeRequestHandler(app)\n                    \n                \n\n            \n                \n                    The request handler used by the Angular CLI (dev-server and during build).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverDistFolder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : dirname(fileURLToPath(import.meta.url))\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n\n  providers: [\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes,withInMemoryScrolling({scrollPositionRestoration:'top'} ,),withViewTransitions(),withHashLocation()),\n    provideClientHydration(withEventReplay()),\n    provideHttpClient(withFetch(),withInterceptors([errorsInterceptor,loadingInterceptor , headersInterceptor])),\n    provideAnimations(), \n    provideAnimationsAsync(),\n    providePrimeNG({\n        theme: {\n            preset: Aura\n        }\n    }),\n    provideToastr(), \n    importProvidersFrom(NgxSpinnerModule)\n   \n  ]\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/guards/auth.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (route, state) => {\n\nconst _router = inject(Router)\nconst id = inject(PLATFORM_ID)\n\nif(isPlatformBrowser(id)){\n  if(localStorage.getItem('userToken')!==null){\n    return true;\n  }\n  else{\n    _router.navigate(['/login'])\n    return false;\n  }\n}\nelse{\n  return true\n}\n\n \n}\n                    \n                \n\n\n        \n    \n\n    src/main.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => bootstrapApplication(AppComponent, config)\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mergeApplicationConfig(appConfig, serverConfig)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideServerRendering(),\n    provideServerRoutesConfig(serverRoutes)\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    baseUrl:'https://ecommerce.routemisr.com'\n }\n                    \n                \n\n\n        \n    \n\n    src/app/core/interceptors/errors/errors.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        errorsInterceptor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpInterceptorFn\n\n                    \n                \n                \n                    \n                        Default value : (req, next) => {\n  const toastrService = inject(ToastrService)\n\n\n  return next(req).pipe(catchError((err)=>{\n    console.log(err.error.message)\n    toastrService.error(err.error.message ,'FreshCart')\n\n       return throwError( ()=> err    )\n  }));\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/interceptors/headers/headers.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        headersInterceptor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpInterceptorFn\n\n                    \n                \n                \n                    \n                        Default value : (req, next) => {\n  const pLATFORM_ID = inject(PLATFORM_ID)\n\n\n  if(isPlatformBrowser(pLATFORM_ID)){\n\n\n    if (localStorage.getItem('userToken') !== null) {\n\n\n      req = req.clone({\n        setHeaders: {\n          token: localStorage.getItem('userToken')!\n        }\n      });\n\n\n    }\n  }\n\n  return next(req);\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/interceptors/loading/loading.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        loadingInterceptor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpInterceptorFn\n\n                    \n                \n                \n                    \n                        Default value : (req, next) => {\n  const ngxSpinnerService = inject(NgxSpinnerService)\n \n   \nngxSpinnerService.show();\n  return next(req).pipe(finalize(  ()=>{\n    ngxSpinnerService.hide();\n  }));\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/guards/login.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        loginGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (route, state) => {\n  const _router = inject(Router);\n  const id = inject(PLATFORM_ID)\n  \n   if(isPlatformBrowser(id)){\n    if(localStorage.getItem('userToken')!==null){\n      _router.navigate(['/home'])\n      return false;\n    }\n    else{\n      return true;\n    }\n   }\n   else{\n    return false;\n   }\n}\n                    \n                \n\n\n        \n    \n\n    src/app/app.routes.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        serverRoutes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ServerRoute[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    path: '**',\n    renderMode: RenderMode.Client\n  }\n  \n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
